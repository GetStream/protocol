components:
  schemas:
    AIImageConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AWSRekognitionRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    AITextConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        profile:
          type: string
          x-stream-index: "003"
        rules:
          items:
            $ref: '#/components/schemas/BodyguardRule'
          type: array
          x-stream-index: "004"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "005"
      required:
      - enabled
      - profile
      - rules
      - severity_rules
      type: object
    AIVideoConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AWSRekognitionRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    APIError:
      nullable: true
      properties:
        StatusCode:
          description: Response HTTP status code
          format: int32
          title: Status code
          type: integer
          x-stream-index: "004"
        code:
          description: API error code
          format: int32
          title: Code
          type: integer
          x-stream-index: "001"
        details:
          description: Additional error-specific information
          items:
            type: integer
          title: Details
          type: array
          x-stream-index: "007"
        duration:
          description: Request duration
          title: Duration
          type: string
          x-stream-index: "005"
        exception_fields:
          additionalProperties:
            type: string
          description: Additional error info
          title: Exception fields
          type: object
          x-stream-index: "003"
        message:
          description: Message describing an error
          title: Message
          type: string
          x-stream-index: "002"
        more_info:
          description: URL with additional information
          title: More info
          type: string
          x-stream-index: "006"
        unrecoverable:
          description: Flag that indicates if the error is unrecoverable, requests
            that return unrecoverable errors should not be retried, this error only
            applies to the request that caused it
          title: Unrecoverable
          type: boolean
          x-stream-index: "008"
      required:
      - code
      - message
      - StatusCode
      - duration
      - more_info
      - details
      title: Error response
      type: object
    APNConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "005"
        auth_key:
          type: string
          x-stream-index: "006.001"
        auth_type:
          enum:
          - certificate
          - token
          type: string
          x-stream-index: "001"
        bundle_id:
          type: string
          x-stream-index: "004"
        development:
          type: boolean
          x-stream-index: "002"
        host:
          type: string
          x-stream-index: "003"
        key_id:
          type: string
          x-stream-index: "006.002"
        notification_template:
          type: string
          x-stream-index: "008"
        p12_cert:
          type: string
          x-stream-index: "007.001"
        team_id:
          type: string
          x-stream-index: "006.003"
      type: object
    APNConfigFields:
      properties:
        auth_key:
          type: string
          x-stream-index: "009"
        auth_type:
          type: string
          x-stream-index: "003"
        bundle_id:
          type: string
          x-stream-index: "006"
        development:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        host:
          type: string
          x-stream-index: "005"
        key_id:
          type: string
          x-stream-index: "008"
        notification_template:
          type: string
          x-stream-index: "004"
        p12_cert:
          type: string
          x-stream-index: "010"
        team_id:
          type: string
          x-stream-index: "007"
      required:
      - enabled
      - development
      - notification_template
      type: object
    APNS:
      properties:
        body:
          type: string
          x-stream-index: "002"
        title:
          type: string
          x-stream-index: "001"
      required:
      - title
      - body
      type: object
    AWSRekognitionRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        min_confidence:
          format: float
          maximum: 100
          minimum: 0
          type: number
          x-stream-index: "003"
      required:
      - label
      - action
      - min_confidence
      type: object
    Action:
      nullable: true
      properties:
        name:
          type: string
          x-stream-index: "001"
        style:
          type: string
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "004"
        value:
          type: string
          x-stream-index: "005"
      required:
      - name
      - text
      - type
      type: object
    ActionLog:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "002"
        reason:
          type: string
          x-stream-index: "008"
        reporter_type:
          type: string
          x-stream-index: "009"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "014"
        review_queue_item_id:
          type: string
          x-stream-index: "012"
        target_user:
          $ref: '#/components/schemas/User'
          x-stream-index: "013"
        target_user_id:
          type: string
          x-stream-index: "011"
        type:
          type: string
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007"
      required:
      - id
      - created_at
      - type
      - reason
      - reporter_type
      - custom
      - target_user_id
      - review_queue_item_id
      type: object
    ActionLogResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        id:
          type: string
          x-stream-index: "001"
        reason:
          type: string
          x-stream-index: "006"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "008"
        target_user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "009"
        target_user_id:
          type: string
          x-stream-index: "010"
        type:
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
        user_id:
          type: string
          x-stream-index: "005"
      required:
      - id
      - created_at
      - type
      - user_id
      - reason
      - custom
      - target_user_id
      type: object
    AggregatedStats:
      properties:
        countrywise_aggregate_stats:
          additionalProperties:
            $ref: '#/components/schemas/CountrywiseAggregateStats'
          type: object
          x-stream-index: "003"
        publisher_aggregate_stats:
          $ref: '#/components/schemas/PublisherAggregateStats'
          x-stream-index: "002"
        turn:
          $ref: '#/components/schemas/TURNAggregatedStats'
          x-stream-index: "001"
      type: object
    AnyEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: '*'
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: AnyEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AppResponseFields:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "019"
        async_url_enrich_enabled:
          type: boolean
          x-stream-index: "017"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "020"
        before_message_send_hook_url:
          type: string
          x-stream-index: "021"
        call_types:
          additionalProperties:
            $ref: '#/components/schemas/CallType'
          type: object
          x-stream-index: "007"
        campaign_enabled:
          type: boolean
          x-stream-index: "034"
        cdn_expiration_seconds:
          format: int32
          type: integer
          x-stream-index: "037"
        channel_configs:
          additionalProperties:
            $ref: '#/components/schemas/ChannelConfig'
          type: object
          x-stream-index: "006"
        custom_action_handler_url:
          type: string
          x-stream-index: "022"
        datadog_info:
          $ref: '#/components/schemas/DataDogInfo'
          x-stream-index: "040"
        disable_auth_checks:
          type: boolean
          x-stream-index: "011"
        disable_permissions_checks:
          type: boolean
          x-stream-index: "012"
        enforce_unique_usernames:
          type: string
          x-stream-index: "023"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "030"
        geofences:
          items:
            $ref: '#/components/schemas/GeofenceResponse'
          type: array
          x-stream-index: "039"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "033"
        image_moderation_enabled:
          type: boolean
          x-stream-index: "016"
        image_moderation_labels:
          items:
            type: string
          type: array
          x-stream-index: "018"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "031"
        moderation_enabled:
          type: boolean
          x-stream-index: "041"
        moderation_webhook_url:
          type: string
          x-stream-index: "005"
        multi_tenant_enabled:
          type: boolean
          x-stream-index: "015"
        name:
          type: string
          x-stream-index: "001"
        organization:
          type: string
          x-stream-index: "002"
        permission_version:
          type: string
          x-stream-index: "013"
        policies:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Policy'
            type: array
          type: object
          x-stream-index: "008"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationFields'
          x-stream-index: "003"
        reminders_interval:
          format: int32
          type: integer
          x-stream-index: "036"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "032"
        sns_key:
          type: string
          x-stream-index: "028"
        sns_secret:
          type: string
          x-stream-index: "029"
        sns_topic_arn:
          type: string
          x-stream-index: "027"
        sqs_key:
          type: string
          x-stream-index: "025"
        sqs_secret:
          type: string
          x-stream-index: "026"
        sqs_url:
          type: string
          x-stream-index: "024"
        suspended:
          type: boolean
          x-stream-index: "009"
        suspended_explanation:
          type: string
          x-stream-index: "010"
        user_search_disallowed_roles:
          items:
            type: string
          type: array
          x-stream-index: "014"
        webhook_events:
          items:
            type: string
          type: array
          x-stream-index: "035"
        webhook_url:
          type: string
          x-stream-index: "004"
      required:
      - name
      - organization
      - push_notifications
      - webhook_url
      - moderation_webhook_url
      - channel_configs
      - call_types
      - policies
      - suspended
      - suspended_explanation
      - disable_auth_checks
      - disable_permissions_checks
      - permission_version
      - user_search_disallowed_roles
      - multi_tenant_enabled
      - image_moderation_enabled
      - async_url_enrich_enabled
      - auto_translation_enabled
      - custom_action_handler_url
      - enforce_unique_usernames
      - sqs_url
      - sqs_key
      - sqs_secret
      - sns_topic_arn
      - sns_key
      - sns_secret
      - file_upload_config
      - image_upload_config
      - grants
      - campaign_enabled
      - webhook_events
      - reminders_interval
      - cdn_expiration_seconds
      - video_provider
      - moderation_enabled
      type: object
    AsyncModerationCallbackConfig:
      properties:
        mode:
          enum:
          - CALLBACK_MODE_NONE
          - CALLBACK_MODE_REST
          - CALLBACK_MODE_TWIRP
          type: string
          x-stream-index: "002"
        server_url:
          type: string
          x-stream-index: "001"
      type: object
    AsyncModerationConfiguration:
      properties:
        callback:
          $ref: '#/components/schemas/AsyncModerationCallbackConfig'
          x-stream-index: "002"
        timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
      type: object
    Attachment:
      description: An attachment is a message object that represents a file uploaded
        by a user.
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "015"
        asset_url:
          type: string
          x-stream-index: "017"
        author_icon:
          type: string
          x-stream-index: "007"
        author_link:
          type: string
          x-stream-index: "006"
        author_name:
          type: string
          x-stream-index: "005"
        color:
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "021"
        fallback:
          type: string
          x-stream-index: "002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "016"
        footer:
          type: string
          x-stream-index: "013"
        footer_icon:
          type: string
          x-stream-index: "014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "022"
        image_url:
          type: string
          x-stream-index: "011"
        latitude:
          description: The latitude of the location
          format: float
          title: Latitude
          type: number
          x-stream-index: "018"
        longitude:
          description: The longitude of the location
          format: float
          title: Longitude
          type: number
          x-stream-index: "019"
        og_scrape_url:
          type: string
          x-stream-index: "023"
        original_height:
          format: int32
          type: integer
          x-stream-index: "025"
        original_width:
          format: int32
          type: integer
          x-stream-index: "024"
        pretext:
          type: string
          x-stream-index: "004"
        stopped_sharing:
          description: If the user has stopped sharing their location
          title: Stopped Sharing
          type: boolean
          x-stream-index: "020"
        text:
          type: string
          x-stream-index: "010"
        thumb_url:
          type: string
          x-stream-index: "012"
        title:
          type: string
          x-stream-index: "008"
        title_link:
          type: string
          x-stream-index: "009"
        type:
          description: Attachment type (e.g. image, video, url)
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - custom
      title: Attachment
      type: object
      x-stream-docs-page-id: file_uploads
    AudioSettings:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - access_request_enabled
      - opus_dtx_enabled
      - redundant_coding_enabled
      - mic_default_on
      - speaker_default_on
      - default_device
      type: object
    AudioSettingsRequest:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - default_device
      type: object
    AudioSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - access_request_enabled
      - opus_dtx_enabled
      - redundant_coding_enabled
      - mic_default_on
      - speaker_default_on
      - default_device
      type: object
    AutomodDetails:
      properties:
        action:
          type: string
          x-stream-index: "001"
        image_labels:
          items:
            type: string
          type: array
          x-stream-index: "005"
        message_details:
          $ref: '#/components/schemas/FlagMessageDetails'
          x-stream-index: "004"
        original_message_type:
          type: string
          x-stream-index: "002"
        result:
          $ref: '#/components/schemas/MessageModerationResult'
          x-stream-index: "003"
      type: object
    AutomodPlatformCircumventionConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    AutomodRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "003"
        label:
          type: string
          x-stream-index: "001"
        threshold:
          format: float
          maximum: 1
          minimum: 0
          type: number
          x-stream-index: "002"
      required:
      - label
      - threshold
      - action
      type: object
    AutomodSemanticFiltersConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodSemanticFiltersRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    AutomodSemanticFiltersRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        threshold:
          format: float
          maximum: 1
          minimum: 0
          type: number
          x-stream-index: "002"
      required:
      - name
      - threshold
      - action
      type: object
    AutomodToxicityConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    AzureRequest:
      description: Config for creating Azure Blob Storage storage
      properties:
        abs_account_name:
          description: The account name
          title: AccountName
          type: string
          x-stream-index: "001"
        abs_client_id:
          description: The client id
          title: ClientID
          type: string
          x-stream-index: "003"
        abs_client_secret:
          description: The client secret
          title: ClientSecret
          type: string
          x-stream-index: "004"
        abs_tenant_id:
          description: The tenant id
          title: TenantID
          type: string
          x-stream-index: "002"
      required:
      - abs_account_name
      - abs_tenant_id
      - abs_client_id
      - abs_client_secret
      title: AzureRequest
      type: object
    BackstageSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - enabled
      type: object
    BackstageSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    BackstageSettingsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - enabled
      type: object
    Ban:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "011"
        expires:
          format: date-time
          type: number
          x-stream-index: "007"
        reason:
          type: string
          x-stream-index: "008"
        shadow:
          type: boolean
          x-stream-index: "009"
        target:
          $ref: '#/components/schemas/User'
          x-stream-index: "006"
      required:
      - shadow
      - created_at
      type: object
    BanActionRequest:
      properties:
        channel_ban_only:
          type: boolean
          x-stream-index: "003"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "002"
        shadow:
          type: boolean
          x-stream-index: "001"
        timeout:
          format: int32
          type: integer
          x-stream-index: "005"
      type: object
    BanRequest:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008"
        banned_by_id:
          type: string
          x-stream-index: "007"
        channel_cid:
          type: string
          x-stream-index: "004"
        ip_ban:
          type: boolean
          x-stream-index: "006"
        reason:
          type: string
          x-stream-index: "003"
        shadow:
          type: boolean
          x-stream-index: "005"
        target_user_id:
          type: string
          x-stream-index: "001"
        timeout:
          minimum: 0
          type: integer
          x-stream-index: "002"
      required:
      - target_user_id
      type: object
    BanResponse:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "006"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        expires:
          format: date-time
          type: number
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
      required:
      - created_at
      type: object
    BlockListConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/BlockListRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    BlockListOptions:
      properties:
        behavior:
          description: Blocklist behavior
          enum:
          - flag
          - block
          - shadow_block
          title: Behavior
          type: string
          x-stream-index: "002"
        blocklist:
          description: Blocklist name
          title: Blocklist
          type: string
          x-stream-index: "001"
      required:
      - blocklist
      - behavior
      type: object
    BlockListResponse:
      description: Block list contains restricted words
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001"
        name:
          description: Block list name
          title: Name
          type: string
          x-stream-index: "003"
        type:
          description: Block list type.
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "002"
        words:
          description: List of words to block
          items:
            type: string
          title: Words
          type: array
          x-stream-index: "005"
      required:
      - name
      - type
      - words
      title: Block list
      type: object
      x-stream-docs-page-id: block_lists
    BlockListRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        name:
          type: string
          x-stream-index: "001"
      required:
      - name
      - action
      type: object
    BlockUserRequest:
      description: BlockUserRequest is the payload for blocking a user.
      nullable: true
      properties:
        user_id:
          description: the user to block
          title: UserID
          type: string
          x-stream-index: "003"
      required:
      - user_id
      title: BlockUserRequest
      type: object
    BlockUserResponse:
      description: BlockUserResponse is the payload for blocking a user.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: BlockUserResponse
      type: object
    BlockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          description: User id to block
          title: BlockedUserID
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - blocked_user_id
      type: object
    BlockUsersResponse:
      nullable: true
      properties:
        blocked_by_user_id:
          description: User id who blocked another user
          title: BlockedByUserID
          type: string
          x-stream-index: "002"
        blocked_user_id:
          description: User id who got blocked
          title: BlockedUserID
          type: string
          x-stream-index: "003"
        created_at:
          description: Timestamp when the user was blocked
          format: date-time
          title: CreatedAt
          type: number
          x-stream-index: "004"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      - blocked_by_user_id
      - blocked_user_id
      - created_at
      type: object
    BlockedUserEvent:
      description: |-
        This event is sent to call participants to notify when a user is blocked on a call, clients can use this event to show a notification.
        If the user is the current user, the client should leave the call screen as well
      properties:
        blocked_by_user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that blocked the user, null if the user was blocked
            by server-side
          title: Blocked by
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.blocked_user
          description: 'The type of event: "call.blocked_user" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that was blocked
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      title: BlockedUserEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BlockedUserResponse:
      nullable: true
      properties:
        blocked_user:
          $ref: '#/components/schemas/UserResponse'
          description: User who got blocked
          title: User
          x-stream-index: "003"
        blocked_user_id:
          description: ID of the user who got blocked
          title: UserID
          type: string
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who blocked another user
          title: User
          x-stream-index: "001"
        user_id:
          description: ID of the user who blocked another user
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_id
      - blocked_user
      - blocked_user_id
      - created_at
      type: object
    BodyguardRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "003"
      required:
      - label
      - action
      - severity_rules
      type: object
    BodyguardSeverityRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        severity:
          enum:
          - low
          - medium
          - high
          - critical
          type: string
          x-stream-index: "001"
      required:
      - severity
      - action
      type: object
    Bound:
      properties:
        inclusive:
          type: boolean
          x-stream-index: "002"
        value:
          format: float
          type: number
          x-stream-index: "001"
      required:
      - value
      - inclusive
      type: object
    BroadcastSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettings'
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettings'
          x-stream-index: "003"
      required:
      - enabled
      type: object
    BroadcastSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettingsRequest'
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettingsRequest'
          x-stream-index: "003"
      type: object
    BroadcastSettingsResponse:
      description: BroadcastSettingsResponse is the payload for broadcasting settings
      properties:
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettingsResponse'
          title: HLS
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettingsResponse'
          title: RTMP
          x-stream-index: "003"
      required:
      - enabled
      - hls
      - rtmp
      title: BroadcastSettingsResponse
      type: object
    CallAcceptedEvent:
      description: This event is sent when a user accepts a notification to join a
        call.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.accepted
          description: 'The type of event: "call.accepted" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who accepted the call
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - call
      - user
      title: CallAcceptedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallClosedCaption:
      description: CallClosedCaption represents a closed caption of a call.
      properties:
        end_time:
          format: date-time
          title: The end time of the closed caption.
          type: number
          x-stream-index: "003"
        speaker_id:
          title: The speaker ID of the closed caption.
          type: string
          x-stream-index: "004"
        start_time:
          format: date-time
          title: The start time of the closed caption.
          type: number
          x-stream-index: "002"
        text:
          title: The text of the closed caption.
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserResponse'
          title: The full user for the closed caption.
          x-stream-index: "005"
      required:
      - text
      - start_time
      - end_time
      - speaker_id
      - user
      title: CallClosedCaption
      type: object
    CallClosedCaptionsFailedEvent:
      description: This event is sent when call closed captions has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_captions_failed
          description: 'The type of event: "call.closed_captions_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallClosedCaptionsFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallClosedCaptionsStartedEvent:
      description: This event is sent when call closed caption has started
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_captions_started
          description: 'The type of event: "call.closed_captions_started" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallClosedCaptionsStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallClosedCaptionsStoppedEvent:
      description: This event is sent when call closed captions has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_captions_stopped
          description: 'The type of event: "call.transcription_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallClosedCaptionsStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallCreatedEvent:
      description: |-
        This event is sent when a call is created. Clients receiving this event should check if the ringing
        field is set to true and if so, show the call screen
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: the members added to this call
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.created
          description: 'The type of event: "call.created" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallCreatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallDeletedEvent:
      description: This event is sent when a call is deleted. Clients receiving this
        event should leave the call screen
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.deleted
          description: 'The type of event: "call.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      title: CallDeletedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallDurationReport:
      properties:
        histogram:
          items:
            $ref: '#/components/schemas/ReportByHistogramBucket'
          type: array
          x-stream-index: "001"
      required:
      - histogram
      type: object
    CallDurationReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateCallDurationReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    CallEndedEvent:
      description: This event is sent when a call is mark as ended for all its participants.
        Clients receiving this event should leave the call screen
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.ended
          description: 'The type of event: "call.ended" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who ended the call, null if the call was ended by
            the server
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - call
      title: CallEndedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallEvent:
      nullable: true
      properties:
        category:
          type: string
          x-stream-index: "009"
        component:
          type: string
          x-stream-index: "007"
        description:
          type: string
          x-stream-index: "004"
        end_timestamp:
          format: int32
          type: integer
          x-stream-index: "002"
        internal:
          type: boolean
          x-stream-index: "006"
        issue_tags:
          items:
            type: string
          type: array
          x-stream-index: "010"
        kind:
          type: string
          x-stream-index: "008"
        severity:
          format: int32
          type: integer
          x-stream-index: "003"
        timestamp:
          format: int32
          type: integer
          x-stream-index: "001"
        type:
          type: string
          x-stream-index: "005"
      required:
      - timestamp
      - end_timestamp
      - severity
      - description
      - type
      - internal
      - kind
      type: object
    CallHLSBroadcastingFailedEvent:
      description: This event is sent when HLS broadcasting has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.hls_broadcasting_failed
          description: 'The type of event: "call.hls_broadcasting_failed" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallHLSBroadcastingFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallHLSBroadcastingStartedEvent:
      description: This event is sent when HLS broadcasting has started
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        hls_playlist_url:
          type: string
          x-stream-index: "003"
        type:
          default: call.hls_broadcasting_started
          description: 'The type of event: "call.hls_broadcasting_started" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - hls_playlist_url
      title: CallHLSBroadcastingStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallHLSBroadcastingStoppedEvent:
      description: This event is sent when HLS broadcasting has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.hls_broadcasting_stopped
          description: 'The type of event: "call.hls_broadcasting_stopped" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallHLSBroadcastingStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallIngressResponse:
      description: CallIngressResponse is the payload for ingress settings
      properties:
        rtmp:
          $ref: '#/components/schemas/RTMPIngress'
          title: RTMP
          x-stream-index: "001"
      required:
      - rtmp
      title: CallIngressResponse
      type: object
    CallLiveStartedEvent:
      description: This event is sent when a call is started. Clients receiving this
        event should start the call.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.live_started
          description: 'The type of event: "call.live_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      title: CallLiveStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberAddedEvent:
      description: This event is sent when one or more members are added to a call
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: the members added to this call
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.member_added
          description: 'The type of event: "call.member_added" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallMemberAddedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberRemovedEvent:
      description: This event is sent when one or more members are removed from a
        call
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: the list of member IDs removed from the call
          items:
            type: string
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.member_removed
          description: 'The type of event: "call.member_removed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallMemberRemovedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberUpdatedEvent:
      description: This event is sent when one or more members are updated
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: The list of members that were updated
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.member_updated
          description: 'The type of event: "call.member_updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallMemberUpdatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberUpdatedPermissionEvent:
      description: This event is sent when one or more members get its role updated
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        capabilities_by_role:
          additionalProperties:
            items:
              type: string
            type: array
          description: The capabilities by role for this call
          title: CapabilitiesByRole
          type: object
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: The list of members that were updated
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "005"
        type:
          default: call.member_updated_permission
          description: 'The type of event: "call.member_added" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - capabilities_by_role
      - members
      title: CallMemberUpdatedPermissionEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMissedEvent:
      description: This event is sent to call members who did not accept/reject/join
        the call to notify they missed the call
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: List of members who missed the call
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "005"
        notify_user:
          type: boolean
          x-stream-index: "007"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.missed
          description: 'The type of event: "call.notification" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The caller from whom the call was missed
          title: User
          x-stream-index: "006"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      - members
      - user
      - notify_user
      title: CallMissedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallNotificationEvent:
      description: This event is sent to all call members to notify they are getting
        called
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: Call members
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "005"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.notification
          description: 'The type of event: "call.notification" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that sent the call notification
          title: User
          x-stream-index: "006"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      - members
      - user
      title: CallNotificationEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallParticipantCountReport:
      properties:
        histogram:
          items:
            $ref: '#/components/schemas/ReportByHistogramBucket'
          type: array
          x-stream-index: "001"
      required:
      - histogram
      type: object
    CallParticipantCountReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateCallParticipantCountReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    CallParticipantResponse:
      properties:
        joined_at:
          format: date-time
          type: number
          x-stream-index: "004"
        role:
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
        user_session_id:
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_session_id
      - role
      - joined_at
      type: object
    CallReactionEvent:
      description: This event is sent when a reaction is sent in a call, clients should
        use this to show the reaction in the call screen
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          description: the reaction object sent by the user on the call
          title: reaction
          x-stream-index: "003"
        type:
          default: call.reaction_new
          description: 'The type of event: "call.reaction_new" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - reaction
      title: CallReactionEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecording:
      description: CallRecording represents a recording of a call.
      properties:
        end_time:
          format: date-time
          title: The end time of the recording.
          type: number
          x-stream-index: "004"
        filename:
          title: The filename of the recording.
          type: string
          x-stream-index: "001"
        start_time:
          format: date-time
          title: The start time of the recording.
          type: number
          x-stream-index: "003"
        url:
          title: The URL of the recording.
          type: string
          x-stream-index: "002"
      required:
      - filename
      - url
      - start_time
      - end_time
      title: CallRecording
      type: object
    CallRecordingFailedEvent:
      description: This event is sent when call recording has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.recording_failed
          description: 'The type of event: "call.recording_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallRecordingFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecordingReadyEvent:
      description: This event is sent when call recording is ready
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        call_recording:
          $ref: '#/components/schemas/CallRecording'
          description: The call recording object
          title: CallRecording
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.recording_ready
          description: 'The type of event: "call.recording_ready" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call_recording
      title: CallRecordingReadyEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecordingStartedEvent:
      description: This event is sent when call recording has started
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.recording_started
          description: 'The type of event: "call.recording_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallRecordingStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecordingStoppedEvent:
      description: This event is sent when call recording has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.recording_stopped
          description: 'The type of event: "call.recording_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallRecordingStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRejectedEvent:
      description: This event is sent when a user rejects a notification to join a
        call.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        reason:
          type: string
          x-stream-index: "005"
        type:
          default: call.rejected
          description: 'The type of event: "call.rejected" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who rejected the call
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - call
      - user
      title: CallRejectedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRequest:
      description: CallRequest is the payload for creating a call.
      properties:
        created_by:
          $ref: '#/components/schemas/UserRequest'
          title: The user that create this call
          x-stream-index: "002"
        created_by_id:
          title: The id of the user that create this call
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        members:
          items:
            $ref: '#/components/schemas/MemberRequest'
          maximum: 100
          type: array
          x-stream-index: "005"
        settings_override:
          $ref: '#/components/schemas/CallSettingsRequest'
          x-stream-index: "006"
        starts_at:
          format: date-time
          type: number
          x-stream-index: "007"
        team:
          type: string
          x-stream-index: "001"
        video:
          type: boolean
          x-stream-index: "008"
      title: CallRequest
      type: object
    CallResponse:
      description: Represents a call
      properties:
        backstage:
          type: boolean
          x-stream-index: "016"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "018"
        captioning:
          type: boolean
          x-stream-index: "013"
        cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: The user that created the call
          title: Created By
          x-stream-index: "007"
        current_session_id:
          type: string
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        egress:
          $ref: '#/components/schemas/EgressResponse'
          x-stream-index: "021"
        ended_at:
          description: Date/time when the call ended
          format: date-time
          title: Ended At
          type: number
          x-stream-index: "014"
        id:
          description: Call ID
          title: ID
          type: string
          x-stream-index: "003"
        ingress:
          $ref: '#/components/schemas/CallIngressResponse'
          x-stream-index: "019"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "023"
        recording:
          type: boolean
          x-stream-index: "011"
        session:
          $ref: '#/components/schemas/CallSessionResponse'
          x-stream-index: "020"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          x-stream-index: "017"
        starts_at:
          description: Date/time when the call will start
          format: date-time
          title: Starts At
          type: number
          x-stream-index: "015"
        team:
          type: string
          x-stream-index: "006"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailResponse'
          x-stream-index: "022"
        transcribing:
          type: boolean
          x-stream-index: "012"
        type:
          description: The type of call
          title: Type
          type: string
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
      required:
      - type
      - id
      - cid
      - current_session_id
      - created_by
      - custom
      - created_at
      - updated_at
      - recording
      - transcribing
      - captioning
      - backstage
      - settings
      - blocked_user_ids
      - ingress
      - egress
      title: CallResponse
      type: object
    CallRingEvent:
      description: This event is sent to all call members to notify they are getting
        called
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "005"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: Call members
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "006"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.ring
          description: 'The type of event: "call.notification" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that sent the call notification
          title: User
          x-stream-index: "007"
        video:
          type: boolean
          x-stream-index: "008"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      - members
      - user
      - video
      title: CallRingEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRtmpBroadcastFailedEvent:
      description: This event is sent when a call RTMP broadcast has failed
      properties:
        call_cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "002.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.002"
        name:
          description: Name of the given RTMP broadcast
          title: Name
          type: string
          x-stream-index: "003"
        type:
          default: call.rtmp_broadcast_failed
          description: 'The type of event: "call.rtmp_broadcast_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - name
      title: CallRtmpBroadcastFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRtmpBroadcastStartedEvent:
      description: This event is sent when RTMP broadcast has started
      properties:
        call_cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "002.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.002"
        name:
          description: Name of the given RTMP broadcast
          title: Name
          type: string
          x-stream-index: "003"
        type:
          default: call.rtmp_broadcast_started
          description: 'The type of event: "call.rtmp_broadcast_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - name
      title: CallRtmpBroadcastStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRtmpBroadcastStoppedEvent:
      description: This event is sent when RTMP broadcast has stopped
      properties:
        call_cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "002.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.002"
        name:
          description: Name of the given RTMP broadcast
          title: Name
          type: string
          x-stream-index: "003"
        type:
          default: call.rtmp_broadcast_stopped
          description: 'The type of event: "call.rtmp_broadcast_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - name
      title: CallRtmpBroadcastStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionEndedEvent:
      description: This event is sent when a call session ends
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_ended
          description: 'The type of event: "call.session_ended" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      title: CallSessionEndedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionParticipantJoinedEvent:
      description: This event is sent when a participant joins a call session
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        participant:
          $ref: '#/components/schemas/CallParticipantResponse'
          description: The participant that joined the session
          title: Participant
          x-stream-index: "004"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_participant_joined
          description: 'The type of event: "call.session_participant_joined" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - participant
      title: CallSessionParticipantJoinedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionParticipantLeftEvent:
      description: This event is sent when a participant leaves a call session
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        duration_seconds:
          description: The duration participant was in the session in seconds
          format: int32
          title: Duration
          type: integer
          x-stream-index: "005"
        participant:
          $ref: '#/components/schemas/CallParticipantResponse'
          description: The participant that left the session
          title: Participant
          x-stream-index: "004"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_participant_left
          description: 'The type of event: "call.session_participant_left" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - participant
      - duration_seconds
      title: CallSessionParticipantLeftEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionResponse:
      properties:
        accepted_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "008"
        anonymous_participant_count:
          format: int32
          type: integer
          x-stream-index: "006"
        ended_at:
          format: date-time
          type: number
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        live_ended_at:
          format: date-time
          type: number
          x-stream-index: "011"
        live_started_at:
          format: date-time
          type: number
          x-stream-index: "010"
        missed_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "009"
        participants:
          items:
            $ref: '#/components/schemas/CallParticipantResponse'
          type: array
          x-stream-index: "004"
        participants_count_by_role:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "005"
        rejected_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "007"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002"
        timer_ends_at:
          format: date-time
          type: number
          x-stream-index: "012"
      required:
      - id
      - participants
      - participants_count_by_role
      - anonymous_participant_count
      - rejected_by
      - accepted_by
      - missed_by
      type: object
    CallSessionStartedEvent:
      description: This event is sent when a call session starts
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_started
          description: 'The type of event: "call.session_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      title: CallSessionStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSettings:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettings'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettings'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettings'
          x-stream-index: "006"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettings'
          x-stream-index: "007"
        limits:
          $ref: '#/components/schemas/LimitsSettings'
          x-stream-index: "011"
        recording:
          $ref: '#/components/schemas/RecordSettings'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettings'
          x-stream-index: "009"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettings'
          x-stream-index: "004"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettings'
          x-stream-index: "010"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettings'
          x-stream-index: "008"
        video:
          $ref: '#/components/schemas/VideoSettings'
          x-stream-index: "003"
      type: object
    CallSettingsRequest:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettingsRequest'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettingsRequest'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettingsRequest'
          x-stream-index: "009"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettingsRequest'
          x-stream-index: "003"
        limits:
          $ref: '#/components/schemas/LimitsSettingsRequest'
          x-stream-index: "011"
        recording:
          $ref: '#/components/schemas/RecordSettingsRequest'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettingsRequest'
          x-stream-index: "006"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettingsRequest'
          x-stream-index: "007"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettingsRequest'
          x-stream-index: "010"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettingsRequest'
          x-stream-index: "008"
        video:
          $ref: '#/components/schemas/VideoSettingsRequest'
          x-stream-index: "004"
      type: object
    CallSettingsResponse:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettingsResponse'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettingsResponse'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettingsResponse'
          x-stream-index: "003"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettingsResponse'
          x-stream-index: "004"
        limits:
          $ref: '#/components/schemas/LimitsSettingsResponse'
          x-stream-index: "011"
        recording:
          $ref: '#/components/schemas/RecordSettingsResponse'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettingsResponse'
          x-stream-index: "006"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettingsResponse'
          x-stream-index: "007"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettingsResponse'
          x-stream-index: "010"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettingsResponse'
          x-stream-index: "008"
        video:
          $ref: '#/components/schemas/VideoSettingsResponse'
          x-stream-index: "009"
      required:
      - audio
      - backstage
      - broadcasting
      - geofencing
      - recording
      - ring
      - screensharing
      - transcription
      - video
      - thumbnails
      - limits
      type: object
    CallStateResponseFields:
      description: CallStateResponseFields is the payload for call state response
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001"
        members:
          description: List of call members
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "002"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      title: CallStateResponseFields
      type: object
    CallStatsReportSummaryResponse:
      properties:
        call_cid:
          type: string
          x-stream-index: "001"
        call_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "008"
        call_session_id:
          type: string
          x-stream-index: "002"
        call_status:
          type: string
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        first_stats_time:
          format: date-time
          type: number
          x-stream-index: "003"
        min_user_rating:
          format: int32
          type: integer
          x-stream-index: "006"
        quality_score:
          format: int32
          type: integer
          x-stream-index: "005"
      required:
      - call_cid
      - call_session_id
      - first_stats_time
      - call_status
      - call_duration_seconds
      type: object
    CallTimeline:
      properties:
        events:
          items:
            $ref: '#/components/schemas/CallEvent'
          type: array
          x-stream-index: "001"
      required:
      - events
      type: object
    CallTranscription:
      description: CallTranscription represents a transcription of a call.
      properties:
        end_time:
          format: date-time
          title: The end time of the transcription.
          type: number
          x-stream-index: "004"
        filename:
          title: The filename of the transcription.
          type: string
          x-stream-index: "001"
        start_time:
          format: date-time
          title: The start time of the transcription.
          type: number
          x-stream-index: "003"
        url:
          title: The URL of the transcription.
          type: string
          x-stream-index: "002"
      required:
      - filename
      - url
      - start_time
      - end_time
      title: CallTranscription
      type: object
    CallTranscriptionFailedEvent:
      description: This event is sent when call transcription has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.transcription_failed
          description: 'The type of event: "call.transcription_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallTranscriptionFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallTranscriptionReadyEvent:
      description: This event is sent when call transcription is ready
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        call_transcription:
          $ref: '#/components/schemas/CallTranscription'
          description: The call transcription object
          title: CallTranscription
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.transcription_ready
          description: 'The type of event: "call.transcription_ready" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call_transcription
      title: CallTranscriptionReadyEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallTranscriptionStartedEvent:
      description: This event is sent when call transcription has started
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.transcription_started
          description: 'The type of event: "call.transcription_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallTranscriptionStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallTranscriptionStoppedEvent:
      description: This event is sent when call transcription has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.transcription_stopped
          description: 'The type of event: "call.transcription_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallTranscriptionStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallType:
      nullable: true
      properties:
        AppPK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "003"
        CreatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "005"
        ExternalStorage:
          type: string
          writeOnly: true
          x-stream-index: "009"
        Name:
          type: string
          writeOnly: true
          x-stream-index: "004"
        NotificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
          x-stream-index: "008"
        PK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "002"
        Settings:
          $ref: '#/components/schemas/CallSettings'
          x-stream-index: "007"
        UpdatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "006"
      required:
      - PK
      - AppPK
      - Name
      - CreatedAt
      - UpdatedAt
      - ExternalStorage
      type: object
    CallTypeResponse:
      description: CallTypeResponse is the payload for a call type.
      properties:
        created_at:
          description: the time the call type was created
          format: date-time
          title: CreatedAt
          type: number
          x-stream-index: "005"
        external_storage:
          description: the external storage for the call type
          title: ExternalStorage
          type: string
          x-stream-index: "007"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          description: the permissions granted to each role
          title: Grants
          type: object
          x-stream-index: "002"
        name:
          description: the name of the call type
          title: Name
          type: string
          x-stream-index: "001"
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
          description: the notification settings for the call type
          title: NotificationSettings
          x-stream-index: "004"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          description: the settings for the call type
          title: Settings
          x-stream-index: "003"
        updated_at:
          description: the time the call type was last updated
          format: date-time
          title: UpdatedAt
          type: number
          x-stream-index: "006"
      required:
      - name
      - grants
      - settings
      - notification_settings
      - created_at
      - updated_at
      title: CallTypeResponse
      type: object
    CallUpdatedEvent:
      description: |-
        This event is sent when a call is updated, clients should use this update the local state of the call.
        This event also contains the capabilities by role for the call, clients should update the own_capability for the current.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        capabilities_by_role:
          additionalProperties:
            items:
              type: string
            type: array
          description: The capabilities by role for this call
          title: CapabilitiesByRole
          type: object
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.updated
          description: 'The type of event: "call.ended" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - capabilities_by_role
      title: CallUpdatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallUserMutedEvent:
      description: This event is sent when a call member is muted
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        from_user_id:
          type: string
          x-stream-index: "003"
        muted_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "004"
        type:
          default: call.user_muted
          description: 'The type of event: "call.user_muted" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - from_user_id
      - muted_user_ids
      title: CallUserMutedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallsPerDayReport:
      properties:
        count:
          format: int64
          type: integer
          x-stream-index: "001"
      required:
      - count
      type: object
    CallsPerDayReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateCallsPerDayReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    CampaignChannelTemplate:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "002"
        members:
          items:
            type: string
          maximum: 1000
          type: array
          x-stream-index: "003"
        team:
          maxLength: 1000
          type: string
          x-stream-index: "004"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001"
      required:
      - type
      - custom
      type: object
    CampaignCompletedEvent:
      nullable: true
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        type:
          default: campaign.completed
          type: string
          x-stream-index: "002.002"
      required:
      - type
      - created_at
      title: CampaignCompletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CampaignMessageTemplate:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          maximum: 30
          type: array
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        poll_id:
          type: string
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "001"
      required:
      - text
      - attachments
      - poll_id
      - custom
      type: object
    CampaignResponse:
      properties:
        channel_template:
          $ref: '#/components/schemas/CampaignChannelTemplate'
          x-stream-index: "014"
        create_channels:
          type: boolean
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "018"
        description:
          type: string
          x-stream-index: "008"
        id:
          type: string
          x-stream-index: "001"
        message_template:
          $ref: '#/components/schemas/CampaignMessageTemplate'
          x-stream-index: "013"
        name:
          type: string
          x-stream-index: "006"
        scheduled_for:
          format: date-time
          type: number
          x-stream-index: "011"
        segment_ids:
          items:
            type: string
          type: array
          x-stream-index: "002"
        segments:
          items:
            $ref: '#/components/schemas/Segment'
          type: array
          x-stream-index: "003"
        sender:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "005"
        sender_id:
          type: string
          x-stream-index: "004"
        skip_push:
          type: boolean
          x-stream-index: "009"
        skip_webhook:
          type: boolean
          x-stream-index: "010"
        stats:
          $ref: '#/components/schemas/CampaignStatsResponse'
          x-stream-index: "020"
        status:
          type: string
          x-stream-index: "017"
        stop_at:
          format: date-time
          type: number
          x-stream-index: "012"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "019"
        user_ids:
          items:
            type: string
          type: array
          x-stream-index: "015"
        users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "016"
      required:
      - id
      - segment_ids
      - segments
      - sender_id
      - name
      - create_channels
      - description
      - skip_push
      - skip_webhook
      - user_ids
      - users
      - status
      - created_at
      - updated_at
      - stats
      type: object
    CampaignStartedEvent:
      nullable: true
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        type:
          default: campaign.started
          type: string
          x-stream-index: "002.002"
      required:
      - type
      - created_at
      title: CampaignStartedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CampaignStatsResponse:
      properties:
        progress:
          format: float
          type: number
          x-stream-index: "005"
        stats_channels_created:
          format: int32
          type: integer
          x-stream-index: "004"
        stats_completed_at:
          format: date-time
          type: number
          x-stream-index: "002"
        stats_messages_sent:
          format: int32
          type: integer
          x-stream-index: "003"
        stats_started_at:
          format: date-time
          type: number
          x-stream-index: "001"
      required:
      - stats_started_at
      - stats_completed_at
      - stats_messages_sent
      - stats_channels_created
      - progress
      type: object
    CastPollVoteRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
        vote:
          $ref: '#/components/schemas/VoteData'
          description: Vote data
          title: VoteData
          x-stream-index: "003"
      type: object
    Channel:
      properties:
        auto_translation_enabled:
          type: boolean
          x-stream-index: "028"
        auto_translation_language:
          type: string
          x-stream-index: "029"
        cid:
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "025"
        config_overrides:
          $ref: '#/components/schemas/ConfigOverrides'
          x-stream-index: "026"
        cooldown:
          format: int32
          type: integer
          x-stream-index: "030"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "018"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        disabled:
          type: boolean
          x-stream-index: "017"
        frozen:
          type: boolean
          x-stream-index: "016"
        id:
          type: string
          x-stream-index: "004"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "021"
        last_message_at:
          format: date-time
          type: number
          x-stream-index: "006"
        member_count:
          format: int32
          type: integer
          x-stream-index: "020"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "019"
        team:
          type: string
          x-stream-index: "027"
        truncated_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "015"
        type:
          type: string
          x-stream-index: "005"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
      required:
      - cid
      - id
      - type
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      - auto_translation_language
      type: object
    ChannelConfig:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "001.024"
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: "001.019"
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: "001.020"
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: "001.025"
        blocklist:
          type: string
          x-stream-index: "001.021"
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: "001.022"
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: "001.023"
        commands:
          description: List of commands that channel supports
          items:
            type: string
          title: Commands
          type: array
          x-stream-index: "003"
        connect_events:
          type: boolean
          x-stream-index: "001.004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        custom_events:
          type: boolean
          x-stream-index: "001.012"
        mark_messages_pending:
          type: boolean
          x-stream-index: "001.015"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "001.018"
        mutes:
          type: boolean
          x-stream-index: "001.009"
        name:
          type: string
          x-stream-index: "001.001"
        partition_size:
          format: int32
          type: integer
          x-stream-index: "001.026"
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: "001.027"
        polls:
          type: boolean
          x-stream-index: "001.016"
        push_notifications:
          type: boolean
          x-stream-index: "001.013"
        quotes:
          type: boolean
          x-stream-index: "001.008"
        reactions:
          type: boolean
          x-stream-index: "001.006"
        read_events:
          type: boolean
          x-stream-index: "001.003"
        reminders:
          type: boolean
          x-stream-index: "001.014"
        replies:
          type: boolean
          x-stream-index: "001.007"
        search:
          type: boolean
          x-stream-index: "001.005"
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: "001.028"
        typing_events:
          type: boolean
          x-stream-index: "001.002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        uploads:
          type: boolean
          x-stream-index: "001.010"
        url_enrichment:
          type: boolean
          x-stream-index: "001.011"
      required:
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - created_at
      - updated_at
      - commands
      type: object
    ChannelConfigWithInfo:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 001.002.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 001.002.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 001.002.025
        blocklist:
          type: string
          x-stream-index: 001.002.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 001.002.023
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
          x-stream-index: "001.003"
        connect_events:
          type: boolean
          x-stream-index: 001.002.004
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.003
        custom_events:
          type: boolean
          x-stream-index: 001.002.012
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 001.002.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 001.002.018
        mutes:
          type: boolean
          x-stream-index: 001.002.009
        name:
          type: string
          x-stream-index: 001.002.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 001.002.026
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 001.002.027
        polls:
          type: boolean
          x-stream-index: 001.002.016
        push_notifications:
          type: boolean
          x-stream-index: 001.002.013
        quotes:
          type: boolean
          x-stream-index: 001.002.008
        reactions:
          type: boolean
          x-stream-index: 001.002.006
        read_events:
          type: boolean
          x-stream-index: 001.002.003
        reminders:
          type: boolean
          x-stream-index: 001.002.014
        replies:
          type: boolean
          x-stream-index: 001.002.007
        search:
          type: boolean
          x-stream-index: 001.002.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 001.002.028
        typing_events:
          type: boolean
          x-stream-index: 001.002.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        uploads:
          type: boolean
          x-stream-index: 001.002.010
        url_enrichment:
          type: boolean
          x-stream-index: 001.002.011
      required:
      - created_at
      - updated_at
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - commands
      type: object
    ChannelCreatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.created
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelDeletedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        team:
          type: string
          x-stream-index: "001.001"
        type:
          default: channel.deleted
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelExport:
      properties:
        cid:
          type: string
          x-stream-index: "003"
        id:
          description: Channel ID
          title: ID
          type: string
          x-stream-index: "002"
        messages_since:
          description: Date to export messages since
          format: date-time
          title: Messages since
          type: number
          x-stream-index: "004"
        messages_until:
          description: Date to export messages until
          format: date-time
          title: Messages until
          type: number
          x-stream-index: "005"
        type:
          description: Channel type
          title: Type
          type: string
          x-stream-index: "001"
      title: Channel Export
      type: object
    ChannelFrozenEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.frozen
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: ChannelFrozenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelGetOrCreateRequest:
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/ChannelInput'
          x-stream-index: "003"
        hide_for_creator:
          description: Whether this channel will be hidden for the user who created
            the channel or not
          title: Hide for creator
          type: boolean
          x-stream-index: "007"
        members:
          $ref: '#/components/schemas/PaginationParams'
          x-stream-index: "010"
        messages:
          $ref: '#/components/schemas/MessagePaginationParams'
          x-stream-index: "009"
        state:
          description: Refresh channel state
          title: State
          type: boolean
          x-stream-index: "005"
        thread_unread_counts:
          type: boolean
          x-stream-index: "008"
        watchers:
          $ref: '#/components/schemas/PaginationParams'
          x-stream-index: "011"
      type: object
    ChannelHiddenEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        clear_history:
          type: boolean
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        type:
          default: channel.hidden
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - clear_history
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - type
      - created_at
      title: ChannelHiddenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelInput:
      properties:
        auto_translation_enabled:
          description: Enable or disable auto translation
          title: Auto translation
          type: boolean
          x-stream-index: "005"
        auto_translation_language:
          description: Switch auto translation language
          title: Auto translation language
          type: string
          x-stream-index: "006"
        config_overrides:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "024"
        created_by:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "009"
        created_by_id:
          type: string
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "015"
        disabled:
          type: boolean
          x-stream-index: "014"
        frozen:
          description: Freeze or unfreeze the channel
          title: Frozen
          type: boolean
          x-stream-index: "013"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "016"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "018"
        team:
          description: Team the channel belongs to (if multi-tenant mode is enabled)
          title: Team
          type: string
          x-stream-index: "004"
        truncated_by_id:
          type: string
          x-stream-index: "010"
      type: object
    ChannelMember:
      nullable: true
      properties:
        archived_at:
          format: date-time
          type: number
          x-stream-index: "015"
        ban_expires:
          description: Expiration date of the ban
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "013"
        banned:
          description: Whether member is banned this channel or not
          title: Banned
          type: boolean
          x-stream-index: "012"
        channel_role:
          description: Role of the member in the channel
          title: Channel Role
          type: string
          x-stream-index: "018"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        invite_accepted_at:
          description: Date when invite was accepted
          format: date-time
          title: Invited accepted at
          type: number
          x-stream-index: "006"
        invite_rejected_at:
          description: Date when invite was rejected
          format: date-time
          title: Invited rejected at
          type: number
          x-stream-index: "007"
        invited:
          description: Whether member was invited or not
          title: Invited
          type: boolean
          x-stream-index: "005"
        is_moderator:
          description: Whether member is channel moderator or not
          title: Is moderator
          type: boolean
          x-stream-index: "003"
        notifications_muted:
          type: boolean
          x-stream-index: "019"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "016"
        role:
          description: 'Permission level of the member in the channel (DEPRECATED:
            use channel_role instead)'
          enum:
          - member
          - moderator
          - admin
          - owner
          title: Role
          type: string
          x-stream-index: "017"
        shadow_banned:
          description: Whether member is shadow banned in this channel or not
          title: Shadow banned
          type: boolean
          x-stream-index: "014"
        status:
          type: string
          x-stream-index: "008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        user_id:
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - custom
      - created_at
      - updated_at
      - banned
      - shadow_banned
      - channel_role
      - notifications_muted
      title: Channel member
      type: object
    ChannelMemberResponse:
      properties:
        archived_at:
          format: date-time
          type: number
          x-stream-index: "016"
        ban_expires:
          description: Expiration date of the ban
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "013"
        banned:
          description: Whether member is banned this channel or not
          title: Banned
          type: boolean
          x-stream-index: "012"
        channel_role:
          description: Role of the member in the channel
          title: Channel Role
          type: string
          x-stream-index: "018"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        invite_accepted_at:
          description: Date when invite was accepted
          format: date-time
          title: Invited accepted at
          type: number
          x-stream-index: "006"
        invite_rejected_at:
          description: Date when invite was rejected
          format: date-time
          title: Invited rejected at
          type: number
          x-stream-index: "007"
        invited:
          description: Whether member was invited or not
          title: Invited
          type: boolean
          x-stream-index: "005"
        is_moderator:
          description: Whether member is channel moderator or not
          title: Is moderator
          type: boolean
          x-stream-index: "003"
        notifications_muted:
          type: boolean
          x-stream-index: "019"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "015"
        role:
          description: 'Permission level of the member in the channel (DEPRECATED:
            use channel_role instead)'
          enum:
          - member
          - moderator
          - admin
          - owner
          title: Role
          type: string
          x-stream-index: "017"
        shadow_banned:
          description: Whether member is shadow banned in this channel or not
          title: Shadow banned
          type: boolean
          x-stream-index: "014"
        status:
          type: string
          x-stream-index: "008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        user_id:
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - custom
      - created_at
      - updated_at
      - banned
      - shadow_banned
      - channel_role
      - notifications_muted
      title: Channel member
      type: object
    ChannelMessages:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
          x-stream-index: "002"
      required:
      - messages
      type: object
    ChannelMute:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: number
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Owner of channel mute
          title: User
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    ChannelMutedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.muted
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelMutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelOwnCapability:
      description: All possibility of string to use
      enum:
      - ban-channel-members
      - cast-poll-vote
      - connect-events
      - create-attachment
      - delete-any-message
      - delete-channel
      - delete-own-message
      - flag-message
      - freeze-channel
      - join-channel
      - leave-channel
      - mute-channel
      - pin-message
      - query-poll-votes
      - quote-message
      - read-events
      - search-messages
      - send-custom-events
      - send-links
      - send-message
      - send-poll
      - send-reaction
      - send-reply
      - send-typing-events
      - set-channel-cooldown
      - skip-slow-mode
      - slow-mode
      - typing-events
      - update-any-message
      - update-channel
      - update-channel-members
      - update-own-message
      - update-thread
      - upload-file
      title: ChannelOwnCapability
      type: string
    ChannelResponse:
      description: Represents channel in chat
      properties:
        auto_translation_enabled:
          description: Whether auto translation is enabled or not
          title: Auto translation
          type: boolean
          x-stream-index: "017"
        auto_translation_language:
          description: Language to translate to when auto translation is active
          title: Auto translation language
          type: string
          x-stream-index: "018"
        blocked:
          description: Whether this channel is blocked by current user or not
          title: Blocked
          type: boolean
          x-stream-index: "023"
        cid:
          description: Channel CID (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfigWithInfo'
          description: Channel configuration
          title: ChannelConfigWithInfo
          x-stream-index: "013"
        cooldown:
          description: Cooldown period after sending each message
          format: int32
          title: Cooldown
          type: integer
          x-stream-index: "020"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "005"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Creator of the channel
          title: UserResponse
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "026"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "007"
        disabled:
          type: boolean
          x-stream-index: "010"
        frozen:
          description: Whether channel is frozen or not
          title: Frozen
          type: boolean
          x-stream-index: "009"
        hidden:
          description: Whether this channel is hidden by current user or not
          title: Hidden
          type: boolean
          x-stream-index: "022"
        hide_messages_before:
          description: Date since when the message history is accessible
          format: date-time
          title: Hide messages before
          type: number
          x-stream-index: "019"
        id:
          description: Channel unique ID
          title: ID
          type: string
          x-stream-index: "001"
        last_message_at:
          description: Date of the last message sent
          format: date-time
          title: Last message at
          type: number
          x-stream-index: "004"
        member_count:
          description: Number of members in the channel
          format: int32
          title: Member count
          type: integer
          x-stream-index: "012"
        members:
          description: List of channel members (max 100)
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: ChannelMembers
          type: array
          x-stream-index: "011"
        mute_expires_at:
          description: Date of mute expiration
          format: date-time
          title: Mute expires at
          type: number
          x-stream-index: "015"
        muted:
          description: Whether this channel is muted or not
          title: Muted
          type: boolean
          x-stream-index: "014"
        own_capabilities:
          description: List of channel capabilities of authenticated user
          items:
            $ref: '#/components/schemas/ChannelOwnCapability'
          title: ChannelOwnCapability
          type: array
          x-stream-index: "021"
        team:
          description: Team the channel belongs to (multi-tenant only)
          title: Team
          type: string
          x-stream-index: "016"
        truncated_at:
          description: Date of the latest truncation of the channel
          format: date-time
          title: UserResponse
          type: number
          x-stream-index: "024"
        truncated_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "025"
        type:
          description: Type of the channel
          title: Type
          type: string
          x-stream-docs-page-id: channel_features
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "006"
      required:
      - id
      - type
      - cid
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      title: Channel
      type: object
    ChannelStateResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "002.001"
        hidden:
          type: boolean
          x-stream-index: "001.010"
        hide_messages_before:
          format: date-time
          type: number
          x-stream-index: "001.011"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "001.007"
        membership:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.008"
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001.002"
        pending_messages:
          items:
            $ref: '#/components/schemas/PendingMessageResponse'
          type: array
          x-stream-index: "001.012"
        pinned_messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001.003"
        read:
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          type: array
          x-stream-index: "001.006"
        threads:
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          type: array
          x-stream-index: "001.009"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.004"
        watchers:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.005"
      required:
      - messages
      - pinned_messages
      - members
      - threads
      - duration
      type: object
    ChannelStateResponseFields:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        hidden:
          description: Whether this channel is hidden or not
          title: Hidden
          type: boolean
          x-stream-index: "010"
        hide_messages_before:
          description: Messages before this date are hidden from the user
          format: date-time
          title: Hide messages before
          type: number
          x-stream-index: "011"
        members:
          description: List of channel members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "007"
        membership:
          $ref: '#/components/schemas/ChannelMember'
          description: Current user membership object
          title: Membership
          x-stream-index: "008"
        messages:
          description: List of channel messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Message
          type: array
          x-stream-index: "002"
        pending_messages:
          description: Pending messages that this user has sent
          items:
            $ref: '#/components/schemas/PendingMessageResponse'
          title: Pending messages
          type: array
          x-stream-index: "012"
        pinned_messages:
          description: List of pinned messages in the channel
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Pinned messages
          type: array
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "003"
        read:
          description: List of read states
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          title: Read
          type: array
          x-stream-index: "006"
        threads:
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          type: array
          x-stream-index: "009"
        watcher_count:
          description: Number of channel watchers
          format: int32
          title: Watcher count
          type: integer
          x-stream-index: "004"
        watchers:
          description: List of user who is watching the channel
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Watchers
          type: array
          x-stream-index: "005"
      required:
      - messages
      - pinned_messages
      - members
      - threads
      type: object
    ChannelTruncatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.004"
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "001.005"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: channel.truncated
          type: string
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - type
      - created_at
      title: ChannelTruncatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelTypeConfig:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 003.002.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 003.002.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 003.002.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 003.002.025
        blocklist:
          type: string
          x-stream-index: 003.002.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 003.002.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 003.002.023
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
          x-stream-index: "003.003"
        connect_events:
          type: boolean
          x-stream-index: 003.002.004
        created_at:
          format: date-time
          type: number
          x-stream-index: 003.001.003
        custom_events:
          type: boolean
          x-stream-index: 003.002.012
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 003.002.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 003.002.018
        mutes:
          type: boolean
          x-stream-index: 003.002.009
        name:
          type: string
          x-stream-index: 003.002.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 003.002.026
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 003.002.027
        permissions:
          items:
            $ref: '#/components/schemas/PolicyRequest'
          type: array
          x-stream-index: "001"
        polls:
          type: boolean
          x-stream-index: 003.002.016
        push_notifications:
          type: boolean
          x-stream-index: 003.002.013
        quotes:
          type: boolean
          x-stream-index: 003.002.008
        reactions:
          type: boolean
          x-stream-index: 003.002.006
        read_events:
          type: boolean
          x-stream-index: 003.002.003
        reminders:
          type: boolean
          x-stream-index: 003.002.014
        replies:
          type: boolean
          x-stream-index: 003.002.007
        search:
          type: boolean
          x-stream-index: 003.002.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 003.002.028
        typing_events:
          type: boolean
          x-stream-index: 003.002.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        uploads:
          type: boolean
          x-stream-index: 003.002.010
        url_enrichment:
          type: boolean
          x-stream-index: 003.002.011
      required:
      - permissions
      - grants
      - created_at
      - updated_at
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - commands
      type: object
    ChannelUnFrozenEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.unfrozen
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: ChannelUnFrozenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUnmutedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.unmuted
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelUnmutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUpdatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "004.004"
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "004.005"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: channel.updated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelVisibleEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        type:
          default: channel.visible
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ChannelVisibleEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CheckExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        file_url:
          type: string
          x-stream-index: "002"
      required:
      - duration
      - file_url
      title: Response
      type: object
    CheckPushRequest:
      description: Check push request
      nullable: true
      properties:
        apn_template:
          description: Push message template for APN
          title: APN template
          type: string
          x-stream-docs-page-id: push_template
          x-stream-index: "002"
        firebase_data_template:
          description: Push message data template for Firebase
          title: Firebase data template
          type: string
          x-stream-docs-page-id: push_template
          x-stream-index: "004"
        firebase_template:
          description: Push message template for Firebase
          title: Firebase template
          type: string
          x-stream-docs-page-id: push_template
          x-stream-index: "003"
        message_id:
          description: Message ID to send push notification for
          title: Message ID
          type: string
          x-stream-index: "001"
        push_provider_name:
          description: Name of push provider
          title: Name of push provider
          type: string
          x-stream-index: "007"
        push_provider_type:
          description: Push provider type
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          title: Type of push provider
          type: string
          x-stream-index: "006"
        skip_devices:
          description: Don't require existing devices to render templates
          title: Skip devices
          type: boolean
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      title: CheckPushRequest
      type: object
    CheckPushResponse:
      nullable: true
      properties:
        device_errors:
          additionalProperties:
            $ref: '#/components/schemas/DeviceErrorInfo'
          description: Object with device errors
          title: Device errors
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: device_id
        duration:
          type: string
          x-stream-index: "007.001"
        general_errors:
          description: List of general errors
          items:
            type: string
          title: General errors
          type: array
          x-stream-index: "002"
        rendered_apn_template:
          title: Rendered APN template
          type: string
          x-stream-index: "004"
        rendered_firebase_template:
          title: Rendered Firebase template
          type: string
          x-stream-index: "005"
        rendered_message:
          additionalProperties:
            type: string
          title: Rendered message
          type: object
          x-stream-index: "006"
        skip_devices:
          description: Don't require existing devices to render templates
          title: Skip devices
          type: boolean
          x-stream-index: "003"
      required:
      - duration
      type: object
    CheckRequest:
      nullable: true
      properties:
        config_key:
          type: string
          x-stream-index: "005"
        entity_creator_id:
          type: string
          x-stream-index: "003"
        entity_id:
          type: string
          x-stream-index: "002"
        entity_type:
          type: string
          x-stream-index: "001"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "004"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        test_mode:
          type: boolean
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      required:
      - entity_type
      - entity_id
      - entity_creator_id
      - config_key
      type: object
    CheckResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "005.001"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "004"
        recommended_action:
          type: string
          x-stream-index: "003"
        status:
          type: string
          x-stream-index: "001"
        task_id:
          type: string
          x-stream-index: "002"
      required:
      - status
      - recommended_action
      - duration
      title: Response
      type: object
    CheckSNSRequest:
      nullable: true
      properties:
        sns_key:
          description: AWS SNS access key
          title: SNS key
          type: string
          x-stream-index: "002"
        sns_secret:
          description: AWS SNS key secret
          title: SNS secret
          type: string
          x-stream-index: "003"
        sns_topic_arn:
          description: AWS SNS topic ARN
          title: SNS Topic ARN
          type: string
          x-stream-index: "001"
      type: object
    CheckSNSResponse:
      nullable: true
      properties:
        data:
          additionalProperties: {}
          description: Error data
          title: ReadOnlyData
          type: object
          x-stream-index: "003"
        duration:
          type: string
          x-stream-index: "004.001"
        error:
          description: Error text
          title: Error
          type: string
          x-stream-index: "002"
        status:
          description: Validation result
          enum:
          - ok
          - error
          title: Status
          type: string
          x-stream-index: "001"
      required:
      - status
      - duration
      type: object
    CheckSQSRequest:
      nullable: true
      properties:
        sqs_key:
          description: AWS SQS access key
          title: SQS key
          type: string
          x-stream-index: "002"
        sqs_secret:
          description: AWS SQS key secret
          title: SQS secret
          type: string
          x-stream-index: "003"
        sqs_url:
          description: AWS SQS endpoint URL
          title: SQS URL
          type: string
          x-stream-index: "001"
      type: object
    CheckSQSResponse:
      nullable: true
      properties:
        data:
          additionalProperties: {}
          description: Error data
          title: ReadOnlyData
          type: object
          x-stream-index: "003"
        duration:
          type: string
          x-stream-index: "004.001"
        error:
          description: Error text
          title: Error
          type: string
          x-stream-index: "002"
        status:
          description: Validation result
          enum:
          - ok
          - error
          title: Status
          type: string
          x-stream-index: "001"
      required:
      - status
      - duration
      type: object
    ClosedCaptionEvent:
      description: This event is sent when closed captions are being sent in a call,
        clients should use this to show the closed captions in the call screen
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        closed_caption:
          $ref: '#/components/schemas/CallClosedCaption'
          description: The closed caption object
          title: CallClosedCaption
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_caption
          description: 'The type of event: "call.closed_caption" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - closed_caption
      title: ClosedCaptionEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CollectUserFeedbackRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        rating:
          format: int32
          maximum: 5
          minimum: 1
          type: integer
          x-stream-index: "007"
        reason:
          maxLength: 1000
          type: string
          x-stream-index: "008"
        sdk:
          maxLength: 50
          type: string
          x-stream-index: "005"
        sdk_version:
          maxLength: 50
          type: string
          x-stream-index: "006"
        user_session_id:
          maxLength: 50
          type: string
          x-stream-index: "004"
      required:
      - user_session_id
      - sdk
      - sdk_version
      - rating
      type: object
    CollectUserFeedbackResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    Command:
      description: Represents custom chat command
      nullable: true
      properties:
        args:
          description: Arguments help text, shown in commands auto-completion
          title: Arguments
          type: string
          x-stream-index: "006"
        created_at:
          description: Date/time of creation
          format: date-time
          readOnly: true
          title: Created at
          type: number
          x-stream-index: "001"
        description:
          description: Description, shown in commands auto-completion
          title: Description
          type: string
          x-stream-index: "005"
        name:
          description: Unique command name
          title: Name
          type: string
          x-stream-index: "004"
        set:
          description: Set name used for grouping commands
          title: Set
          type: string
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          readOnly: true
          title: Updated at
          type: number
          x-stream-index: "002"
      required:
      - name
      - description
      - args
      - set
      title: Command
      type: object
    CommitMessageRequest:
      nullable: true
      type: object
    ConfigOverrides:
      properties:
        blocklist:
          type: string
          x-stream-index: "008"
        blocklist_behavior:
          enum:
          - flag
          - block
          type: string
          x-stream-index: "009"
        commands:
          items:
            type: string
          type: array
          x-stream-index: "011"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "010"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "007"
        quotes:
          type: boolean
          x-stream-index: "004"
        reactions:
          type: boolean
          x-stream-index: "002"
        replies:
          type: boolean
          x-stream-index: "003"
        typing_events:
          type: boolean
          x-stream-index: "001"
        uploads:
          type: boolean
          x-stream-index: "005"
        url_enrichment:
          type: boolean
          x-stream-index: "006"
      required:
      - grants
      - commands
      type: object
    ConfigResponse:
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          x-stream-index: "009"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          x-stream-index: "008"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          x-stream-index: "010"
        async:
          type: boolean
          x-stream-index: "003"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          x-stream-index: "005"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          x-stream-index: "006"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          x-stream-index: "004"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "012"
        key:
          type: string
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "013"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          x-stream-index: "011"
      required:
      - key
      - team
      - async
      - created_at
      - updated_at
      type: object
    Coordinates:
      properties:
        latitude:
          format: float
          type: number
          x-stream-index: "001"
        longitude:
          format: float
          type: number
          x-stream-index: "002"
      required:
      - latitude
      - longitude
      type: object
    Count:
      properties:
        approximate:
          type: boolean
          x-stream-index: "002"
        value:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - value
      - approximate
      type: object
    CountrywiseAggregateStats:
      nullable: true
      properties:
        participant_count:
          $ref: '#/components/schemas/Count'
          x-stream-index: "001"
        publisher_jitter:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "003"
        publisher_latency:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "002"
        subscriber_jitter:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "005"
        subscriber_latency:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "004"
      type: object
    CreateBlockListRequest:
      description: Block list contains restricted words
      nullable: true
      properties:
        name:
          description: Block list name
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
        type:
          description: Block list type.
          enum:
          - regex
          - domain
          - email
          - word
          title: Type
          type: string
          x-stream-index: "003"
        words:
          description: List of words to block
          items:
            type: string
          minimum: 1
          title: Words
          type: array
          x-stream-index: "002"
      required:
      - name
      - words
      title: Block list
      type: object
      x-stream-docs-page-id: block_lists
    CreateCallTypeRequest:
      description: Request for creating a call type
      nullable: true
      properties:
        external_storage:
          description: the external storage for the call type
          title: ExternalStorage
          type: string
          x-stream-index: "002.004"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          description: the permissions granted to each role
          title: Grants
          type: object
          x-stream-index: "002.001"
        name:
          type: string
          x-stream-index: "001"
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
          description: the notification settings for the call type
          title: NotificationSettings
          x-stream-index: "002.002"
        settings:
          $ref: '#/components/schemas/CallSettingsRequest'
          description: the settings for the call type
          title: Settings
          x-stream-index: "002.003"
      required:
      - name
      title: CreateCallTypeRequest
      type: object
    CreateCallTypeResponse:
      description: Response for creating a call type
      nullable: true
      properties:
        created_at:
          description: the time the call type was created
          format: date-time
          title: CreatedAt
          type: number
          x-stream-index: "001.005"
        duration:
          type: string
          x-stream-index: "002.001"
        external_storage:
          description: the external storage for the call type
          title: ExternalStorage
          type: string
          x-stream-index: "001.007"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          description: the permissions granted to each role
          title: Grants
          type: object
          x-stream-index: "001.002"
        name:
          description: the name of the call type
          title: Name
          type: string
          x-stream-index: "001.001"
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
          description: the notification settings for the call type
          title: NotificationSettings
          x-stream-index: "001.004"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          description: the settings for the call type
          title: Settings
          x-stream-index: "001.003"
        updated_at:
          description: the time the call type was last updated
          format: date-time
          title: UpdatedAt
          type: number
          x-stream-index: "001.006"
      required:
      - name
      - grants
      - settings
      - notification_settings
      - created_at
      - updated_at
      - duration
      title: CreateCallTypeResponse
      type: object
    CreateChannelTypeRequest:
      nullable: true
      properties:
        automod:
          description: Automod
          enum:
          - disabled
          - simple
          - AI
          title: Automod
          type: string
          x-stream-index: "017"
        automod_behavior:
          description: Automod behavior
          enum:
          - flag
          - block
          title: Automod behavior
          type: string
          x-stream-index: "018"
        blocklist:
          description: Blocklist
          title: Blocklist
          type: string
          x-stream-index: "022"
        blocklist_behavior:
          description: Blocklist behavior
          enum:
          - flag
          - block
          - shadow_block
          title: Blocklist behavior
          type: string
          x-stream-index: "023"
        blocklists:
          description: Blocklists
          items:
            $ref: '#/components/schemas/BlockListOptions'
          title: Blocklists
          type: array
          x-stream-index: "024"
        commands:
          description: List of commands that channel supports
          items:
            type: string
          title: Commands
          type: array
          x-stream-index: "019"
        connect_events:
          description: Connect events
          title: Connect events
          type: boolean
          x-stream-index: "004"
        custom_events:
          description: Custom events
          title: Custom events
          type: boolean
          x-stream-index: "011"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          description: List of grants for the channel type
          title: Grants
          type: object
          x-stream-index: "021"
        mark_messages_pending:
          description: Mark messages pending
          title: Mark messages pending
          type: boolean
          x-stream-index: "013"
        max_message_length:
          description: Max message length
          format: int32
          title: Max message length
          type: integer
          x-stream-index: "016"
        message_retention:
          description: Message retention
          enum:
          - infinite
          - numeric
          title: Message retention
          type: string
          x-stream-index: "015"
        mutes:
          description: Mutes
          title: Mutes
          type: boolean
          x-stream-index: "008"
        name:
          description: Channel type name
          title: Name
          type: string
          x-stream-index: "001"
        partition_size:
          description: Partition size
          format: int32
          minimum: 10
          title: Partition size
          type: integer
          x-stream-index: "025"
        partition_ttl:
          description: Partition TTL
          example: 24h
          format: duration
          nullable: true
          title: Partition TTL
          type: string
          x-stream-index: "026"
        permissions:
          description: List of permissions for the channel type
          items:
            $ref: '#/components/schemas/PolicyRequest'
          title: Permissions
          type: array
          x-stream-index: "020"
        polls:
          description: Polls
          title: Polls
          type: boolean
          x-stream-index: "014"
        push_notifications:
          description: Push notifications
          title: Push notifications
          type: boolean
          x-stream-index: "012"
        reactions:
          description: Reactions
          title: Reactions
          type: boolean
          x-stream-index: "005"
        read_events:
          description: Read events
          title: Read events
          type: boolean
          x-stream-index: "003"
        replies:
          description: Replies
          title: Replies
          type: boolean
          x-stream-index: "006"
        search:
          description: Search
          title: Search
          type: boolean
          x-stream-index: "007"
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: "027"
        typing_events:
          description: Typing events
          title: Typing events
          type: boolean
          x-stream-index: "002"
        uploads:
          description: Uploads
          title: Uploads
          type: boolean
          x-stream-index: "009"
        url_enrichment:
          description: URL enrichment
          title: URL enrichment
          type: boolean
          x-stream-index: "010"
      required:
      - name
      - max_message_length
      - automod
      - automod_behavior
      title: CreateChannelTypeRequest
      type: object
    CreateChannelTypeResponse:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 001.001.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 001.001.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.001.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 001.001.025
        blocklist:
          type: string
          x-stream-index: 001.001.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.001.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 001.001.023
        commands:
          items:
            type: string
          type: array
          x-stream-index: "001.003"
        connect_events:
          type: boolean
          x-stream-index: 001.001.004
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.002.003
        custom_events:
          type: boolean
          x-stream-index: 001.001.012
        duration:
          type: string
          x-stream-index: "004.001"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "003"
        mark_messages_pending:
          type: boolean
          x-stream-index: 001.001.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 001.001.018
        mutes:
          type: boolean
          x-stream-index: 001.001.009
        name:
          type: string
          x-stream-index: 001.001.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 001.001.026
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 001.001.027
        permissions:
          items:
            $ref: '#/components/schemas/PolicyRequest'
          type: array
          x-stream-index: "002"
        polls:
          type: boolean
          x-stream-index: 001.001.016
        push_notifications:
          type: boolean
          x-stream-index: 001.001.013
        quotes:
          type: boolean
          x-stream-index: 001.001.008
        reactions:
          type: boolean
          x-stream-index: 001.001.006
        read_events:
          type: boolean
          x-stream-index: 001.001.003
        reminders:
          type: boolean
          x-stream-index: 001.001.014
        replies:
          type: boolean
          x-stream-index: 001.001.007
        search:
          type: boolean
          x-stream-index: 001.001.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 001.001.028
        typing_events:
          type: boolean
          x-stream-index: 001.001.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 001.002.004
        uploads:
          type: boolean
          x-stream-index: 001.001.010
        url_enrichment:
          type: boolean
          x-stream-index: 001.001.011
      required:
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - created_at
      - updated_at
      - commands
      - permissions
      - grants
      - duration
      type: object
    CreateCommandRequest:
      description: Create a new command
      nullable: true
      properties:
        args:
          description: Arguments help text, shown in commands auto-completion
          maxLength: 255
          title: Arguments
          type: string
          x-stream-index: "003"
        description:
          description: Description, shown in commands auto-completion
          maxLength: 255
          title: Description
          type: string
          x-stream-index: "002"
        name:
          description: Unique command name
          maxLength: 255
          minLength: 1
          title: Name
          type: string
          x-stream-index: "001"
        set:
          description: Set name used for grouping commands
          maxLength: 255
          title: Set
          type: string
          x-stream-index: "004"
      required:
      - name
      - description
      title: CreateCommandRequest
      type: object
    CreateCommandResponse:
      nullable: true
      properties:
        command:
          $ref: '#/components/schemas/Command'
          description: Command object
          title: Command
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: CreateCommandResponse
      type: object
    CreateDeviceRequest:
      description: Create device request
      nullable: true
      properties:
        id:
          description: Device ID
          maxLength: 255
          minLength: 1
          title: ID
          type: string
          x-stream-index: "001"
        push_provider:
          description: Push provider
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          title: PushProvider
          type: string
          x-stream-index: "002"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          x-stream-index: "005.001"
        voip_token:
          description: When true the token is for Apple VoIP push notifications
          title: VoipToken
          type: boolean
          x-stream-index: "004"
      required:
      - id
      - push_provider
      title: CreateDeviceRequest
      type: object
    CreateExternalStorageRequest:
      description: Create external storage
      nullable: true
      properties:
        aws_s3:
          $ref: '#/components/schemas/S3Request'
          description: Only required if you want to create an Amazon S3 storage
          title: AwsS3
          x-stream-index: "003.004"
        azure_blob:
          $ref: '#/components/schemas/AzureRequest'
          description: Only required if you want to create an Azure Blob Storage
          title: AzureBlob
          x-stream-index: "003.006"
        bucket:
          description: The name of the bucket on the service provider
          title: Bucket
          type: string
          x-stream-index: "003.002"
        gcs_credentials:
          type: string
          x-stream-index: "003.005"
        name:
          description: The name of the provider, this must be unique
          title: Name
          type: string
          x-stream-index: "001"
        path:
          description: The path prefix to use for storing files
          title: Path
          type: string
          x-stream-index: "003.003"
        storage_type:
          description: The type of storage to use
          enum:
          - s3
          - gcs
          - abs
          title: StorageType
          type: string
          x-stream-index: "003.001"
      required:
      - name
      - storage_type
      - bucket
      title: CreateExternalStorageRequest
      type: object
    CreateExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    CreateGuestRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      type: object
    CreateGuestResponse:
      nullable: true
      properties:
        access_token:
          description: the access token to authenticate the user
          title: Access token
          type: string
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      - access_token
      - duration
      type: object
    CreateImportRequest:
      nullable: true
      properties:
        mode:
          enum:
          - insert
          - upsert
          type: string
          x-stream-index: "002"
        path:
          type: string
          x-stream-index: "001"
      required:
      - path
      - mode
      type: object
    CreateImportResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        import_task:
          $ref: '#/components/schemas/ImportTask'
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    CreateImportURLRequest:
      nullable: true
      properties:
        filename:
          type: string
          x-stream-index: "001"
      type: object
    CreateImportURLResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        path:
          type: string
          x-stream-index: "001"
        upload_url:
          type: string
          x-stream-index: "002"
      required:
      - path
      - upload_url
      - duration
      title: Response
      type: object
    CreatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "004"
        position:
          format: int32
          type: integer
          x-stream-index: "003"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
      required:
      - text
      type: object
    CreatePollRequest:
      description: Contains all information needed to create a new poll
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Indicates whether users can suggest user defined answers
          title: Allow answers
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "008"
        description:
          description: A description of the poll
          title: Description
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Indicates whether users can cast multiple votes
          title: Multiple choice
          type: boolean
          x-stream-index: "006"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        is_closed:
          description: Indicates whether the poll is open for voting
          title: Is closed
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Indicates the maximum amount of votes a user can cast
          format: int32
          maximum: 10
          title: Maximum votes allowed
          type: integer
          x-stream-index: "007"
        name:
          description: The name of the poll
          title: Name
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionInput'
          maximum: 100
          type: array
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "012.002"
        user_id:
          type: string
          x-stream-index: "012.001"
        voting_visibility:
          enum:
          - anonymous
          - public
          type: string
          x-stream-index: "005"
      required:
      - name
      title: Create Poll Request
      type: object
    CreateRoleRequest:
      nullable: true
      properties:
        name:
          description: Role name
          maxLength: 64
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      type: object
    CreateRoleResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        role:
          $ref: '#/components/schemas/Role'
          x-stream-index: "002"
      required:
      - duration
      - role
      title: Response
      type: object
    CustomActionRequest:
      properties:
        id:
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      type: object
    CustomCheckFlag:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        labels:
          items:
            type: string
          type: array
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "002"
        type:
          maxLength: 255
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    CustomCheckRequest:
      nullable: true
      properties:
        entity_creator_id:
          type: string
          x-stream-index: "003"
        entity_id:
          type: string
          x-stream-index: "002"
        entity_type:
          type: string
          x-stream-index: "001"
        flags:
          items:
            $ref: '#/components/schemas/CustomCheckFlag'
          maximum: 10
          minimum: 1
          type: array
          x-stream-index: "005"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "006.002"
        user_id:
          type: string
          x-stream-index: "006.001"
      required:
      - entity_type
      - entity_id
      - flags
      type: object
    CustomCheckResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        id:
          type: string
          x-stream-index: "001"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          x-stream-index: "002"
        status:
          type: string
          x-stream-index: "003"
      required:
      - id
      - status
      - duration
      title: Response
      type: object
    CustomVideoEvent:
      description: A custom event, this event is used to send custom events to other
        participants in the call.
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "003"
        type:
          default: custom
          description: The type of event, "custom" in this case
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - custom
      - user
      title: CustomVideoEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    DailyAggregateCallDurationReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/CallDurationReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateCallParticipantCountReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/CallParticipantCountReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateCallsPerDayReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/CallsPerDayReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateQualityScoreReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/QualityScoreReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateSDKUsageReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/SDKUsageReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateUserFeedbackReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/UserFeedbackReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    Data:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    DataDogInfo:
      properties:
        api_key:
          type: string
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "003"
        site:
          type: string
          x-stream-index: "002"
      type: object
    DeactivateUserRequest:
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who deactivated the user
          title: Created by ID
          type: string
          x-stream-index: "003"
        mark_messages_deleted:
          description: Makes messages appear to be deleted
          title: Mark messages deleted
          type: boolean
          x-stream-index: "002"
      type: object
    DeactivateUserResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Deactivated user object
          title: User
          x-stream-index: "001"
      required:
      - duration
      type: object
    DeactivateUsersRequest:
      description: Deactivate users request
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who deactivated the users
          title: Created by ID
          type: string
          x-stream-index: "003"
        mark_channels_deleted:
          type: boolean
          x-stream-index: "004"
        mark_messages_deleted:
          description: Makes messages appear to be deleted
          title: Mark messages deleted
          type: boolean
          x-stream-index: "002"
        user_ids:
          description: User IDs to deactivate
          items:
            type: string
          maximum: 100
          minimum: 1
          title: User IDs
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      title: DeactivateUsersRequest
      type: object
    DeactivateUsersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      title: Response
      type: object
    DeleteActivityRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteCallRequest:
      description: DeleteCallRequest is the payload for deleting a call.
      nullable: true
      properties:
        hard:
          description: if true the call will be hard deleted along with all related
            data
          title: Hard
          type: boolean
          x-stream-index: "001"
      title: DeleteCallRequest
      type: object
    DeleteCallResponse:
      description: DeleteCallResponse is the payload for deleting a call.
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          title: Call
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        task_id:
          title: TaskID
          type: string
          x-stream-index: "002"
      required:
      - call
      - duration
      title: DeleteCallResponse
      type: object
    DeleteChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteChannelsRequest:
      nullable: true
      properties:
        cids:
          description: All channels that should be deleted
          items:
            type: string
          maximum: 100
          minimum: 1
          title: Channels CID
          type: array
          x-stream-index: "001"
        hard_delete:
          description: Specify if channels and all ressources should be hard deleted
          title: Hard delete
          type: boolean
          x-stream-index: "002"
      required:
      - cids
      type: object
    DeleteChannelsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        result:
          additionalProperties:
            $ref: '#/components/schemas/DeleteChannelsResultResponse'
          description: Map of channel IDs and their deletion results
          title: Result
          type: object
          x-stream-index: "001"
        task_id:
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    DeleteChannelsResultResponse:
      nullable: true
      properties:
        error:
          type: string
          x-stream-index: "002"
        status:
          type: string
          x-stream-index: "001"
      required:
      - status
      type: object
    DeleteCommandResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        name:
          description: Command name
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      - duration
      title: DeleteCommandResponse
      type: object
    DeleteExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteMessageRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
      required:
      - message
      - duration
      title: Response
      type: object
    DeleteModerationConfigResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteModerationTemplateResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteReactionRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteRecordingResponse:
      description: Response for DeleteRecording
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: DeleteRecordingResponse
      type: object
    DeleteSegmentTargetsRequest:
      nullable: true
      properties:
        target_ids:
          description: Target IDs
          items:
            type: string
          maximum: 100
          minimum: 1
          title: '[]string'
          type: array
          x-stream-index: "002"
      required:
      - target_ids
      type: object
    DeleteTranscriptionResponse:
      description: DeleteTranscriptionResponse is the payload for deleting a transcription.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: DeleteTranscriptionResponse
      type: object
    DeleteUserRequest:
      properties:
        delete_conversation_channels:
          type: boolean
          x-stream-index: "003"
        delete_feeds_content:
          type: boolean
          x-stream-index: "004"
        hard_delete:
          type: boolean
          x-stream-index: "001"
        mark_messages_deleted:
          type: boolean
          x-stream-index: "002"
      type: object
    DeleteUsersRequest:
      nullable: true
      properties:
        calls:
          description: |
            Calls delete mode.
            Affected calls are those that include exactly two members, one of whom is the user being deleted.

            * null or empty string - doesn't delete any calls
            * soft - marks user's calls and their related data as deleted (soft-delete)
            * hard - deletes user's calls and their data completely (hard-delete)
          enum:
          - soft
          - hard
          title: Delete User's calls
          type: string
          x-stream-index: 001.002.004
        conversations:
          description: |
            Conversation channels delete mode.
            Conversation channel is any channel which only has two members one of which is the user being deleted.

            * null or empty string - doesn't delete any conversation channels
            * soft - marks all conversation channels as deleted (same effect as Delete Channels with 'hard' option disabled)
            * hard - deletes channel and all its data completely including messages (same effect as Delete Channels with 'hard' option enabled)
          enum:
          - soft
          - hard
          title: Delete Conversations
          type: string
          x-stream-index: 001.002.003
        messages:
          description: |
            Message delete mode.

            * null or empty string - doesn't delete user messages
            * soft - marks all user messages as deleted without removing any related message data
            * pruning - marks all user messages as deleted, nullifies message information and removes some message data such as reactions and flags
            * hard - deletes messages completely with all related information
          enum:
          - soft
          - pruning
          - hard
          title: Delete Messages
          type: string
          x-stream-index: 001.002.002
        new_call_owner_id:
          type: string
          x-stream-index: 001.002.006
        new_channel_owner_id:
          type: string
          x-stream-index: 001.002.005
        user:
          description: |
            User delete mode.

            * soft - marks user as deleted and retains all user data
            * pruning - marks user as deleted and nullifies user information
            * hard - deletes user completely. Requires 'hard' option for messages and conversations as well
          enum:
          - soft
          - pruning
          - hard
          title: Delete User
          type: string
          x-stream-index: 001.002.001
        user_ids:
          description: IDs of users to delete
          items:
            type: string
          maximum: 100
          minimum: 1
          title: User IDs
          type: array
          x-stream-index: "001.001"
      required:
      - user_ids
      type: object
    DeleteUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          description: ID of the task to delete users
          title: Task ID
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      type: object
    Device:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        disabled:
          type: boolean
          x-stream-index: "002.003"
        disabled_reason:
          type: string
          x-stream-index: "002.004"
        id:
          type: string
          x-stream-index: 002.001.004
        push_provider:
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          type: string
          x-stream-index: 002.001.001
        push_provider_name:
          type: string
          x-stream-index: 002.001.003
        user_id:
          type: string
          x-stream-index: "004"
        voip:
          type: boolean
          x-stream-index: 002.001.005
      required:
      - push_provider
      - id
      - created_at
      - user_id
      type: object
    DeviceErrorInfo:
      properties:
        error_message:
          type: string
          x-stream-index: "003"
        provider:
          type: string
          x-stream-index: "001"
        provider_name:
          type: string
          x-stream-index: "002"
      required:
      - provider
      - provider_name
      - error_message
      type: object
    DeviceResponse:
      description: Response for Device
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        disabled:
          description: Whether device is disabled or not
          title: Disabled
          type: boolean
          x-stream-index: "005"
        disabled_reason:
          description: Reason explaining why device had been disabled
          title: Reason
          type: string
          x-stream-index: "006"
        id:
          description: Device ID
          title: ID
          type: string
          x-stream-index: "003"
        push_provider:
          description: Push provider
          title: PushProvider
          type: string
          x-stream-index: "001"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "002"
        user_id:
          description: User ID
          title: UserID
          type: string
          x-stream-index: "008"
        voip:
          description: When true the token is for Apple VoIP push notifications
          title: Voip
          type: boolean
          x-stream-index: "007"
      required:
      - push_provider
      - id
      - created_at
      - user_id
      title: DeviceResponse
      type: object
    EdgeResponse:
      properties:
        continent_code:
          type: string
          x-stream-index: "007.003"
        country_iso_code:
          type: string
          x-stream-index: "007.002"
        green:
          format: int32
          type: integer
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        latency_test_url:
          type: string
          x-stream-index: "002"
        latitude:
          format: float
          type: number
          x-stream-index: "006.001"
        longitude:
          format: float
          type: number
          x-stream-index: "006.002"
        red:
          format: int32
          type: integer
          x-stream-index: "005"
        subdivision_iso_code:
          type: string
          x-stream-index: "007.001"
        yellow:
          format: int32
          type: integer
          x-stream-index: "004"
      required:
      - id
      - latency_test_url
      - green
      - yellow
      - red
      - latitude
      - longitude
      - subdivision_iso_code
      - country_iso_code
      - continent_code
      type: object
    EgressHLSResponse:
      properties:
        playlist_url:
          type: string
          x-stream-index: "001"
      required:
      - playlist_url
      type: object
    EgressRTMPResponse:
      properties:
        name:
          type: string
          x-stream-index: "001"
        started_at:
          format: date-time
          type: number
          x-stream-index: "004"
        stream_key:
          type: string
          x-stream-index: "003"
        stream_url:
          type: string
          x-stream-index: "002"
      required:
      - name
      - started_at
      type: object
    EgressResponse:
      properties:
        broadcasting:
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/EgressHLSResponse'
          x-stream-index: "002"
        rtmps:
          items:
            $ref: '#/components/schemas/EgressRTMPResponse'
          type: array
          x-stream-index: "003"
      required:
      - broadcasting
      - rtmps
      type: object
    EndCallRequest:
      description: Request for ending a call
      nullable: true
      title: EndCallRequest
      type: object
    EndCallResponse:
      description: Response for ending a call
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: EndCallResponse
      type: object
    EnrichedActivity:
      properties:
        actor:
          $ref: '#/components/schemas/Data'
          x-stream-index: "002"
        foreign_id:
          type: string
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        latest_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "013"
        object:
          $ref: '#/components/schemas/Data'
          x-stream-index: "004"
        origin:
          $ref: '#/components/schemas/Data'
          x-stream-index: "008"
        own_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "012"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "011"
        score:
          format: float
          type: number
          x-stream-index: "010"
        target:
          $ref: '#/components/schemas/Data'
          x-stream-index: "006"
        to:
          items:
            type: string
          type: array
          x-stream-index: "009"
        verb:
          type: string
          x-stream-index: "003"
      type: object
    EnrichedReaction:
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "003"
        children_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "010"
        created_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "012"
        data:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        kind:
          type: string
          x-stream-index: "002"
        latest_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "008"
        own_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "009"
        parent:
          type: string
          x-stream-index: "007"
        target_feeds:
          items:
            type: string
          type: array
          x-stream-index: "006"
        updated_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "013"
        user:
          $ref: '#/components/schemas/Data'
          x-stream-index: "011"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - kind
      - activity_id
      - user_id
      type: object
    EntityCreator:
      properties:
        ban_count:
          format: int32
          type: integer
          x-stream-index: "002"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "001.016"
        banned:
          type: boolean
          x-stream-index: "001.015"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.005"
        deactivated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.013"
        deleted_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.012"
        deleted_content_count:
          format: int32
          type: integer
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "001.022"
        language:
          type: string
          x-stream-index: "001.033"
        last_active:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.010"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.011"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "001.021"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "001.025"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettings'
          x-stream-index: "001.024"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.040"
        role:
          type: string
          x-stream-index: "001.004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.034"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.008"
      required:
      - id
      - role
      - custom
      - banned
      - online
      - ban_count
      - deleted_content_count
      type: object
    EntityCreatorResponse:
      description: User response object
      properties:
        ban_count:
          format: int32
          type: integer
          x-stream-index: "002"
        ban_expires:
          description: Date when ban expires
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "001.003"
        banned:
          description: Whether a user is banned or not
          title: Banned
          type: boolean
          x-stream-index: 001.001.011
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: 001.001.016
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.008
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: 001.001.004
        deactivated_at:
          description: Date of deactivation
          format: date-time
          title: Deactivated at
          type: number
          x-stream-index: 001.001.015
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: 001.001.010
        deleted_content_count:
          format: int32
          type: integer
          x-stream-index: "003"
        devices:
          description: List of devices user is using
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "001.006"
        id:
          description: Unique user identifier
          title: ID
          type: string
          x-stream-index: 001.001.001
        image:
          title: Image
          type: string
          x-stream-index: 001.001.003
        invisible:
          type: boolean
          x-stream-index: "001.007"
        language:
          description: Preferred language of a user
          title: Language
          type: string
          x-stream-index: 001.001.005
        last_active:
          description: Date of last activity
          format: date-time
          title: Last active
          type: number
          x-stream-index: 001.001.013
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: 001.001.002
        online:
          description: Whether a user online or not
          title: Online
          type: boolean
          x-stream-index: 001.001.012
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          description: User privacy settings
          title: Privacy settings
          x-stream-index: "001.005"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          description: User push notification settings
          title: Push notifications
          x-stream-index: "001.004"
        revoke_tokens_issued_before:
          description: Revocation date for tokens
          format: date-time
          title: Revoke tokens issued before
          type: number
          x-stream-index: 001.001.014
        role:
          description: Determines the set of user permissions
          title: Role
          type: string
          x-stream-index: 001.001.006
        shadow_banned:
          description: Whether a user is shadow banned
          title: Shadow banned
          type: boolean
          x-stream-index: "001.002"
        teams:
          description: List of teams user is a part of
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: 001.001.007
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: 001.001.009
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - devices
      - invisible
      - ban_count
      - deleted_content_count
      title: UserResponse
      type: object
    ErrorResult:
      properties:
        stacktrace:
          type: string
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
        version:
          type: string
          x-stream-index: "004"
      required:
      - type
      - description
      type: object
    EventNotificationSettings:
      properties:
        apns:
          $ref: '#/components/schemas/APNS'
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      - apns
      type: object
    EventRequest:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      required:
      - type
      type: object
    EventResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        event:
          $ref: '#/components/schemas/WSEvent'
          x-stream-index: "001"
      required:
      - event
      - duration
      title: Response
      type: object
    ExportChannelsRequest:
      nullable: true
      properties:
        channels:
          description: Export options for channels
          items:
            $ref: '#/components/schemas/ChannelExport'
          maximum: 25
          minimum: 1
          title: Channels
          type: array
          x-stream-index: "002.001"
        clear_deleted_message_text:
          description: Set if deleted message text should be cleared
          title: Clear deleted message text
          type: boolean
          x-stream-index: "002.002"
        export_users:
          type: boolean
          x-stream-index: "002.005"
        include_soft_deleted_channels:
          description: Set if you want to include deleted channels
          title: Include soft deleted channels
          type: boolean
          x-stream-index: "002.004"
        include_truncated_messages:
          description: Set if you want to include truncated messages
          title: Include truncated messages
          type: boolean
          x-stream-index: "002.003"
        version:
          description: Export version
          title: Version
          type: string
          x-stream-index: "001"
      required:
      - channels
      type: object
    ExportChannelsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          description: ID of the task to export channels
          title: Task ID
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      type: object
    ExportChannelsResult:
      properties:
        path:
          description: S3 path of result
          title: PathPrefix
          type: string
          x-stream-index: "002"
        s3_bucket_name:
          description: S3 bucket name result
          title: S3 bucket name
          type: string
          x-stream-index: "003"
        url:
          description: URL of result
          title: URL
          type: string
          x-stream-index: "001"
      required:
      - url
      type: object
    ExportUserResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        messages:
          description: List of exported messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Messages
          type: array
          x-stream-index: "002"
        reactions:
          description: List of exported reactions
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Reactions
          type: array
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Exported user object
          title: User
          x-stream-index: "001"
      required:
      - duration
      type: object
    ExportUsersRequest:
      nullable: true
      properties:
        user_ids:
          items:
            type: string
          maximum: 25
          minimum: 1
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      type: object
    ExportUsersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      title: Response
      type: object
    ExternalStorageResponse:
      properties:
        bucket:
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        path:
          type: string
          x-stream-index: "004"
        type:
          enum:
          - s3
          - gcs
          - abs
          type: string
          x-stream-index: "002"
      required:
      - name
      - type
      - bucket
      - path
      type: object
    FeedsModerationTemplateConfig:
      properties:
        config_key:
          type: string
          x-stream-index: "002"
        data_types:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001"
      required:
      - data_types
      - config_key
      type: object
    Field:
      nullable: true
      properties:
        short:
          type: boolean
          x-stream-index: "003"
        title:
          type: string
          x-stream-index: "001"
        value:
          type: string
          x-stream-index: "002"
      required:
      - title
      - value
      - short
      type: object
    FileUploadConfig:
      properties:
        allowed_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "001"
        allowed_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "003"
        blocked_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "002"
        blocked_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        size_limit:
          format: int32
          maximum: 104857600
          minimum: 0
          type: integer
          x-stream-index: "005"
      required:
      - size_limit
      type: object
    FileUploadRequest:
      nullable: true
      properties:
        file:
          description: file field
          title: File
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          description: user for the request **server side only**
          title: User
          x-stream-index: "003"
      type: object
    FileUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        file:
          description: URL to the uploaded asset. Should be used to put to `asset_url`
            attachment field
          title: File
          type: string
          x-stream-index: "001"
        thumb_url:
          description: URL of the file thumbnail for supported file formats. Should
            be put to `thumb_url` attachment field
          title: Thumbnail URL
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    FirebaseConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "001"
        apn_template:
          type: string
          x-stream-index: "005"
        credentials_json:
          type: string
          x-stream-index: "006"
        data_template:
          type: string
          x-stream-index: "004"
        notification_template:
          type: string
          x-stream-index: "003"
        server_key:
          type: string
          x-stream-index: "002"
      type: object
    FirebaseConfigFields:
      properties:
        apn_template:
          type: string
          x-stream-index: "004"
        credentials_json:
          type: string
          x-stream-index: "006"
        data_template:
          type: string
          x-stream-index: "003"
        enabled:
          type: boolean
          x-stream-index: "001"
        notification_template:
          type: string
          x-stream-index: "002"
        server_key:
          type: string
          x-stream-index: "005"
      required:
      - enabled
      - notification_template
      - data_template
      - apn_template
      type: object
    Flag:
      description: Contains information about flagged user or message
      properties:
        approved_at:
          description: Date of the approval
          format: date-time
          title: Approved at
          type: number
          x-stream-index: "015"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "011"
        created_by_automod:
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "022"
        details:
          $ref: '#/components/schemas/FlagDetails'
          x-stream-index: "021"
        reason:
          type: string
          x-stream-index: "020"
        rejected_at:
          description: Date of the rejection
          format: date-time
          title: Rejected at
          type: number
          x-stream-index: "016"
        reviewed_at:
          description: Date of the review
          format: date-time
          title: Reviewed at
          type: number
          x-stream-index: "013"
        reviewed_by:
          type: string
          x-stream-index: "014"
        target_message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "008"
        target_message_id:
          description: ID of flagged message
          title: Target Message ID
          type: string
          x-stream-index: "007"
        target_user:
          $ref: '#/components/schemas/User'
          description: Flagged user
          title: User
          x-stream-index: "010"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "012"
        user:
          $ref: '#/components/schemas/User'
          description: User who flagged a message or a user
          title: User
          x-stream-index: "006"
      required:
      - created_by_automod
      - created_at
      - updated_at
      title: Flag
      type: object
    Flag2:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "017"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "013"
        entity_creator_id:
          type: string
          x-stream-index: "009"
        entity_id:
          type: string
          x-stream-index: "008"
        entity_type:
          type: string
          x-stream-index: "007"
        labels:
          items:
            type: string
          type: array
          x-stream-index: "014"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "010"
        moderation_payload_hash:
          type: string
          x-stream-index: "011"
        reason:
          type: string
          x-stream-index: "012"
        result:
          items:
            additionalProperties: {}
            type: object
          type: array
          x-stream-index: "015"
        review_queue_item_id:
          type: string
          x-stream-index: "016"
        type:
          type: string
          x-stream-index: "004"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "018"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "006"
      required:
      - entity_type
      - entity_id
      - result
      - created_at
      - updated_at
      type: object
    Flag2Response:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "014"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        entity_creator_id:
          type: string
          x-stream-index: "007"
        entity_id:
          type: string
          x-stream-index: "006"
        entity_type:
          type: string
          x-stream-index: "005"
        labels:
          items:
            type: string
          type: array
          x-stream-index: "011"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "008"
        reason:
          type: string
          x-stream-index: "009"
        result:
          items:
            additionalProperties: {}
            type: object
          type: array
          x-stream-index: "012"
        review_queue_item_id:
          type: string
          x-stream-index: "013"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "015"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - user_id
      - entity_type
      - entity_id
      - result
      - created_at
      - updated_at
      type: object
    FlagDetails:
      properties:
        Extra:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "002"
        automod:
          $ref: '#/components/schemas/AutomodDetails'
          x-stream-index: "001"
        original_text:
          type: string
          x-stream-index: "003"
      required:
      - Extra
      - original_text
      type: object
    FlagFeedback:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "005"
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
          x-stream-index: "006"
        message_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - created_at
      - labels
      type: object
    FlagMessageDetails:
      properties:
        pin_changed:
          type: boolean
          x-stream-index: "002"
        should_enrich:
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "004"
        updated_by_id:
          type: string
          x-stream-index: "001"
      type: object
    FlagRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        entity_creator_id:
          type: string
          x-stream-index: "003"
        entity_id:
          type: string
          x-stream-index: "002"
        entity_type:
          type: string
          x-stream-index: "001"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "005"
        reason:
          maxLength: 255
          type: string
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "007.002"
        user_id:
          type: string
          x-stream-index: "007.001"
      required:
      - entity_type
      - entity_id
      type: object
    FlagResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        item_id:
          type: string
          x-stream-index: "001"
      required:
      - item_id
      - duration
      title: Response
      type: object
    FlagUpdatedEvent:
      nullable: true
      properties:
        CreatedBy:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "003"
        Message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        User:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "004.004"
        type:
          default: flag.updated
          type: string
          x-stream-index: "004.002"
      required:
      - type
      - created_at
      title: FlagUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FullUserResponse:
      properties:
        banned:
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "014"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.015"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
        devices:
          items:
            $ref: '#/components/schemas/DeviceResponse'
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.013"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "012"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.014"
        role:
          type: string
          x-stream-index: "001.006"
        shadow_banned:
          type: boolean
          x-stream-index: "013"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      - shadow_banned
      - blocked_user_ids
      type: object
    GeofenceResponse:
      nullable: true
      properties:
        country_codes:
          items:
            type: string
          type: array
          x-stream-index: "004"
        description:
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        type:
          type: string
          x-stream-index: "002"
      required:
      - name
      type: object
    GeofenceSettings:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - names
      type: object
    GeofenceSettingsRequest:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      type: object
    GeofenceSettingsResponse:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - names
      type: object
    GeolocationResult:
      properties:
        accuracy_radius:
          format: int32
          type: integer
          x-stream-index: "004"
        city:
          type: string
          x-stream-index: "003.001"
        continent:
          type: string
          x-stream-index: "003.004"
        continent_code:
          type: string
          x-stream-index: "002.003"
        country:
          type: string
          x-stream-index: "003.003"
        country_iso_code:
          type: string
          x-stream-index: "002.002"
        latitude:
          format: float
          type: number
          x-stream-index: "001.001"
        longitude:
          format: float
          type: number
          x-stream-index: "001.002"
        subdivision:
          type: string
          x-stream-index: "003.002"
        subdivision_iso_code:
          type: string
          x-stream-index: "002.001"
      required:
      - latitude
      - longitude
      - subdivision_iso_code
      - country_iso_code
      - continent_code
      - city
      - subdivision
      - country
      - continent
      - accuracy_radius
      type: object
    GetApplicationResponse:
      description: Basic response information
      nullable: true
      properties:
        app:
          $ref: '#/components/schemas/AppResponseFields'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - app
      - duration
      title: Response
      type: object
    GetBlockListResponse:
      description: Response for get block list
      nullable: true
      properties:
        blocklist:
          $ref: '#/components/schemas/BlockListResponse'
          description: Block list object
          title: BlockListResponse
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: GetBlockListResponse
      type: object
      x-stream-docs-page-id: get_block_list
    GetBlockedUsersResponse:
      nullable: true
      properties:
        blocks:
          description: Array of blocked user object
          items:
            $ref: '#/components/schemas/BlockedUserResponse'
          title: Blocks
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocks
      - duration
      type: object
    GetCallResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "002.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - duration
      title: GetCallResponse
      type: object
    GetCallStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        aggregated:
          $ref: '#/components/schemas/AggregatedStats'
          x-stream-index: "005"
        average_connection_time:
          format: float
          type: number
          x-stream-index: "011"
        call_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "003"
        call_status:
          type: string
          x-stream-index: "002"
        call_timeline:
          $ref: '#/components/schemas/CallTimeline'
          x-stream-index: "015"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        jitter:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "006"
        latency:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "007"
        max_freezes_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "013"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "008"
        max_total_quality_limitation_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "012"
        participant_report:
          items:
            $ref: '#/components/schemas/UserStats'
          type: array
          x-stream-index: "016"
        publishing_participants:
          format: int32
          type: integer
          x-stream-index: "009"
        quality_score:
          format: int32
          type: integer
          x-stream-index: "004"
        sfu_count:
          format: int32
          type: integer
          x-stream-index: "010"
        sfus:
          items:
            $ref: '#/components/schemas/SFULocationResponse'
          type: array
          x-stream-index: "014"
      required:
      - duration
      - call_status
      - call_duration_seconds
      - quality_score
      - max_participants
      - publishing_participants
      - sfu_count
      - max_total_quality_limitation_duration_seconds
      - max_freezes_duration_seconds
      - sfus
      - participant_report
      title: Response
      type: object
    GetCallTypeResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.005"
        duration:
          type: string
          x-stream-index: "002.001"
        external_storage:
          type: string
          x-stream-index: "001.007"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "001.002"
        name:
          type: string
          x-stream-index: "001.001"
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
          x-stream-index: "001.004"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          x-stream-index: "001.003"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.006"
      required:
      - name
      - grants
      - settings
      - notification_settings
      - created_at
      - updated_at
      - duration
      title: GetCallTypeResponse
      type: object
    GetCampaignResponse:
      description: Basic response information
      nullable: true
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    GetChannelTypeResponse:
      description: Basic response information
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 003.002.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 003.002.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 003.002.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 003.002.025
        blocklist:
          type: string
          x-stream-index: 003.002.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 003.002.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 003.002.023
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
          x-stream-index: "003.003"
        connect_events:
          type: boolean
          x-stream-index: 003.002.004
        created_at:
          format: date-time
          type: number
          x-stream-index: 003.001.003
        custom_events:
          type: boolean
          x-stream-index: 003.002.012
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 003.002.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 003.002.018
        mutes:
          type: boolean
          x-stream-index: 003.002.009
        name:
          type: string
          x-stream-index: 003.002.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 003.002.026
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 003.002.027
        permissions:
          items:
            $ref: '#/components/schemas/PolicyRequest'
          type: array
          x-stream-index: "001"
        polls:
          type: boolean
          x-stream-index: 003.002.016
        push_notifications:
          type: boolean
          x-stream-index: 003.002.013
        quotes:
          type: boolean
          x-stream-index: 003.002.008
        reactions:
          type: boolean
          x-stream-index: 003.002.006
        read_events:
          type: boolean
          x-stream-index: 003.002.003
        reminders:
          type: boolean
          x-stream-index: 003.002.014
        replies:
          type: boolean
          x-stream-index: 003.002.007
        search:
          type: boolean
          x-stream-index: 003.002.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 003.002.028
        typing_events:
          type: boolean
          x-stream-index: 003.002.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        uploads:
          type: boolean
          x-stream-index: 003.002.010
        url_enrichment:
          type: boolean
          x-stream-index: 003.002.011
      required:
      - permissions
      - grants
      - created_at
      - updated_at
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - commands
      - duration
      title: Response
      type: object
    GetCommandResponse:
      nullable: true
      properties:
        args:
          type: string
          x-stream-index: "001.006"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.001"
        description:
          type: string
          x-stream-index: "001.005"
        duration:
          type: string
          x-stream-index: "002.001"
        name:
          type: string
          x-stream-index: "001.004"
        set:
          type: string
          x-stream-index: "001.007"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.002"
      required:
      - name
      - description
      - args
      - set
      - duration
      title: GetCommandResponse
      type: object
    GetConfigResponse:
      description: Basic response information
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ConfigResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    GetCustomPermissionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        permission:
          $ref: '#/components/schemas/Permission'
          x-stream-index: "001"
      required:
      - permission
      - duration
      title: Response
      type: object
    GetEdgesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        edges:
          items:
            $ref: '#/components/schemas/EdgeResponse'
          type: array
          x-stream-index: "001"
      required:
      - edges
      - duration
      title: Response
      type: object
    GetExportChannelsStatusResponse:
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.007.001
        error:
          $ref: '#/components/schemas/ErrorResult'
          description: Contains task error in case of failure
          title: Error
          x-stream-index: "003"
        result:
          $ref: '#/components/schemas/ExportChannelsResult'
          description: Contains task result in case of success
          title: ExportChannelsResult
          x-stream-index: "002"
        status:
          description: Task status
          enum:
          - waiting
          - pending
          - running
          - completed
          - failed
          - canceled
          title: Status
          type: string
          x-stream-index: "001.002"
        task_id:
          title: Task ID
          type: string
          x-stream-index: "001.001"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.004"
      required:
      - task_id
      - status
      - created_at
      - updated_at
      - duration
      type: object
    GetImportResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        import_task:
          $ref: '#/components/schemas/ImportTask'
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    GetManyMessagesResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: 001.002.001
        messages:
          description: List of messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Messages
          type: array
          x-stream-index: "001.001"
      required:
      - messages
      - duration
      type: object
    GetMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageWithChannelResponse'
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      title: Response
      type: object
    GetOGResponse:
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "001.015"
        asset_url:
          description: URL of detected video or audio
          title: Image URL
          type: string
          x-stream-index: "001.017"
        author_icon:
          type: string
          x-stream-index: "001.007"
        author_link:
          description: og:site
          title: Author Link
          type: string
          x-stream-index: "001.006"
        author_name:
          description: og:site_name
          title: Author Name
          type: string
          x-stream-index: "001.005"
        color:
          type: string
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.021"
        duration:
          type: string
          x-stream-index: "002.001"
        fallback:
          type: string
          x-stream-index: "001.002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "001.016"
        footer:
          type: string
          x-stream-index: "001.013"
        footer_icon:
          type: string
          x-stream-index: "001.014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "001.022"
        image_url:
          description: URL of detected image
          title: Image URL
          type: string
          x-stream-index: "001.011"
        latitude:
          format: float
          type: number
          x-stream-index: "001.018"
        longitude:
          format: float
          type: number
          x-stream-index: "001.019"
        og_scrape_url:
          description: extracted url from the text
          title: OG Scrape URL
          type: string
          x-stream-index: "001.023"
        original_height:
          format: int32
          type: integer
          x-stream-index: "001.025"
        original_width:
          format: int32
          type: integer
          x-stream-index: "001.024"
        pretext:
          type: string
          x-stream-index: "001.004"
        stopped_sharing:
          type: boolean
          x-stream-index: "001.020"
        text:
          description: og:description
          title: Text
          type: string
          x-stream-index: "001.010"
        thumb_url:
          description: URL of detected thumb image
          title: Image URL
          type: string
          x-stream-index: "001.012"
        title:
          description: og:title
          title: Title
          type: string
          x-stream-index: "001.008"
        title_link:
          description: og:url
          title: Title Link
          type: string
          x-stream-index: "001.009"
        type:
          description: Attachment type, could be empty, image, audio or video
          title: Type
          type: string
          x-stream-index: "001.001"
      required:
      - custom
      - duration
      title: Get OG Attachment
      type: object
      x-stream-docs-page-id: og
    GetOrCreateCallRequest:
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/CallRequest'
          title: ReadOnlyData
          x-stream-index: "003"
        members_limit:
          format: int32
          maximum: 100
          type: integer
          x-stream-index: "007"
        notify:
          description: if provided it sends a notification event to the members for
            this call
          title: Notify
          type: boolean
          x-stream-index: "005"
        ring:
          description: if provided it sends a ring event to the members for this call
          title: Ring
          type: boolean
          x-stream-index: "004"
        video:
          type: boolean
          x-stream-index: "006"
      title: GetOrCreateCallRequest
      type: object
    GetOrCreateCallResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        created:
          type: boolean
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "003.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - created
      - duration
      title: GetOrCreateCallResponse
      type: object
    GetRateLimitsResponse:
      nullable: true
      properties:
        android:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the Android platform
          title: Android
          type: object
          x-stream-index: "002"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
        duration:
          type: string
          x-stream-index: "005.001"
        ios:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the iOS platform
          title: iOS
          type: object
          x-stream-index: "003"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
        server_side:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the server-side platform
          title: Server-side
          type: object
          x-stream-index: "001"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
        web:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the web platform
          title: Web
          type: object
          x-stream-index: "004"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
      required:
      - duration
      title: Get Rate Limits Response
      type: object
      x-stream-docs-page-id: rate_limits
    GetReactionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        reactions:
          description: List of reactions
          items:
            $ref: '#/components/schemas/Reaction'
          title: Reactions
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      type: object
    GetRepliesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001"
      required:
      - messages
      - duration
      title: Response
      type: object
    GetReviewQueueItemResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        history:
          items:
            $ref: '#/components/schemas/ReviewQueueItemResponse'
          type: array
          x-stream-index: "002"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          x-stream-index: "001"
      required:
      - history
      - duration
      title: Response
      type: object
    GetSegmentResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        segment:
          $ref: '#/components/schemas/SegmentResponse'
          description: Segment
          title: SegmentResponse
          x-stream-index: "001"
      required:
      - duration
      type: object
    GetTaskResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.003"
        duration:
          type: string
          x-stream-index: "004.001"
        error:
          $ref: '#/components/schemas/ErrorResult'
          description: Error produced by task
          title: Error
          x-stream-index: "003"
        result:
          additionalProperties: {}
          description: Result produced by task after completion
          title: Result
          type: object
          x-stream-index: "002"
        status:
          description: Current status of task
          title: Status
          type: string
          x-stream-index: "001.002"
        task_id:
          description: ID of task
          title: Task ID
          type: string
          x-stream-index: "001.001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
      required:
      - task_id
      - status
      - created_at
      - updated_at
      - duration
      title: Get Task Response
      type: object
      x-stream-docs-page-id: tasks
    GetThreadResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        thread:
          $ref: '#/components/schemas/ThreadStateResponse'
          description: Enriched thread state
          title: Thread
          x-stream-index: "001"
      required:
      - thread
      - duration
      type: object
    GetUserModerationReportResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
        user_blocks:
          items:
            $ref: '#/components/schemas/UserBlock'
          type: array
          x-stream-index: "003"
        user_mutes:
          items:
            $ref: '#/components/schemas/UserMute'
          type: array
          x-stream-index: "002"
      required:
      - user
      - user_mutes
      - user_blocks
      - duration
      title: Response
      type: object
    GoLiveRequest:
      nullable: true
      properties:
        recording_storage_name:
          type: string
          x-stream-index: "005"
        start_closed_caption:
          type: boolean
          x-stream-index: "008"
        start_hls:
          type: boolean
          x-stream-index: "003"
        start_recording:
          type: boolean
          x-stream-index: "004"
        start_rtmp_broadcasts:
          type: boolean
          x-stream-index: "009"
        start_transcription:
          type: boolean
          x-stream-index: "007"
        transcription_storage_name:
          type: string
          x-stream-index: "006"
      title: GoLiveRequest
      type: object
    GoLiveResponse:
      description: Basic response information
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - call
      - duration
      title: Response
      type: object
    GoogleVisionConfig:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    HLSSettings:
      properties:
        auto_on:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        layout:
          $ref: '#/components/schemas/LayoutSettings'
          x-stream-index: "004"
        quality_tracks:
          items:
            type: string
          type: array
          x-stream-index: "003"
      required:
      - auto_on
      - enabled
      - quality_tracks
      type: object
    HLSSettingsRequest:
      properties:
        auto_on:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        layout:
          $ref: '#/components/schemas/LayoutSettingsRequest'
          title: LayoutSettings
          x-stream-index: "004"
        quality_tracks:
          items:
            type: string
          maximum: 3
          minimum: 1
          type: array
          x-stream-index: "003"
      required:
      - quality_tracks
      title: HLSSettingsRequest
      type: object
    HLSSettingsResponse:
      description: HLSSettings is the payload for HLS settings
      properties:
        auto_on:
          title: Auto On
          type: boolean
          x-stream-index: "001"
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "002"
        layout:
          $ref: '#/components/schemas/LayoutSettingsResponse'
          title: Layout
          x-stream-index: "004"
        quality_tracks:
          items:
            type: string
          title: Quality Tracks
          type: array
          x-stream-index: "003"
      required:
      - auto_on
      - enabled
      - quality_tracks
      - layout
      title: HLSSettingsResponse
      type: object
    HideChannelRequest:
      nullable: true
      properties:
        clear_history:
          description: Whether to clear message history of the channel or not
          title: Clear history
          type: boolean
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      type: object
    HideChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    HuaweiConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        secret:
          type: string
          x-stream-index: "002"
      type: object
    HuaweiConfigFields:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        id:
          type: string
          x-stream-index: "002"
        secret:
          type: string
          x-stream-index: "003"
      required:
      - enabled
      type: object
    ImageData:
      properties:
        frames:
          type: string
          x-stream-index: "005"
        height:
          type: string
          x-stream-index: "003"
        size:
          type: string
          x-stream-index: "004"
        url:
          type: string
          x-stream-index: "001"
        width:
          type: string
          x-stream-index: "002"
      required:
      - url
      - width
      - height
      - size
      - frames
      type: object
    ImageSize:
      properties:
        crop:
          description: Crop mode
          enum:
          - top
          - bottom
          - left
          - right
          - center
          title: Crop
          type: string
          x-stream-index: "001"
        height:
          description: Target image height
          format: int32
          title: Height
          type: integer
          x-stream-index: "003"
        resize:
          description: Resize method
          enum:
          - clip
          - crop
          - scale
          - fill
          title: Resize
          type: string
          x-stream-index: "002"
        width:
          description: Target image width
          format: int32
          title: Width
          type: integer
          x-stream-index: "004"
      title: Image size configuration
      type: object
    ImageUploadRequest:
      nullable: true
      properties:
        file:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: field with JSON-encoded array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          x-stream-index: "001.003"
      type: object
    ImageUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.003.001
        file:
          type: string
          x-stream-index: "001.001"
        thumb_url:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: Array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
      required:
      - duration
      type: object
    Images:
      properties:
        fixed_height:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "002"
        fixed_height_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "004"
        fixed_height_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "003"
        fixed_width:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "005"
        fixed_width_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "007"
        fixed_width_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "006"
        original:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "001"
      required:
      - original
      - fixed_height
      - fixed_height_still
      - fixed_height_downsampled
      - fixed_width
      - fixed_width_still
      - fixed_width_downsampled
      type: object
    ImportTask:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "011"
        history:
          items:
            $ref: '#/components/schemas/ImportTaskHistory'
          type: array
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "003"
        mode:
          type: string
          x-stream-index: "006"
        path:
          type: string
          x-stream-index: "005"
        size:
          format: int64
          type: integer
          x-stream-index: "007"
        state:
          type: string
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "012"
      required:
      - id
      - path
      - mode
      - state
      - history
      - created_at
      - updated_at
      type: object
    ImportTaskHistory:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        next_state:
          type: string
          x-stream-index: "006"
        prev_state:
          type: string
          x-stream-index: "005"
      required:
      - prev_state
      - next_state
      - created_at
      type: object
    Label:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        phrase_list_ids:
          items:
            format: int32
            type: integer
          type: array
          x-stream-index: "002"
      required:
      - name
      type: object
    LabelThresholds:
      properties:
        block:
          description: Threshold for automatic message block
          format: float
          maximum: 1
          minimum: 0
          title: Block
          type: number
          x-stream-index: "002"
        flag:
          description: Threshold for automatic message flag
          format: float
          maximum: 1
          minimum: 0
          title: Flag
          type: number
          x-stream-index: "001"
      type: object
    LayoutSettings:
      properties:
        detect_orientation:
          type: boolean
          x-stream-index: "005"
        external_app_url:
          type: string
          x-stream-index: "003"
        external_css_url:
          type: string
          x-stream-index: "004"
        name:
          enum:
          - spotlight
          - grid
          - single-participant
          - mobile
          - custom
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      required:
      - name
      - external_app_url
      - external_css_url
      type: object
    LayoutSettingsRequest:
      properties:
        detect_orientation:
          type: boolean
          x-stream-index: "005"
        external_app_url:
          type: string
          x-stream-index: "003"
        external_css_url:
          type: string
          x-stream-index: "004"
        name:
          enum:
          - spotlight
          - grid
          - single-participant
          - mobile
          - custom
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      required:
      - name
      type: object
    LayoutSettingsResponse:
      properties:
        detect_orientation:
          type: boolean
          x-stream-index: "005"
        external_app_url:
          type: string
          x-stream-index: "003"
        external_css_url:
          type: string
          x-stream-index: "004"
        name:
          enum:
          - spotlight
          - grid
          - single-participant
          - mobile
          - custom
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      required:
      - name
      - external_app_url
      - external_css_url
      type: object
    LimitInfo:
      properties:
        limit:
          description: The maximum number of calls allowed for the time window
          format: int32
          title: Limit
          type: integer
          x-stream-index: "001"
        remaining:
          description: The number of remaining calls in the current window
          format: int64
          title: Remaining
          type: integer
          x-stream-index: "002"
        reset:
          description: The Unix timestamp of the next window
          format: int64
          title: Reset
          type: integer
          x-stream-index: "003"
      required:
      - limit
      - remaining
      - reset
      title: Rate Limit info
      type: object
      x-stream-docs-page-id: rate_limits
    LimitsSettings:
      properties:
        max_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
      type: object
    LimitsSettingsRequest:
      properties:
        max_duration_seconds:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "002"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
      type: object
    LimitsSettingsResponse:
      properties:
        max_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
      type: object
    ListBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocklists
      - duration
      title: Response
      type: object
    ListCallTypeResponse:
      description: Response for ListCallType
      nullable: true
      properties:
        call_types:
          additionalProperties:
            $ref: '#/components/schemas/CallTypeResponse'
          type: object
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - call_types
      - duration
      title: ListCallTypeResponse
      type: object
    ListChannelTypesResponse:
      nullable: true
      properties:
        channel_types:
          additionalProperties:
            $ref: '#/components/schemas/ChannelTypeConfig'
          description: Object with all channel types
          title: Channel types
          type: object
          x-stream-index: "001"
          x-stream-map:
            description: Channel type config object
            key: channel_type
            title: Channel type
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - channel_types
      - duration
      title: ListChannelTypesResponse
      type: object
    ListCommandsResponse:
      nullable: true
      properties:
        commands:
          description: List of commands
          items:
            $ref: '#/components/schemas/Command'
          title: Commands
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - commands
      - duration
      title: ListCommandsResponse
      type: object
    ListDevicesResponse:
      description: List devices response
      nullable: true
      properties:
        devices:
          description: List of devices
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - devices
      - duration
      title: ListDevicesResponse
      type: object
    ListExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        external_storages:
          additionalProperties:
            $ref: '#/components/schemas/ExternalStorageResponse'
          type: object
          x-stream-index: "002"
      required:
      - duration
      - external_storages
      title: Response
      type: object
    ListImportsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        import_tasks:
          items:
            $ref: '#/components/schemas/ImportTask'
          type: array
          x-stream-index: "001"
      required:
      - import_tasks
      - duration
      title: Response
      type: object
    ListPermissionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          x-stream-index: "001"
      required:
      - permissions
      - duration
      title: Response
      type: object
    ListPushProvidersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        push_providers:
          items:
            $ref: '#/components/schemas/PushProviderResponse'
          type: array
          x-stream-index: "001"
      required:
      - push_providers
      - duration
      title: Response
      type: object
    ListRecordingsResponse:
      description: Response for listing recordings
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
        recordings:
          items:
            $ref: '#/components/schemas/CallRecording'
          title: The list of recordings.
          type: array
          x-stream-index: "002"
      required:
      - duration
      - recordings
      title: ListRecordingsResponse
      type: object
    ListRolesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
          x-stream-index: "001"
      required:
      - roles
      - duration
      title: Response
      type: object
    ListTranscriptionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
        transcriptions:
          description: List of transcriptions for the call
          items:
            $ref: '#/components/schemas/CallTranscription'
          title: Transcriptions
          type: array
          x-stream-index: "002"
      required:
      - duration
      - transcriptions
      title: ListTranscriptionsResponse
      type: object
    Location:
      properties:
        continent_code:
          type: string
          x-stream-index: "003"
        country_iso_code:
          type: string
          x-stream-index: "002"
        subdivision_iso_code:
          type: string
          x-stream-index: "001"
      required:
      - subdivision_iso_code
      - country_iso_code
      - continent_code
      type: object
    MarkChannelsReadRequest:
      nullable: true
      properties:
        read_by_channel:
          additionalProperties:
            type: string
          description: Map of channel ID to last read message ID
          maximum: 30
          title: Read by channel
          type: object
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "002.002"
        user_id:
          type: string
          x-stream-index: "002.001"
      type: object
    MarkReadRequest:
      nullable: true
      properties:
        message_id:
          description: ID of the message that is considered last read by client
          title: Message ID
          type: string
          x-stream-index: "001"
        thread_id:
          description: Optional Thread ID to specifically mark a given thread as read
          title: Thread ID
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    MarkReadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        event:
          $ref: '#/components/schemas/MessageReadEvent'
          description: Mark read event
          title: Event
          x-stream-index: "001"
      required:
      - duration
      type: object
    MarkReviewedRequest:
      properties:
        content_to_mark_as_reviewed_limit:
          format: int32
          maximum: 2500
          type: integer
          x-stream-index: "002"
        disable_marking_content_as_reviewed:
          type: boolean
          x-stream-index: "001"
      type: object
    MarkUnreadRequest:
      nullable: true
      properties:
        message_id:
          description: ID of the message from where the channel is marked unread
          title: Message ID
          type: string
          x-stream-index: "001"
        thread_id:
          description: Mark a thread unread, specify both the thread and message id
          title: Thread ID
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    MediaPubSubHint:
      properties:
        audio_published:
          type: boolean
          x-stream-index: "001"
        audio_subscribed:
          type: boolean
          x-stream-index: "002"
        video_published:
          type: boolean
          x-stream-index: "003"
        video_subscribed:
          type: boolean
          x-stream-index: "004"
      required:
      - audio_published
      - audio_subscribed
      - video_published
      - video_subscribed
      type: object
    MemberAddedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: member.added
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MemberRemovedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        type:
          default: member.removed
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberRemovedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MemberRequest:
      description: MemberRequest is the payload for adding a member to a call.
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "003"
        role:
          title: Role
          type: string
          x-stream-index: "002"
        user_id:
          minLength: 1
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - user_id
      title: MemberRequest
      type: object
    MemberResponse:
      description: MemberResponse is the payload for a member of a call.
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom member response data
          title: Custom
          type: object
          x-stream-index: "004"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "007"
        role:
          title: Role
          type: string
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
        user_id:
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_id
      - custom
      - created_at
      - updated_at
      title: MemberResponse
      type: object
    MemberUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: member.updated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MembersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        members:
          description: List of found members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "001"
      required:
      - members
      - duration
      type: object
    Message:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "011"
        before_message_send_failed:
          type: boolean
          x-stream-index: "045"
        cid:
          type: string
          x-stream-index: "027"
        command:
          type: string
          x-stream-index: "006"
        created_at:
          format: date-time
          type: number
          x-stream-index: "029"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "033"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "032"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "022"
        html:
          type: string
          x-stream-index: "007"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "043"
        id:
          type: string
          x-stream-index: "002"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "039"
        latest_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "012"
        mentioned_users:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "042"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "051"
        mml:
          type: string
          x-stream-index: "005"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "054"
        own_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "013"
        parent_id:
          type: string
          x-stream-index: "018"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "050"
        pinned:
          type: boolean
          x-stream-index: "046"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "047"
        pinned_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "049"
        poll:
          $ref: '#/components/schemas/Poll'
          x-stream-index: "053"
        poll_id:
          type: string
          x-stream-index: "052"
        quoted_message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "024"
        quoted_message_id:
          type: string
          x-stream-index: "023"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "014"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "016"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "015"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "021"
        shadowed:
          type: boolean
          x-stream-index: "035"
        show_in_channel:
          type: boolean
          x-stream-index: "020"
        silent:
          type: boolean
          x-stream-index: "044"
        text:
          type: string
          x-stream-index: "004"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "026"
        type:
          type: string
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "030"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "010"
      required:
      - id
      - text
      - html
      - type
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reaction_groups
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      type: object
    MessageActionRequest:
      nullable: true
      properties:
        form_data:
          additionalProperties:
            type: string
          description: ReadOnlyData to execute command with
          title: Form data
          type: object
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - form_data
      type: object
    MessageChangeSet:
      properties:
        attachments:
          type: boolean
          x-stream-index: "005"
        custom:
          type: boolean
          x-stream-index: "001"
        html:
          type: boolean
          x-stream-index: "004"
        mentioned_user_ids:
          type: boolean
          x-stream-index: "006"
        mml:
          type: boolean
          x-stream-index: "003"
        pin:
          type: boolean
          x-stream-index: "009"
        quoted_message_id:
          type: boolean
          x-stream-index: "007"
        silent:
          type: boolean
          x-stream-index: "008"
        text:
          type: boolean
          x-stream-index: "002"
      required:
      - custom
      - text
      - mml
      - html
      - attachments
      - mentioned_user_ids
      - quoted_message_id
      - silent
      - pin
      type: object
    MessageDeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        hard_delete:
          type: boolean
          x-stream-index: "002.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.deleted
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - hard_delete
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: MessageDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageFlagResponse:
      nullable: true
      properties:
        approved_at:
          format: date-time
          type: number
          x-stream-index: "013"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        created_by_automod:
          type: boolean
          x-stream-index: "001"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "008"
        details:
          $ref: '#/components/schemas/FlagDetails'
          x-stream-index: "006"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "005"
        moderation_feedback:
          $ref: '#/components/schemas/FlagFeedback'
          x-stream-index: "003"
        moderation_result:
          $ref: '#/components/schemas/MessageModerationResult'
          x-stream-index: "002"
        reason:
          type: string
          x-stream-index: "007"
        rejected_at:
          format: date-time
          type: number
          x-stream-index: "014"
        reviewed_at:
          format: date-time
          type: number
          x-stream-index: "011"
        reviewed_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "012"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
      required:
      - created_by_automod
      - created_at
      - updated_at
      type: object
    MessageFlaggedEvent:
      properties:
        cid:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "005.002"
        flag:
          $ref: '#/components/schemas/Flag'
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "002.002"
        type:
          default: message.flagged
          type: string
          x-stream-index: "005.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004"
      required:
      - cid
      - type
      - created_at
      title: MessageFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageHistoryEntryResponse:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "007"
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "006"
        is_deleted:
          type: boolean
          x-stream-index: "004"
        message_id:
          type: string
          x-stream-index: "001"
        message_updated_at:
          format: date-time
          type: number
          x-stream-index: "003"
        message_updated_by_id:
          type: string
          x-stream-index: "002"
        text:
          type: string
          x-stream-index: "005"
      required:
      - message_id
      - message_updated_by_id
      - message_updated_at
      - is_deleted
      - text
      - attachments
      - Custom
      type: object
    MessageModerationResult:
      description: Result of the message moderation
      properties:
        action:
          description: Action taken by automod
          title: Action
          type: string
          x-stream-index: "002"
        ai_moderation_response:
          $ref: '#/components/schemas/ModerationResponse'
          description: Response from AI moderation
          title: ModerationResponse
          x-stream-index: "007"
        blocked_word:
          description: Word that was blocked
          title: Blocked word
          type: string
          x-stream-index: "004"
        blocklist_name:
          description: Name of the blocklist
          title: Blocklist name
          type: string
          x-stream-index: "005"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "010"
        message_id:
          description: ID of the message
          title: Message ID
          type: string
          x-stream-index: "001"
        moderated_by:
          description: User who moderated the message
          title: Moderated by
          type: string
          x-stream-index: "003"
        moderation_thresholds:
          $ref: '#/components/schemas/Thresholds'
          description: Thresholds for AI moderation
          title: Thresholds
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "011"
        user_bad_karma:
          description: Whether user has bad karma
          title: User bad karma
          type: boolean
          x-stream-index: "009"
        user_karma:
          description: Karma of the user
          format: float
          title: User karma
          type: number
          x-stream-index: "008"
      required:
      - message_id
      - action
      - user_karma
      - user_bad_karma
      - created_at
      - updated_at
      title: Message moderation result
      type: object
    MessageNewEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "006.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.new
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "002.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessagePaginationParams:
      type: object
    MessageReadEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003"
        channel_type:
          type: string
          x-stream-index: "004"
        cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        last_read_message_id:
          type: string
          x-stream-index: "009"
        team:
          type: string
          x-stream-index: "006"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "005"
        type:
          default: message.read
          type: string
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      type: object
    MessageRequest:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          maximum: 30
          type: array
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        html:
          type: string
          x-stream-index: "010"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        mentioned_users:
          items:
            type: string
          maximum: 25
          type: array
          x-stream-index: "008"
        mml:
          type: string
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "005"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "015"
        pinned:
          type: boolean
          x-stream-index: "013"
        pinned_at:
          format: date-time
          nullable: true
          type: string
          x-stream-index: "014"
        poll_id:
          type: string
          x-stream-index: "038"
        quoted_message_id:
          type: string
          x-stream-index: "009"
        show_in_channel:
          type: boolean
          x-stream-index: "006"
        silent:
          type: boolean
          x-stream-index: "012"
        text:
          type: string
          x-stream-index: "002"
        type:
          enum:
          - '''''regular'
          - system
          type: string
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "020.002"
        user_id:
          type: string
          x-stream-index: "020.001"
      type: object
    MessageResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "008"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "021"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "022"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "025"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "024"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "017"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "029"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "027"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "009"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "028"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "035"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "038"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "010"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "014"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "034"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "031"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "032"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "033"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "037"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "036"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "019"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "018"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "011"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "013"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "012"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "016"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "026"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "015"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "030"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "020"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "023"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    MessageUnblockedEvent:
      properties:
        cid:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "002.002"
        type:
          default: message.unblocked
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - type
      - created_at
      title: MessageUnblockedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageUndeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.undeleted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageUndeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageUpdate:
      properties:
        change_set:
          $ref: '#/components/schemas/MessageChangeSet'
          x-stream-index: "002"
        old_text:
          type: string
          x-stream-index: "001"
      type: object
    MessageUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.updated
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageWithChannelResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "001.008"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel object
          title: Channel
          x-stream-index: "002"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "001.021"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.022"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.025"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "001.024"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "001.017"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "001.005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "001.029"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001.001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "001.027"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "001.009"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "001.028"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "001.035"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "001.003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "001.038"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "001.010"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "001.014"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.034"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.031"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.032"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.033"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.037"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "001.036"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.019"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.018"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "001.011"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.013"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "001.012"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "001.016"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "001.026"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "001.015"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "001.030"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "001.002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.020"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "001.006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.023"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "001.007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      - channel
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    ModerationActionConfig:
      nullable: true
      properties:
        action:
          type: string
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        description:
          type: string
          x-stream-index: "008"
        entity_type:
          type: string
          x-stream-index: "004"
        icon:
          type: string
          x-stream-index: "007"
        order:
          format: int32
          type: integer
          x-stream-index: "005"
      required:
      - entity_type
      - order
      - action
      - icon
      - description
      - custom
      type: object
    ModerationCustomActionEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002"
        type:
          default: moderation.custom_action
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationCustomActionEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationEvent:
      nullable: true
      properties:
        action:
          $ref: '#/components/schemas/ActionLogResponse'
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        flags:
          items:
            $ref: '#/components/schemas/Flag2Response'
          type: array
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          x-stream-index: "001"
        type:
          default: review_queue_item.new
          type: string
          x-stream-index: "002.002"
      required:
      - type
      - created_at
      title: ModerationEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationFlaggedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          type: string
          x-stream-index: "001"
        object_id:
          type: string
          x-stream-index: "002"
        type:
          default: moderation.flagged
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationMarkReviewedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002"
        type:
          default: moderation.mark_reviewed
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationMarkReviewedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationPayload:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        images:
          items:
            type: string
          maximum: 30
          type: array
          x-stream-index: "002"
        texts:
          items:
            type: string
          type: array
          x-stream-index: "001"
        videos:
          items:
            type: string
          type: array
          x-stream-index: "003"
      type: object
    ModerationResponse:
      properties:
        action:
          type: string
          x-stream-index: "004"
        explicit:
          format: float
          type: number
          x-stream-index: "002"
        spam:
          format: float
          type: number
          x-stream-index: "003"
        toxic:
          format: float
          type: number
          x-stream-index: "001"
      required:
      - toxic
      - explicit
      - spam
      - action
      - automod_response
      type: object
    ModerationUsageStats:
      nullable: true
      properties:
        app_pk:
          format: int32
          type: integer
          x-stream-index: "004"
        id:
          format: int32
          type: integer
          x-stream-index: "003"
        organization_id:
          format: int32
          type: integer
          x-stream-index: "005"
        reference_date:
          format: date-time
          type: number
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        usage_amount:
          format: int32
          type: integer
          x-stream-index: "008"
        usage_type:
          type: string
          x-stream-index: "007"
      required:
      - id
      - app_pk
      - organization_id
      - reference_date
      - usage_type
      - usage_amount
      - updated_at
      type: object
    ModerationV2Response:
      properties:
        action:
          type: string
          x-stream-index: "001"
        blocklist_matched:
          type: string
          x-stream-index: "005"
        image_harms:
          items:
            type: string
          type: array
          x-stream-index: "004"
        original_text:
          type: string
          x-stream-index: "002"
        platform_circumvented:
          type: boolean
          x-stream-index: "007"
        semantic_filter_matched:
          type: string
          x-stream-index: "006"
        text_harms:
          items:
            type: string
          type: array
          x-stream-index: "003"
      required:
      - action
      - original_text
      type: object
    ModeratorStats:
      nullable: true
      properties:
        action_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        items_reviewed:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - id
      - items_reviewed
      - action_counts
      type: object
    ModeratorStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        moderator_stats:
          items:
            $ref: '#/components/schemas/ModeratorStats'
          type: array
          x-stream-index: "001"
      required:
      - moderator_stats
      - duration
      title: Response
      type: object
    MuteChannelRequest:
      nullable: true
      properties:
        channel_cids:
          description: Channel CIDs to mute (if multiple channels)
          items:
            type: string
          maximum: 25
          title: Channel CIDs
          type: array
          x-stream-index: "002"
        expiration:
          description: Duration of mute in milliseconds
          title: Expiration
          type: integer
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    MuteChannelResponse:
      nullable: true
      properties:
        channel_mute:
          $ref: '#/components/schemas/ChannelMute'
          description: Object with channel mute (if one channel was muted)
          title: Channel mute
          x-stream-index: "001"
        channel_mutes:
          description: Object with mutes (if multiple channels were muted)
          items:
            $ref: '#/components/schemas/ChannelMute'
          title: Channel mutes
          type: array
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "004.001"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own user
          x-stream-index: "003"
      required:
      - duration
      type: object
    MuteRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to mute (if multiple users)
          items:
            type: string
          title: Target IDs
          type: array
          x-stream-index: "001"
        timeout:
          description: Duration of mute in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - target_ids
      title: MuteRequest
      type: object
    MuteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "004.001"
        mutes:
          description: Object with mutes (if multiple users were muted)
          items:
            $ref: '#/components/schemas/UserMute'
          title: Mutes
          type: array
          x-stream-index: "001"
        non_existing_users:
          description: A list of users that can't be found. Common cause for this
            is deleted users
          items:
            type: string
          title: Non Existing Users
          type: array
          x-stream-index: "003"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own User
          x-stream-index: "002"
      required:
      - duration
      title: MuteResponse
      type: object
    MuteUsersRequest:
      nullable: true
      properties:
        audio:
          title: Audio
          type: boolean
          x-stream-index: "005"
        mute_all_users:
          type: boolean
          x-stream-index: "003"
        muted_by:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "010"
        muted_by_id:
          type: string
          x-stream-index: "009"
        screenshare:
          title: Screenshare
          type: boolean
          x-stream-index: "007"
        screenshare_audio:
          title: ScreenshareAudio
          type: boolean
          x-stream-index: "008"
        user_ids:
          items:
            type: string
          title: UserIDs
          type: array
          x-stream-index: "004"
        video:
          title: Video
          type: boolean
          x-stream-index: "006"
      title: MuteUsersRequest
      type: object
    MuteUsersResponse:
      description: MuteUsersResponse is the response payload for the mute users endpoint.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: MuteUsersResponse
      type: object
    NetworkMetricsReportResponse:
      properties:
        average_connection_time:
          format: float
          type: number
          x-stream-index: "003"
        average_jitter:
          format: float
          type: number
          x-stream-index: "002"
        average_latency:
          format: float
          type: number
          x-stream-index: "001"
        average_time_to_reconnect:
          format: float
          type: number
          x-stream-index: "004"
      type: object
    NoiseCancellationSettings:
      properties:
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
      required:
      - mode
      type: object
    NotificationMarkUnreadEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        first_unread_message_id:
          type: string
          x-stream-index: "005"
        last_read_at:
          format: date-time
          type: number
          x-stream-index: "006"
        last_read_message_id:
          type: string
          x-stream-index: "012"
        team:
          type: string
          x-stream-index: "002.001"
        thread_id:
          type: string
          x-stream-index: "013"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        type:
          default: notification.mark_unread
          type: string
          x-stream-index: "001.001"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_messages:
          format: int32
          type: integer
          x-stream-index: "007"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - first_unread_message_id
      - last_read_at
      - unread_messages
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      title: NotificationMarkUnreadEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationSettings:
      properties:
        call_live_started:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "002"
        call_missed:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "006"
        call_notification:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "004"
        call_ring:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        session_started:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "003"
      required:
      - enabled
      - call_live_started
      - session_started
      - call_notification
      - call_ring
      - call_missed
      type: object
    NullBool:
      properties:
        HasValue:
          type: boolean
          writeOnly: true
          x-stream-index: "002"
        Value:
          type: boolean
          writeOnly: true
          x-stream-index: "001"
      type: object
    NullTime:
      properties:
        HasValue:
          type: boolean
          writeOnly: true
          x-stream-index: "002"
        Value:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "001"
      type: object
    OnlyUserID:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    OwnCapability:
      description: All possibility of string to use
      enum:
      - block-users
      - change-max-duration
      - create-call
      - create-reaction
      - enable-noise-cancellation
      - end-call
      - join-backstage
      - join-call
      - join-ended-call
      - mute-users
      - pin-for-everyone
      - read-call
      - remove-call-member
      - screenshare
      - send-audio
      - send-video
      - start-broadcast-call
      - start-closed-captions-call
      - start-record-call
      - start-transcription-call
      - stop-broadcast-call
      - stop-closed-captions-call
      - stop-record-call
      - stop-transcription-call
      - update-call
      - update-call-member
      - update-call-permissions
      - update-call-settings
      title: OwnCapability
      type: string
    OwnUser:
      properties:
        banned:
          type: boolean
          x-stream-index: "015"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "043"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "028"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "013"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "012"
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
          x-stream-index: "026"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "022"
        language:
          type: string
          x-stream-index: "033"
        last_active:
          format: date-time
          type: number
          x-stream-index: "010"
        last_engaged_at:
          format: date-time
          type: number
          x-stream-index: "011"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "035"
        mutes:
          items:
            $ref: '#/components/schemas/UserMute'
          type: array
          x-stream-index: "027"
        online:
          type: boolean
          x-stream-index: "021"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "025"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettings'
          x-stream-index: "024"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "034"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "030"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "031"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "029"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "032"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "008"
      required:
      - id
      - role
      - custom
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      - language
      type: object
    OwnUserResponse:
      properties:
        banned:
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "014"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.015"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
        devices:
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.013"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "012"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.014"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      type: object
    PaginationParams:
      properties:
        limit:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "001"
        offset:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    PendingMessageResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "003"
        metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      type: object
    PerSDKUsageReport:
      nullable: true
      properties:
        by_version:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "002"
        total:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - total
      - by_version
      type: object
    Permission:
      properties:
        action:
          description: Action name this permission is for (e.g. SendMessage)
          title: Action
          type: string
          x-stream-index: "004"
        condition:
          additionalProperties: {}
          description: MongoDB style condition which decides whether or not the permission
            is granted
          title: Condition
          type: object
          x-stream-index: "007"
        custom:
          description: Whether this is a custom permission or built-in
          title: Custom
          type: boolean
          x-stream-index: "009"
        description:
          description: Description of the permission
          title: Description
          type: string
          x-stream-index: "003"
        id:
          description: Unique permission ID
          title: ID
          type: string
          x-stream-index: "001"
        level:
          description: Level at which permission could be applied (app or channel)
          enum:
          - app
          - channel
          title: Level
          type: string
          x-stream-index: "010"
        name:
          description: Name of the permission
          title: Name
          type: string
          x-stream-index: "002"
        owner:
          description: Whether this permission applies to resource owner or not
          title: Owner
          type: boolean
          x-stream-index: "005"
        same_team:
          description: Whether this permission applies to teammates (multi-tenancy
            mode only)
          title: Same team
          type: boolean
          x-stream-index: "006"
        tags:
          description: List of tags of the permission
          items:
            type: string
          title: Tags
          type: array
          x-stream-index: "011"
      required:
      - id
      - name
      - description
      - action
      - owner
      - same_team
      - custom
      - level
      - tags
      type: object
    PermissionRequestEvent:
      description: |-
        This event is sent when a user requests access to a feature on a call,
        clients receiving this event should display a permission request to the user
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        permissions:
          description: The list of permissions requested by the user
          items:
            type: string
          title: Permissions
          type: array
          x-stream-index: "004"
        type:
          default: call.permission_request
          description: 'The type of event: "call.permission_request" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who sent the permission request
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      - permissions
      title: PermissionRequestEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PinRequest:
      description: PinRequest is the payload for pinning a message.
      nullable: true
      properties:
        session_id:
          description: the session ID of the user who pinned the message
          title: SessionID
          type: string
          x-stream-index: "003"
        user_id:
          description: the user ID of the user who pinned the message
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user_id
      - session_id
      title: PinRequest
      type: object
    PinResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    Policy:
      properties:
        action:
          type: integer
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        name:
          type: string
          x-stream-index: "004"
        owner:
          type: boolean
          x-stream-index: "008"
        priority:
          format: int32
          type: integer
          x-stream-index: "009"
        resources:
          items:
            type: string
          type: array
          x-stream-index: "005"
        roles:
          items:
            type: string
          type: array
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
      required:
      - name
      - resources
      - roles
      - action
      - owner
      - priority
      - created_at
      - updated_at
      type: object
    PolicyRequest:
      description: Policy request
      properties:
        action:
          enum:
          - Deny
          - Allow
          title: Action
          type: string
          x-stream-index: "001"
        name:
          description: User-friendly policy name
          title: Name
          type: string
          x-stream-index: "002"
        owner:
          description: Whether policy applies to resource owner or not
          title: Owner
          type: boolean
          x-stream-index: "005"
        priority:
          description: Policy priority
          format: int32
          maximum: 999
          minimum: 1
          title: Priority
          type: integer
          x-stream-index: "006"
        resources:
          description: List of resources to apply policy to
          items:
            type: string
          minimum: 1
          title: Resources
          type: array
          x-stream-index: "003"
        roles:
          description: List of roles to apply policy to
          items:
            type: string
          title: Roles
          type: array
          x-stream-index: "004"
      required:
      - action
      - name
      - resources
      - roles
      - owner
      - priority
      title: PolicyRequest
      type: object
    Poll:
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "023"
        allow_answers:
          type: boolean
          x-stream-index: "010"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "009"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "015"
        created_at:
          format: date-time
          type: number
          x-stream-index: "021"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "020"
        created_by_id:
          type: string
          x-stream-index: "019"
        description:
          type: string
          x-stream-index: "005"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "007"
        id:
          type: string
          x-stream-index: "003"
        is_closed:
          type: boolean
          x-stream-index: "011"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "017"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVote'
            type: array
          type: object
          x-stream-index: "016"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "008"
        name:
          type: string
          x-stream-index: "004"
        options:
          items:
            $ref: '#/components/schemas/PollOption'
          type: array
          x-stream-index: "013"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "018"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "022"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "012"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "014"
        voting_visibility:
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      - description
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - vote_counts_by_option
      - answers_count
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - Custom
      type: object
    PollOption:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollOptionInput:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
      type: object
    PollOptionRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      type: object
    PollOptionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll_option:
          $ref: '#/components/schemas/PollOptionResponseData'
          description: Poll option
          title: PollOptionResponseData
          x-stream-index: "001"
      required:
      - poll_option
      - duration
      type: object
    PollOptionResponseData:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: Poll
          title: PollResponseData
          x-stream-index: "001"
      required:
      - poll
      - duration
      type: object
    PollResponseData:
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "021"
        allow_answers:
          type: boolean
          x-stream-index: "008"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "007"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "012"
        created_at:
          format: date-time
          type: number
          x-stream-index: "019"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "018"
        created_by_id:
          type: string
          x-stream-index: "017"
        description:
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        is_closed:
          type: boolean
          x-stream-index: "009"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "015"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVoteResponseData'
            type: array
          type: object
          x-stream-index: "014"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionResponseData'
          type: array
          x-stream-index: "011"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "016"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "020"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "010"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "013"
        voting_visibility:
          type: string
          x-stream-index: "004"
      required:
      - id
      - name
      - description
      - voting_visibility
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - answers_count
      - vote_counts_by_option
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - Custom
      type: object
    PollVote:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "004"
        is_answer:
          type: boolean
          x-stream-index: "006"
        option_id:
          type: string
          x-stream-index: "005"
        poll_id:
          type: string
          x-stream-index: "003"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "009"
        user_id:
          type: string
          x-stream-index: "008"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVoteResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: Poll vote
          title: PollVoteResponseData
          x-stream-index: "001"
      required:
      - duration
      type: object
    PollVoteResponseData:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "005"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        id:
          type: string
          x-stream-index: "002"
        is_answer:
          type: boolean
          x-stream-index: "004"
        option_id:
          type: string
          x-stream-index: "003"
        poll_id:
          type: string
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "006"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVotesResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        votes:
          description: Poll votes
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          title: PollVoteResponseList
          type: array
          x-stream-index: "001"
      required:
      - votes
      - duration
      type: object
    PrivacySettings:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceipts'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicators'
          x-stream-index: "001"
      type: object
    PrivacySettingsResponse:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceiptsResponse'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicatorsResponse'
          x-stream-index: "001"
      type: object
    PublishedTrackInfo:
      properties:
        codec_mime_type:
          type: string
          x-stream-index: "003"
        duration_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
        track_type:
          type: string
          x-stream-index: "001"
      type: object
    PublisherAggregateStats:
      properties:
        by_track_type:
          additionalProperties:
            $ref: '#/components/schemas/Count'
          type: object
          x-stream-index: "002"
        total:
          $ref: '#/components/schemas/Count'
          x-stream-index: "001"
      type: object
    PushConfig:
      properties:
        offline_only:
          type: boolean
          x-stream-index: "002"
        version:
          enum:
          - v1
          - v2
          type: string
          x-stream-index: "001"
      required:
      - version
      type: object
    PushNotificationFields:
      properties:
        apn:
          $ref: '#/components/schemas/APNConfigFields'
          x-stream-index: "002"
        firebase:
          $ref: '#/components/schemas/FirebaseConfigFields'
          x-stream-index: "003"
        huawei:
          $ref: '#/components/schemas/HuaweiConfigFields'
          x-stream-index: "004"
        offline_only:
          type: boolean
          x-stream-index: "001.002"
        providers:
          items:
            $ref: '#/components/schemas/PushProvider'
          type: array
          x-stream-index: "006"
        version:
          type: string
          x-stream-index: "001.001"
        xiaomi:
          $ref: '#/components/schemas/XiaomiConfigFields'
          x-stream-index: "005"
      required:
      - version
      - offline_only
      - apn
      - firebase
      - huawei
      - xiaomi
      type: object
    PushNotificationSettings:
      properties:
        disabled:
          type: boolean
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "002"
      type: object
    PushNotificationSettingsInput:
      properties:
        disabled:
          $ref: '#/components/schemas/NullBool'
          x-stream-index: "001"
        disabled_until:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "002"
      type: object
    PushNotificationSettingsResponse:
      properties:
        disabled:
          type: boolean
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "002"
      type: object
    PushProvider:
      nullable: true
      properties:
        apn_auth_key:
          type: string
          x-stream-index: "012"
        apn_auth_type:
          type: string
          x-stream-index: "017"
        apn_development:
          type: boolean
          x-stream-index: "018"
        apn_host:
          type: string
          x-stream-index: "019"
        apn_key_id:
          type: string
          x-stream-index: "013"
        apn_notification_template:
          type: string
          x-stream-index: "020"
        apn_p12_cert:
          type: string
          x-stream-index: "014"
        apn_team_id:
          type: string
          x-stream-index: "015"
        apn_topic:
          type: string
          x-stream-index: "016"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        description:
          maxLength: 128
          type: string
          x-stream-index: "007"
        disabled_at:
          format: date-time
          type: number
          x-stream-index: "010"
        disabled_reason:
          maxLength: 255
          type: string
          x-stream-index: "011"
        firebase_apn_template:
          type: string
          x-stream-index: "025"
        firebase_credentials:
          type: string
          x-stream-index: "022"
        firebase_data_template:
          type: string
          x-stream-index: "023"
        firebase_host:
          type: string
          x-stream-index: "026"
        firebase_notification_template:
          type: string
          x-stream-index: "024"
        firebase_server_key:
          type: string
          x-stream-index: "021"
        huawei_app_id:
          type: string
          x-stream-index: "027"
        huawei_app_secret:
          type: string
          x-stream-index: "028"
        name:
          maxLength: 36
          minLength: 1
          type: string
          x-stream-index: "005"
        type:
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        xiaomi_app_secret:
          type: string
          x-stream-index: "030"
        xiaomi_package_name:
          type: string
          x-stream-index: "029"
      required:
      - name
      - type
      - created_at
      - updated_at
      type: object
    PushProviderResponse:
      properties:
        apn_auth_key:
          type: string
          x-stream-index: "008"
        apn_auth_type:
          type: string
          x-stream-index: "013"
        apn_development:
          type: boolean
          x-stream-index: "014"
        apn_host:
          type: string
          x-stream-index: "015"
        apn_key_id:
          type: string
          x-stream-index: "009"
        apn_p12_cert:
          type: string
          x-stream-index: "010"
        apn_sandbox_certificate:
          type: boolean
          x-stream-index: "016"
        apn_supports_remote_notifications:
          type: boolean
          x-stream-index: "018"
        apn_supports_voip_notifications:
          type: boolean
          x-stream-index: "017"
        apn_team_id:
          type: string
          x-stream-index: "011"
        apn_topic:
          type: string
          x-stream-index: "012"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        description:
          type: string
          x-stream-index: "003"
        disabled_at:
          format: date-time
          type: number
          x-stream-index: "006"
        disabled_reason:
          type: string
          x-stream-index: "007"
        firebase_apn_template:
          type: string
          x-stream-index: "023"
        firebase_credentials:
          type: string
          x-stream-index: "020"
        firebase_data_template:
          type: string
          x-stream-index: "021"
        firebase_host:
          type: string
          x-stream-index: "024"
        firebase_notification_template:
          type: string
          x-stream-index: "022"
        firebase_server_key:
          type: string
          x-stream-index: "019"
        huawei_app_id:
          type: string
          x-stream-index: "025"
        huawei_app_secret:
          type: string
          x-stream-index: "026"
        name:
          type: string
          x-stream-index: "001"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
        xiaomi_app_secret:
          type: string
          x-stream-index: "028"
        xiaomi_package_name:
          type: string
          x-stream-index: "027"
      required:
      - name
      - type
      - created_at
      - updated_at
      type: object
    QualityScoreReport:
      properties:
        histogram:
          items:
            $ref: '#/components/schemas/ReportByHistogramBucket'
          type: array
          x-stream-index: "001"
      required:
      - histogram
      type: object
    QualityScoreReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateQualityScoreReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    QueryAggregateCallStatsRequest:
      nullable: true
      properties:
        from:
          type: string
          x-stream-index: "002"
        report_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        to:
          type: string
          x-stream-index: "003"
      type: object
    QueryAggregateCallStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        call_duration_report:
          $ref: '#/components/schemas/CallDurationReportResponse'
          x-stream-index: "002"
        call_participant_count_report:
          $ref: '#/components/schemas/CallParticipantCountReportResponse'
          x-stream-index: "004"
        calls_per_day_report:
          $ref: '#/components/schemas/CallsPerDayReportResponse'
          x-stream-index: "003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        network_metrics_report:
          $ref: '#/components/schemas/NetworkMetricsReportResponse'
          x-stream-index: "008"
        quality_score_report:
          $ref: '#/components/schemas/QualityScoreReportResponse'
          x-stream-index: "005"
        sdk_usage_report:
          $ref: '#/components/schemas/SDKUsageReportResponse'
          x-stream-index: "006"
        user_feedback_report:
          $ref: '#/components/schemas/UserFeedbackReportResponse'
          x-stream-index: "007"
      required:
      - duration
      title: Response
      type: object
    QueryBannedUsersPayload:
      properties:
        exclude_expired_bans:
          description: Whether to exclude expired bans or not
          title: Exclude expired bans
          type: boolean
          x-stream-index: "006"
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          description: Number of records to return
          format: int32
          maximum: 300
          title: Limit
          type: integer
          x-stream-index: "004"
        offset:
          description: Number of records to offset
          format: int32
          maximum: 10000
          title: Offset
          type: integer
          x-stream-index: "005"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          title: Sort
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "007.002"
        user_id:
          type: string
          x-stream-index: "007.001"
      required:
      - filter_conditions
      type: object
    QueryBannedUsersResponse:
      nullable: true
      properties:
        bans:
          description: List of found bans
          items:
            $ref: '#/components/schemas/BanResponse'
          title: BanResponse
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - bans
      - duration
      type: object
    QueryCallMembersRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        id:
          maxLength: 64
          type: string
          x-stream-index: "001.002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          x-stream-index: "003"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - id
      type: object
    QueryCallMembersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - members
      - duration
      title: Response
      type: object
    QueryCallStatsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          type: array
          x-stream-index: "002"
      type: object
    QueryCallStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        next:
          type: string
          x-stream-index: "003.001"
        prev:
          type: string
          x-stream-index: "003.002"
        reports:
          items:
            $ref: '#/components/schemas/CallStatsReportSummaryResponse'
          type: array
          x-stream-index: "001"
      required:
      - reports
      - duration
      title: Response
      type: object
    QueryCallsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          title: Filters
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        next:
          type: string
          x-stream-index: "006.002"
        prev:
          type: string
          x-stream-index: "006.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          title: Sort
          type: array
          x-stream-index: "004"
      title: QueryCallsRequest
      type: object
    QueryCallsResponse:
      nullable: true
      properties:
        calls:
          items:
            $ref: '#/components/schemas/CallStateResponseFields'
          title: Calls
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - calls
      - duration
      title: QueryCallsResponse
      type: object
    QueryCampaignsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          type: array
          x-stream-index: "002"
      type: object
    QueryCampaignsResponse:
      description: Basic response information
      nullable: true
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/CampaignResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - campaigns
      - duration
      title: Response
      type: object
    QueryChannelsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          description: Number of channels to limit
          format: int32
          title: Limit
          type: integer
          x-stream-index: "008"
        member_limit:
          description: Number of members to limit
          format: int32
          maximum: 100
          minimum: 0
          title: Member limit
          type: integer
          x-stream-index: "007"
        message_limit:
          description: Number of messages to limit
          format: int32
          minimum: 0
          title: Message limit
          type: integer
          x-stream-index: "006"
        offset:
          description: Channel pagination offset
          format: int32
          title: Offset
          type: integer
          x-stream-index: "009"
        sort:
          description: List of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
        state:
          description: Whether to update channel state or not
          title: State
          type: boolean
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "010.002"
        user_id:
          type: string
          x-stream-index: "010.001"
      title: Query Channels Request
      type: object
      x-stream-docs-page-id: query_channels
    QueryChannelsResponse:
      nullable: true
      properties:
        channels:
          description: List of channels
          items:
            $ref: '#/components/schemas/ChannelStateResponseFields'
          title: Channels
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - channels
      - duration
      title: Channels list
      type: object
    QueryFeedModerationTemplate:
      properties:
        config:
          $ref: '#/components/schemas/FeedsModerationTemplateConfig'
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "004"
      required:
      - name
      - created_at
      - updated_at
      type: object
    QueryFeedModerationTemplatesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        templates:
          items:
            $ref: '#/components/schemas/QueryFeedModerationTemplate'
          type: array
          x-stream-index: "001"
      required:
      - templates
      - duration
      title: Response
      type: object
    QueryMembersPayload:
      description: Client request
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
          x-stream-index: "006.003"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "003"
        offset:
          format: int32
          maximum: 10000
          type: integer
          x-stream-index: "006.004"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          x-stream-index: "005"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "007.002"
        user_id:
          type: string
          x-stream-index: "007.001"
      required:
      - type
      - filter_conditions
      title: ClientRequest
      type: object
    QueryMessageFlagsPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
          x-stream-index: "003.003"
        offset:
          format: int32
          maximum: 10000
          type: integer
          x-stream-index: "003.004"
        show_deleted_messages:
          description: Whether to include deleted messages in the results
          title: ShowDeletedMessages
          type: boolean
          x-stream-index: "002"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003.005"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryMessageFlagsResponse:
      description: Query message flags response
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        flags:
          description: The flags that match the query
          items:
            $ref: '#/components/schemas/MessageFlagResponse'
          title: MessageFlagResponseList
          type: array
          x-stream-index: "001"
      required:
      - flags
      - duration
      title: QueryMessageFlagsResponse
      type: object
    QueryMessageHistoryRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          maximum: 3
          minimum: 1
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      required:
      - filter
      type: object
    QueryMessageHistoryResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message_history:
          description: Message history entries
          items:
            $ref: '#/components/schemas/MessageHistoryEntryResponse'
          title: MessageHistoryEntryResponseList
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - message_history
      - duration
      type: object
    QueryModerationConfigsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryModerationConfigsResponse:
      description: Basic response information
      nullable: true
      properties:
        configs:
          items:
            $ref: '#/components/schemas/ConfigResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - configs
      - duration
      title: Response
      type: object
    QueryModerationLogsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryModerationLogsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        logs:
          items:
            $ref: '#/components/schemas/ActionLogResponse'
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - logs
      - duration
      title: Response
      type: object
    QueryPollVotesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "004"
      type: object
    QueryPollsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "003"
      type: object
    QueryPollsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        polls:
          description: Polls data returned by the query
          items:
            $ref: '#/components/schemas/PollResponseData'
          title: PollsResponseData
          type: array
          x-stream-index: "001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - polls
      - duration
      type: object
    QueryReactionsRequest:
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        next:
          type: string
          x-stream-index: "006.002"
        prev:
          type: string
          x-stream-index: "006.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          type: array
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryReactionsResponse:
      description: Basic response information
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        next:
          type: string
          x-stream-index: "003.001"
        prev:
          type: string
          x-stream-index: "003.002"
        reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryReviewQueueRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "007.001"
        lock_count:
          format: int32
          maximum: 25
          minimum: 1
          type: integer
          x-stream-index: "005"
        lock_duration:
          type: integer
          x-stream-index: "004"
        lock_items:
          type: boolean
          x-stream-index: "003"
        next:
          type: string
          x-stream-index: "007.002"
        prev:
          type: string
          x-stream-index: "007.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          type: array
          x-stream-index: "002"
        stats_only:
          type: boolean
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      type: object
    QueryReviewQueueResponse:
      description: Basic response information
      nullable: true
      properties:
        action_config:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ModerationActionConfig'
            type: array
          type: object
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "005.001"
        items:
          items:
            $ref: '#/components/schemas/ReviewQueueItemResponse'
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "004.001"
        prev:
          type: string
          x-stream-index: "004.002"
        stats:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "003"
      required:
      - items
      - action_config
      - stats
      - duration
      title: Response
      type: object
    QuerySegmentTargetsRequest:
      nullable: true
      properties:
        Filter:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "005"
        Sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          type: array
          writeOnly: true
          x-stream-index: "006"
        limit:
          description: Limit
          format: int32
          maximum: 10000
          minimum: 0
          title: int
          type: integer
          x-stream-index: "002"
        next:
          description: Next
          title: string
          type: string
          x-stream-index: "003"
        prev:
          description: Prev
          title: string
          type: string
          x-stream-index: "004"
      type: object
    QuerySegmentTargetsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        targets:
          description: Targets
          items:
            $ref: '#/components/schemas/SegmentTargetResponse'
          title: SegmentTargetResponseList
          type: array
          x-stream-index: "001"
      required:
      - targets
      - duration
      type: object
    QuerySegmentsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
      required:
      - filter
      type: object
    QuerySegmentsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        segments:
          description: Segments
          items:
            $ref: '#/components/schemas/SegmentResponse'
          title: SegmentResponses
          type: array
          x-stream-index: "001"
      required:
      - segments
      - duration
      type: object
    QueryThreadsRequest:
      nullable: true
      properties:
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        member_limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005"
        next:
          type: string
          x-stream-index: "006.002"
        participant_limit:
          description: Limit the number of participants returned per each thread
          format: int32
          maximum: 100
          minimum: 0
          title: Participant limit
          type: integer
          x-stream-index: "004"
        prev:
          type: string
          x-stream-index: "006.003"
        reply_limit:
          description: Limit the number of replies returned per each thread
          format: int32
          maximum: 10
          minimum: 0
          title: Reply limit
          type: integer
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      type: object
    QueryThreadsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        threads:
          description: List of enriched thread states
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          title: Threads
          type: array
          x-stream-index: "001"
      required:
      - threads
      - duration
      type: object
    QueryUsageStatsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryUsageStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        items:
          items:
            $ref: '#/components/schemas/ModerationUsageStats'
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - items
      - duration
      title: Response
      type: object
    QueryUsersPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        include_deactivated_users:
          type: boolean
          x-stream-index: "004"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.003"
        offset:
          format: int32
          maximum: 1000
          type: integer
          x-stream-index: "005.004"
        presence:
          type: boolean
          x-stream-index: "003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "006.002"
        user_id:
          type: string
          x-stream-index: "006.001"
      required:
      - filter_conditions
      type: object
    QueryUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        users:
          description: Array of users as result of filters applied.
          items:
            $ref: '#/components/schemas/FullUserResponse'
          title: Users
          type: array
          x-stream-index: "001"
      required:
      - users
      - duration
      type: object
    QueueStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        avg_time_to_action:
          type: integer
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        time_to_action_buckets:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "002"
      required:
      - avg_time_to_action
      - time_to_action_buckets
      - duration
      title: Response
      type: object
    RTMPBroadcastRequest:
      description: RTMPBroadcastRequest is the payload for starting an RTMP broadcast.
      properties:
        layout:
          $ref: '#/components/schemas/LayoutSettingsRequest'
          description: If provided, will override the call's RTMP settings layout
          title: Layout
          x-stream-index: "005"
        name:
          description: Name identifier for RTMP broadcast, must be unique in call
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
        quality:
          description: If provided, will override the call's RTMP settings quality
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          - portrait-360x640
          - portrait-480x854
          - portrait-720x1280
          - portrait-1080x1920
          - portrait-1440x2560
          title: Quality
          type: string
          x-stream-index: "004"
        stream_key:
          description: If provided, will be appended at the end of stream_url
          title: Stream Key
          type: string
          x-stream-index: "003"
        stream_url:
          description: URL for the RTMP server to send the call to
          maxLength: 255
          title: Stream URL
          type: string
          x-stream-index: "002"
      required:
      - name
      - stream_url
      title: RTMPBroadcastRequest
      type: object
    RTMPIngress:
      description: RTMP input settings
      properties:
        address:
          title: Address
          type: string
          x-stream-index: "001"
      required:
      - address
      title: RTMPIngress
      type: object
    RTMPLocation:
      properties:
        name:
          type: string
          x-stream-index: "001"
        stream_key:
          type: string
          x-stream-index: "003"
        stream_url:
          type: string
          x-stream-index: "002"
      required:
      - name
      - stream_url
      - stream_key
      type: object
    RTMPSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettings'
          x-stream-index: "003"
        location:
          $ref: '#/components/schemas/RTMPLocation'
          x-stream-index: "004"
        quality_name:
          type: string
          x-stream-index: "002"
      required:
      - enabled
      type: object
    RTMPSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettingsRequest'
          description: Layout for the composed RTMP stream
          title: LayoutSettings
          x-stream-index: "003"
        quality:
          description: Resolution to set for the RTMP stream
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          - portrait-360x640
          - portrait-480x854
          - portrait-720x1280
          - portrait-1080x1920
          - portrait-1440x2560
          title: Quality
          type: string
          x-stream-index: "002"
      title: RTMPSettingsRequest
      type: object
    RTMPSettingsResponse:
      description: RTMPSettingsResponse is the payload for RTMP settings
      properties:
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettingsResponse'
          title: Layout
          x-stream-index: "003"
        quality:
          title: Quality
          type: string
          x-stream-index: "002"
      required:
      - enabled
      - quality
      - layout
      title: RTMPSettingsResponse
      type: object
    Reaction:
      nullable: true
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        message_id:
          type: string
          x-stream-index: "003"
        score:
          format: int32
          type: integer
          x-stream-index: "007"
        type:
          maxLength: 30
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionDeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: reaction.deleted
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactionGroupResponse:
      description: ReactionGroupResponse contains all information about a reaction
        of the same type.
      nullable: true
      properties:
        count:
          description: Count is the number of reactions of this type.
          format: int32
          title: Count
          type: integer
          x-stream-index: "001"
        first_reaction_at:
          description: FirstReactionAt is the time of the first reaction of this type.
            This is the same also if all reaction of this type are deleted, because
            if someone will react again with the same type, will be preserved the
            sorting.
          format: date-time
          title: FirstReactionAt
          type: number
          x-stream-index: "003"
        last_reaction_at:
          description: LastReactionAt is the time of the last reaction of this type.
          format: date-time
          title: LastReactionAt
          type: number
          x-stream-index: "004"
        sum_scores:
          description: 'SumScores is the sum of all scores of reactions of this type.
            Medium allows you to clap articles more than once and shows the sum of
            all claps from all users. For example, you can send `clap` x5 using `score:
            5`.'
          format: int32
          title: SumScores
          type: integer
          x-stream-index: "002"
      required:
      - count
      - sum_scores
      - first_reaction_at
      - last_reaction_at
      title: ReactionGroupResponse
      type: object
    ReactionNewEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: reaction.new
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactionRemovalResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
      required:
      - duration
      title: Response
      type: object
    ReactionRequest:
      description: Represents user reaction to a message
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        score:
          description: Reaction score. If not specified reaction has score of 1
          format: int32
          title: Score
          type: integer
          x-stream-index: "002"
        type:
          description: The type of reaction (e.g. 'like', 'laugh', 'wow')
          maxLength: 30
          title: Type
          type: string
          x-stream-index: "001"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "006.002"
        user_id:
          type: string
          x-stream-index: "006.001"
      required:
      - type
      title: Reaction
      type: object
      x-stream-docs-page-id: send_reaction
    ReactionResponse:
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        message_id:
          description: Message ID
          title: Message ID
          type: string
          x-stream-index: "001"
        score:
          description: Score of the reaction
          format: int32
          title: Score
          type: integer
          x-stream-index: "005"
        type:
          description: Type of reaction
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User
          title: UserResponse
          x-stream-index: "003"
        user_id:
          description: User ID
          title: User ID
          type: string
          x-stream-index: "002"
      required:
      - message_id
      - user_id
      - user
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: reaction.updated
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - message
      - reaction
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactivateUserRequest:
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who's reactivating the user
          title: Created by ID
          type: string
          x-stream-index: "004"
        name:
          description: Set this field to put new name for the user
          title: Name
          type: string
          x-stream-index: "003"
        restore_messages:
          description: Restore previously deleted messages
          title: Restore messages
          type: boolean
          x-stream-index: "002"
      type: object
    ReactivateUserResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.002.001
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Deactivated user object
          title: User
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    ReactivateUsersRequest:
      description: Reactivate users in batches
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who's reactivating the users
          title: Created by ID
          type: string
          x-stream-index: "003"
        restore_channels:
          type: boolean
          x-stream-index: "004"
        restore_messages:
          description: Restore previously deleted messages
          title: Restore messages
          type: boolean
          x-stream-index: "002"
        user_ids:
          description: User IDs to reactivate
          items:
            type: string
          maximum: 100
          minimum: 1
          title: User IDs
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      title: ReactivateUsersRequest
      type: object
    ReactivateUsersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.002.001
        task_id:
          type: string
          x-stream-index: "001.001"
      required:
      - task_id
      - duration
      title: Response
      type: object
    ReadReceipts:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ReadReceiptsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    ReadStateResponse:
      properties:
        last_read:
          format: date-time
          type: number
          x-stream-index: "002"
        last_read_message_id:
          type: string
          x-stream-index: "004"
        unread_messages:
          format: int32
          type: integer
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - user
      - last_read
      - unread_messages
      type: object
    RecordSettings:
      properties:
        audio_only:
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettings'
          x-stream-index: "004"
        mode:
          type: string
          x-stream-index: "002"
        quality:
          type: string
          x-stream-index: "003"
      required:
      - mode
      type: object
    RecordSettingsRequest:
      properties:
        audio_only:
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettingsRequest'
          title: LayoutSettings
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          title: Mode
          type: string
          x-stream-index: "002"
        quality:
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          - portrait-360x640
          - portrait-480x854
          - portrait-720x1280
          - portrait-1080x1920
          - portrait-1440x2560
          type: string
          x-stream-index: "003"
      required:
      - mode
      title: RecordSettingsRequest
      type: object
    RecordSettingsResponse:
      description: RecordSettings is the payload for recording settings
      properties:
        audio_only:
          title: Audio Only
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettingsResponse'
          title: Layout
          x-stream-index: "004"
        mode:
          title: Mode
          type: string
          x-stream-index: "002"
        quality:
          title: Quality
          type: string
          x-stream-index: "003"
      required:
      - audio_only
      - mode
      - quality
      - layout
      title: RecordSettingsResponse
      type: object
    ReportByHistogramBucket:
      properties:
        category:
          type: string
          x-stream-index: "001"
        count:
          format: int32
          type: integer
          x-stream-index: "005"
        lower_bound:
          $ref: '#/components/schemas/Bound'
          x-stream-index: "002"
        mean:
          format: float
          type: number
          x-stream-index: "006"
        sum:
          format: float
          type: number
          x-stream-index: "004"
        upper_bound:
          $ref: '#/components/schemas/Bound'
          x-stream-index: "003"
      required:
      - category
      - sum
      - count
      - mean
      type: object
    Response:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    RestoreActionRequest:
      type: object
    RestoreUsersRequest:
      nullable: true
      properties:
        user_ids:
          items:
            type: string
          maximum: 100
          minimum: 1
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      type: object
    ReviewQueueItem:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ActionLog'
          type: array
          x-stream-index: "029"
        assigned_to:
          $ref: '#/components/schemas/User'
          x-stream-index: "026"
        bans:
          items:
            $ref: '#/components/schemas/Ban'
          type: array
          x-stream-index: "027"
        bounce_count:
          format: int32
          type: integer
          x-stream-index: "023"
        completed_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "017"
        content_changed:
          type: boolean
          x-stream-index: "030"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        entity_creator:
          $ref: '#/components/schemas/EntityCreator'
          x-stream-index: "025"
        entity_id:
          type: string
          x-stream-index: "007"
        entity_type:
          type: string
          x-stream-index: "006"
        feeds_v2_activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "031"
        feeds_v2_reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "032"
        flags:
          items:
            $ref: '#/components/schemas/Flag2'
          type: array
          x-stream-index: "028"
        has_image:
          type: boolean
          x-stream-index: "011"
        has_text:
          type: boolean
          x-stream-index: "013"
        has_video:
          type: boolean
          x-stream-index: "012"
        id:
          type: string
          x-stream-index: "003"
        languages:
          items:
            type: string
          type: array
          x-stream-index: "018"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "024"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "009"
        moderation_payload_hash:
          type: string
          x-stream-index: "010"
        recommended_action:
          type: string
          x-stream-index: "016"
        reviewed_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "020"
        reviewed_by:
          type: string
          x-stream-index: "021"
        severity:
          format: int32
          type: integer
          x-stream-index: "019"
        status:
          type: string
          x-stream-index: "015"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "014"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
      required:
      - id
      - created_at
      - updated_at
      - entity_type
      - entity_id
      - moderation_payload_hash
      - has_image
      - has_video
      - has_text
      - teams
      - status
      - recommended_action
      - completed_at
      - languages
      - severity
      - reviewed_at
      - reviewed_by
      - bounce_count
      - bans
      - flags
      - actions
      - content_changed
      type: object
    ReviewQueueItemResponse:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ActionLogResponse'
          type: array
          x-stream-index: "020"
        assigned_to:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "017"
        bans:
          items:
            $ref: '#/components/schemas/Ban'
          type: array
          x-stream-index: "018"
        completed_at:
          format: date-time
          type: number
          x-stream-index: "009"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002"
        entity_creator:
          $ref: '#/components/schemas/EntityCreatorResponse'
          x-stream-index: "015"
        entity_creator_id:
          type: string
          x-stream-index: "016"
        entity_id:
          type: string
          x-stream-index: "005"
        entity_type:
          type: string
          x-stream-index: "004"
        feeds_v2_activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "021"
        feeds_v2_reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "022"
        flags:
          items:
            $ref: '#/components/schemas/Flag2Response'
          type: array
          x-stream-index: "019"
        id:
          type: string
          x-stream-index: "001"
        languages:
          items:
            type: string
          type: array
          x-stream-index: "012"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "014"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "006"
        recommended_action:
          type: string
          x-stream-index: "008"
        reviewed_at:
          format: date-time
          type: number
          x-stream-index: "010"
        reviewed_by:
          type: string
          x-stream-index: "011"
        severity:
          format: int32
          type: integer
          x-stream-index: "013"
        status:
          type: string
          x-stream-index: "007"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "003"
      required:
      - id
      - created_at
      - updated_at
      - entity_type
      - entity_id
      - status
      - recommended_action
      - reviewed_by
      - languages
      - severity
      - bans
      - flags
      - actions
      type: object
    RingSettings:
      properties:
        auto_cancel_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      - missed_call_timeout_ms
      type: object
    RingSettingsRequest:
      properties:
        auto_cancel_timeout_ms:
          format: int32
          maximum: 180000
          minimum: 5000
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          format: int32
          maximum: 180000
          minimum: 5000
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          format: int32
          maximum: 180000
          minimum: 5000
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      type: object
    RingSettingsResponse:
      properties:
        auto_cancel_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      - missed_call_timeout_ms
      type: object
    Role:
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        custom:
          description: Whether this is a custom role or built-in
          title: Custom
          type: boolean
          x-stream-index: "002"
        name:
          description: Unique role name
          title: Name
          type: string
          x-stream-index: "001"
        scopes:
          description: List of scopes where this role is currently present. `.app`
            means that role is present in app-level grants
          items:
            type: string
          title: Scopes
          type: array
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "005"
      required:
      - name
      - custom
      - scopes
      - created_at
      - updated_at
      type: object
    S3Request:
      description: Config for creating Amazon S3 storage.
      properties:
        s3_api_key:
          description: 'The AWS API key. To use Amazon S3 as your storage provider,
            you have two authentication options: IAM role or API key. If you do not
            specify the `s3_api_key` parameter, Stream will use IAM role authentication.
            In that case make sure to have the correct IAM role configured for your
            application.'
          title: S3ApiKey
          type: string
          x-stream-index: "002"
        s3_region:
          description: The AWS region where the bucket is hosted
          title: S3Region
          type: string
          x-stream-index: "001"
        s3_secret:
          description: The AWS API Secret
          title: S3Secret
          type: string
          x-stream-index: "003"
      required:
      - s3_region
      title: S3Request
      type: object
    SDKUsageReport:
      properties:
        per_sdk_usage:
          additionalProperties:
            $ref: '#/components/schemas/PerSDKUsageReport'
          type: object
          x-stream-index: "001"
      required:
      - per_sdk_usage
      type: object
    SDKUsageReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateSDKUsageReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    SFULocationResponse:
      properties:
        coordinates:
          $ref: '#/components/schemas/Coordinates'
          x-stream-index: "004"
        datacenter:
          type: string
          x-stream-index: "002"
        id:
          type: string
          x-stream-index: "001"
        location:
          $ref: '#/components/schemas/Location'
          x-stream-index: "003"
      required:
      - id
      - datacenter
      - location
      - coordinates
      type: object
    ScreensharingSettings:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      type: object
    ScreensharingSettingsRequest:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      type: object
    ScreensharingSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      type: object
    SearchPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          description: Channel filter conditions
          maximum: 100
          minimum: 1
          title: Channel filter
          type: object
          x-stream-docs-page-id: query_channels
          x-stream-index: "002"
        limit:
          description: Number of messages to return
          format: int32
          title: Limit
          type: integer
          x-stream-index: "004"
        message_filter_conditions:
          additionalProperties: {}
          description: Message filter conditions
          title: Message filter
          type: object
          x-stream-index: "003"
        next:
          description: Pagination parameter. Cannot be used with non-zero offset.
          title: Next
          type: string
          x-stream-index: "007"
        offset:
          description: Pagination offset. Cannot be used with sort or next.
          format: int32
          title: Offset
          type: integer
          x-stream-index: "005"
        query:
          description: Search phrase
          title: Query
          type: string
          x-stream-index: "001"
        sort:
          description: Sort parameters. Cannot be used with non-zero offset
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "006"
      required:
      - filter_conditions
      type: object
    SearchResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "005.001"
        next:
          description: Value to pass to the next search query in order to paginate
          title: Next
          type: string
          x-stream-index: "003"
        previous:
          description: Value that points to the previous page. Pass as the next value
            in a search query to paginate backwards
          title: Previous
          type: string
          x-stream-index: "004"
        results:
          description: Search results
          items:
            $ref: '#/components/schemas/SearchResult'
          title: Results
          type: array
          x-stream-index: "001"
        results_warning:
          $ref: '#/components/schemas/SearchWarning'
          description: Warning about the search results
          title: Results Warning
          x-stream-index: "002"
      required:
      - results
      - duration
      type: object
    SearchResult:
      properties:
        message:
          $ref: '#/components/schemas/SearchResultMessage'
          description: Found message
          title: Message
          x-stream-index: "001"
      type: object
    SearchResultMessage:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "001.008"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel object
          title: Channel
          x-stream-index: "002"
        cid:
          type: string
          x-stream-index: "001.021"
        command:
          type: string
          x-stream-index: "001.004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.022"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.025"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.024"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "001.017"
        html:
          type: string
          x-stream-index: "001.005"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.029"
        id:
          type: string
          x-stream-index: "001.001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "001.027"
        latest_reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001.009"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.028"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "001.035"
        mml:
          type: string
          x-stream-index: "001.003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "001.038"
        own_reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001.010"
        parent_id:
          type: string
          x-stream-index: "001.014"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "001.034"
        pinned:
          type: boolean
          x-stream-index: "001.031"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "001.032"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.033"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.037"
        poll_id:
          type: string
          x-stream-index: "001.036"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001.019"
        quoted_message_id:
          type: string
          x-stream-index: "001.018"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.011"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.013"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.012"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "001.016"
        shadowed:
          type: boolean
          x-stream-index: "001.026"
        show_in_channel:
          type: boolean
          x-stream-index: "001.015"
        silent:
          type: boolean
          x-stream-index: "001.030"
        text:
          type: string
          x-stream-index: "001.002"
        thread_participants:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.020"
        type:
          type: string
          x-stream-index: "001.006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.023"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      type: object
    SearchWarning:
      properties:
        channel_search_cids:
          description: Channel CIDs for the searched channels
          items:
            type: string
          title: Channel Search CIDs
          type: array
          x-stream-index: "004"
        channel_search_count:
          description: Number of channels searched
          format: int32
          title: Channel Search Count
          type: integer
          x-stream-index: "003"
        warning_code:
          description: Code corresponding to the warning
          format: int32
          title: Warning Code
          type: integer
          x-stream-index: "002"
        warning_description:
          description: Description of the warning
          title: Warning Description
          type: string
          x-stream-index: "001"
      required:
      - warning_description
      - warning_code
      type: object
    Segment:
      nullable: true
      properties:
        all_sender_channels:
          type: boolean
          x-stream-index: "007"
        all_users:
          type: boolean
          x-stream-index: "006"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "012"
        description:
          type: string
          x-stream-index: "004"
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        name:
          type: string
          x-stream-index: "003"
        size:
          format: int32
          type: integer
          x-stream-index: "009"
        task_id:
          type: string
          x-stream-index: "008"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
      required:
      - id
      - type
      - name
      - all_users
      - all_sender_channels
      - size
      - created_at
      - updated_at
      type: object
    SegmentResponse:
      properties:
        all_sender_channels:
          type: boolean
          x-stream-index: "007"
        all_users:
          type: boolean
          x-stream-index: "006"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        description:
          type: string
          x-stream-index: "004"
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        name:
          type: string
          x-stream-index: "003"
        size:
          format: int32
          type: integer
          x-stream-index: "008"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
      required:
      - id
      - type
      - name
      - description
      - filter
      - all_users
      - all_sender_channels
      - size
      - created_at
      - updated_at
      - deleted_at
      type: object
    SegmentTargetResponse:
      nullable: true
      properties:
        app_pk:
          format: int32
          type: integer
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        segment_id:
          type: string
          x-stream-index: "002"
        target_id:
          type: string
          x-stream-index: "003"
      required:
      - app_pk
      - segment_id
      - target_id
      - created_at
      type: object
    SendCallEventRequest:
      description: Send a call event to the other user
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          title: Custom
          type: object
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      title: SendCallEventRequest
      type: object
    SendCallEventResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: SendCallEventResponse
      type: object
    SendEventRequest:
      nullable: true
      properties:
        event:
          $ref: '#/components/schemas/EventRequest'
          x-stream-index: "001"
      required:
      - event
      type: object
    SendMessageRequest:
      nullable: true
      properties:
        force_moderation:
          type: boolean
          x-stream-index: "007"
        keep_channel_hidden:
          type: boolean
          x-stream-index: "008"
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "001"
        pending:
          type: boolean
          x-stream-index: "006"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "005"
        skip_enrich_url:
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "002"
      required:
      - message
      type: object
    SendMessageResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Message response
          title: Message
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          description: Pending message metadata
          title: Pending message metadata
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      type: object
    SendReactionRequest:
      nullable: true
      properties:
        enforce_unique:
          description: Whether to replace all existing user reactions
          title: Enforce unique
          type: boolean
          x-stream-index: "003"
        reaction:
          $ref: '#/components/schemas/ReactionRequest'
          x-stream-index: "002"
        skip_push:
          description: Skips any mobile push notifications
          title: Skip push
          type: boolean
          x-stream-index: "004"
      required:
      - reaction
      type: object
    SendReactionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          x-stream-index: "002"
      required:
      - message
      - reaction
      - duration
      title: Response
      type: object
    SendUserCustomEventRequest:
      nullable: true
      properties:
        event:
          $ref: '#/components/schemas/UserCustomEventRequest'
          x-stream-index: "001"
      required:
      - event
      type: object
    ShowChannelRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "002.002"
        user_id:
          type: string
          x-stream-index: "002.001"
      type: object
    ShowChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    SortParamRequest:
      nullable: true
      properties:
        direction:
          description: Direction of sorting, 1 for Ascending, -1 for Descending, default
            is 1
          format: int32
          title: Direction
          type: integer
          x-stream-index: "002"
        field:
          description: Name of field to sort by
          title: Field
          type: string
          x-stream-index: "001"
      type: object
    StartCampaignRequest:
      nullable: true
      properties:
        scheduled_for:
          format: date-time
          type: number
          x-stream-index: "002"
        stop_at:
          format: date-time
          type: number
          x-stream-index: "003"
      type: object
    StartCampaignResponse:
      description: Basic response information
      nullable: true
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    StartClosedCaptionsRequest:
      nullable: true
      properties:
        enable_transcription:
          description: Enable transcriptions along with closed captions
          title: Enable Transcription
          type: boolean
          x-stream-index: "002"
        external_storage:
          description: Which external storage to use for transcriptions (only applicable
            if enable_transcription is true)
          title: External Storage
          type: string
          x-stream-index: "003"
        language:
          description: The spoken language in the call, if not provided the language
            defined in the transcription settings will be used
          title: Language
          type: string
          x-stream-index: "004"
      type: object
    StartClosedCaptionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    StartHLSBroadcastingRequest:
      description: StartHLSBroadcastingRequest is the payload for starting an HLS
        broadcasting.
      nullable: true
      title: StartHLSBroadcastingRequest
      type: object
    StartHLSBroadcastingResponse:
      description: StartHLSBroadcastingResponse is the payload for starting an HLS
        broadcasting.
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
        playlist_url:
          description: the URL of the HLS playlist
          title: PlaylistURL
          type: string
          x-stream-index: "002"
      required:
      - duration
      - playlist_url
      title: StartHLSBroadcastingResponse
      type: object
    StartRTMPBroadcastsRequest:
      description: StartRTMPBroadcastsRequest is the payload for starting RTMP broadcasts.
      nullable: true
      properties:
        broadcasts:
          description: List of broadcasts to start
          items:
            $ref: '#/components/schemas/RTMPBroadcastRequest'
          maximum: 1
          minimum: 1
          title: Broadcasts
          type: array
          x-stream-index: "002"
      required:
      - broadcasts
      title: StartRTMPBroadcastsRequest
      type: object
    StartRTMPBroadcastsResponse:
      description: StartRTMPBroadcastsResponse is the payload for starting an RTMP
        broadcast.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartRTMPBroadcastsResponse
      type: object
    StartRecordingRequest:
      nullable: true
      properties:
        recording_external_storage:
          type: string
          x-stream-index: "002"
      title: StartRecordingRequest
      type: object
    StartRecordingResponse:
      description: StartRecordingResponse is the response payload for the start recording
        endpoint.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartRecordingResponse
      type: object
    StartTranscriptionRequest:
      nullable: true
      properties:
        enable_closed_captions:
          description: Enable closed captions along with transcriptions
          title: Enable Closed Captions
          type: boolean
          x-stream-index: "003"
        language:
          description: The spoken language in the call, if not provided the language
            defined in the transcription settings will be used
          title: Language
          type: string
          x-stream-index: "004"
        transcription_external_storage:
          description: Store transcriptions in this external storage
          title: External Storage
          type: string
          x-stream-index: "002"
      type: object
    StartTranscriptionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartTranscriptionResponse
      type: object
    StopAllRTMPBroadcastsRequest:
      nullable: true
      title: StopAllRTMPBroadcastsRequest
      type: object
    StopAllRTMPBroadcastsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StopAllRTMPBroadcastsResponse
      type: object
    StopCampaignRequest:
      nullable: true
      type: object
    StopClosedCaptionsRequest:
      nullable: true
      properties:
        stop_transcription:
          type: boolean
          x-stream-index: "003"
      type: object
    StopClosedCaptionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopHLSBroadcastingRequest:
      nullable: true
      type: object
    StopHLSBroadcastingResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopLiveRequest:
      nullable: true
      properties:
        continue_closed_caption:
          type: boolean
          x-stream-index: "006"
        continue_hls:
          type: boolean
          x-stream-index: "003"
        continue_recording:
          type: boolean
          x-stream-index: "004"
        continue_rtmp_broadcasts:
          type: boolean
          x-stream-index: "007"
        continue_transcription:
          type: boolean
          x-stream-index: "005"
      title: StopLiveRequest
      type: object
    StopLiveResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: The call that was stopped
          title: Call
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - call
      - duration
      title: StopLiveResponse
      type: object
    StopRTMPBroadcastsRequest:
      description: Request for stopping RTMP broadcasts
      nullable: true
      title: StopRTMPBroadcastsRequest
      type: object
    StopRTMPBroadcastsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopRecordingRequest:
      nullable: true
      type: object
    StopRecordingResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopTranscriptionRequest:
      nullable: true
      properties:
        stop_closed_captions:
          type: boolean
          x-stream-index: "003"
      type: object
    StopTranscriptionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    SubmitActionRequest:
      nullable: true
      properties:
        action_type:
          enum:
          - mark_reviewed
          - delete_message
          - delete_activity
          - delete_reaction
          - ban
          - custom
          - unban
          - restore
          - delete_user
          - unblock
          type: string
          x-stream-index: "002"
        ban:
          $ref: '#/components/schemas/BanActionRequest'
          x-stream-index: "008"
        custom:
          $ref: '#/components/schemas/CustomActionRequest'
          x-stream-index: "009"
        delete_activity:
          $ref: '#/components/schemas/DeleteActivityRequest'
          x-stream-index: "004"
        delete_message:
          $ref: '#/components/schemas/DeleteMessageRequest'
          x-stream-index: "003"
        delete_reaction:
          $ref: '#/components/schemas/DeleteReactionRequest'
          x-stream-index: "005"
        delete_user:
          $ref: '#/components/schemas/DeleteUserRequest'
          x-stream-index: "006"
        item_id:
          type: string
          x-stream-index: "001"
        mark_reviewed:
          $ref: '#/components/schemas/MarkReviewedRequest'
          x-stream-index: "007"
        unban:
          $ref: '#/components/schemas/UnbanActionRequest'
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "013.002"
        user_id:
          type: string
          x-stream-index: "013.001"
      required:
      - item_id
      - action_type
      type: object
    SubmitActionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    Subsession:
      nullable: true
      properties:
        ended_at:
          format: int32
          type: integer
          x-stream-index: "002"
        joined_at:
          format: int32
          type: integer
          x-stream-index: "001"
        pub_sub_hint:
          $ref: '#/components/schemas/MediaPubSubHint'
          x-stream-index: "004"
        sfu_id:
          type: string
          x-stream-index: "003"
      required:
      - joined_at
      - ended_at
      - sfu_id
      type: object
    TURNAggregatedStats:
      properties:
        tcp:
          $ref: '#/components/schemas/Count'
          x-stream-index: "002"
        total:
          $ref: '#/components/schemas/Count'
          x-stream-index: "001"
      type: object
    TargetResolution:
      properties:
        bitrate:
          format: int32
          maximum: 6000000
          type: integer
          x-stream-index: "003"
        height:
          format: int32
          maximum: 3840
          minimum: 240
          type: integer
          x-stream-index: "002"
        width:
          format: int32
          maximum: 3840
          minimum: 240
          type: integer
          x-stream-index: "001"
      required:
      - width
      - height
      - bitrate
      type: object
    ThreadParticipant:
      description: Represents a user that is participating in a thread.
      nullable: true
      properties:
        app_pk:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "001"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        last_read_at:
          format: date-time
          type: number
          x-stream-index: "009"
        last_thread_message_at:
          format: date-time
          type: number
          x-stream-index: "003"
        left_thread_at:
          description: Left Thread At is the time when the user left the thread
          format: date-time
          title: Left Thread At
          type: number
          x-stream-index: "008"
        thread_id:
          description: Thead ID is unique string identifier of the thread
          title: ID
          type: string
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User is the user object
          title: User
          x-stream-index: "006"
        user_id:
          description: User ID is unique string identifier of the user
          title: User ID
          type: string
          x-stream-index: "005"
      required:
      - app_pk
      - channel_cid
      - created_at
      - last_read_at
      - custom
      title: ThreadParticipant
      type: object
    ThreadResponse:
      properties:
        active_participant_count:
          description: Active Participant Count
          format: int32
          title: Active Participant Count
          type: integer
          x-stream-index: "009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel
          title: ChannelResponse
          x-stream-index: "002"
        channel_cid:
          description: Channel CID
          title: Channel CID
          type: string
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Created By User
          title: User
          x-stream-index: "006"
        created_by_user_id:
          description: Created By User ID
          title: Created By User ID
          type: string
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "016"
        deleted_at:
          description: Deleted At
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "014"
        last_message_at:
          description: Last Message At
          format: date-time
          title: Last Message At
          type: number
          x-stream-index: "011"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Parent Message
          title: Message
          x-stream-index: "004"
        parent_message_id:
          description: Parent Message ID
          title: Parent Message ID
          type: string
          x-stream-index: "003"
        participant_count:
          description: Participant Count
          format: int32
          title: Participant Count
          type: integer
          x-stream-index: "008"
        reply_count:
          description: Reply Count
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "007"
        thread_participants:
          description: Thread Participants
          items:
            $ref: '#/components/schemas/ThreadParticipant'
          title: ThreadParticipants
          type: array
          x-stream-index: "010"
        title:
          description: Title
          title: Title
          type: string
          x-stream-index: "015"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "013"
      required:
      - channel_cid
      - parent_message_id
      - created_by_user_id
      - created_at
      - updated_at
      - title
      - custom
      type: object
    ThreadStateResponse:
      nullable: true
      properties:
        active_participant_count:
          description: Active Participant Count
          format: int32
          title: Active Participant Count
          type: integer
          x-stream-index: "001.009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel
          title: ChannelResponse
          x-stream-index: "001.002"
        channel_cid:
          description: Channel CID
          title: Channel CID
          type: string
          x-stream-index: "001.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.012"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Created By User
          title: User
          x-stream-index: "001.006"
        created_by_user_id:
          description: Created By User ID
          title: Created By User ID
          type: string
          x-stream-index: "001.005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.016"
        deleted_at:
          description: Deleted At
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "001.014"
        last_message_at:
          description: Last Message At
          format: date-time
          title: Last Message At
          type: number
          x-stream-index: "001.011"
        latest_replies:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "002"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Parent Message
          title: Message
          x-stream-index: "001.004"
        parent_message_id:
          description: Parent Message ID
          title: Parent Message ID
          type: string
          x-stream-index: "001.003"
        participant_count:
          description: Participant Count
          format: int32
          title: Participant Count
          type: integer
          x-stream-index: "001.008"
        read:
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          type: array
          x-stream-index: "003"
        reply_count:
          description: Reply Count
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "001.007"
        thread_participants:
          description: Thread Participants
          items:
            $ref: '#/components/schemas/ThreadParticipant'
          title: ThreadParticipants
          type: array
          x-stream-index: "001.010"
        title:
          description: Title
          title: Title
          type: string
          x-stream-index: "001.015"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.013"
      required:
      - channel_cid
      - parent_message_id
      - created_by_user_id
      - created_at
      - updated_at
      - title
      - custom
      - latest_replies
      type: object
    ThreadUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "003.001"
        type:
          default: thread.updated
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ThreadUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    Thresholds:
      description: Sets thresholds for AI moderation
      properties:
        explicit:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for explicit messages
          title: LabelThresholds
          x-stream-index: "001"
        spam:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for spam
          title: LabelThresholds
          x-stream-index: "002"
        toxic:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for toxic messages
          title: LabelThresholds
          x-stream-index: "003"
      title: Auto moderation thresholds
      type: object
    ThumbnailResponse:
      properties:
        image_url:
          type: string
          x-stream-index: "001"
      required:
      - image_url
      type: object
    ThumbnailsSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ThumbnailsSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    ThumbnailsSettingsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    Time:
      type: object
    TimeStats:
      properties:
        average_seconds:
          format: float
          type: number
          x-stream-index: "001"
        max_seconds:
          format: float
          type: number
          x-stream-index: "002"
      required:
      - average_seconds
      - max_seconds
      type: object
    TranscriptionSettings:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          title: Mode
          type: string
          x-stream-index: "002"
        language:
          description: The language used in this call as a two letter code
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          title: Language
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          title: Mode
          type: string
          x-stream-index: "001"
      required:
      - mode
      - closed_caption_mode
      - languages
      - language
      type: object
    TranscriptionSettingsRequest:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "002"
        language:
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
      required:
      - mode
      type: object
    TranscriptionSettingsResponse:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "002"
        language:
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
      required:
      - mode
      - closed_caption_mode
      - languages
      - language
      type: object
    TranslateMessageRequest:
      nullable: true
      properties:
        language:
          description: Language to translate message to
          enum:
          - af
          - sq
          - am
          - ar
          - az
          - bn
          - bs
          - bg
          - zh
          - zh-TW
          - hr
          - cs
          - da
          - fa-AF
          - nl
          - en
          - et
          - fi
          - fr
          - fr-CA
          - ka
          - de
          - el
          - ha
          - he
          - hi
          - hu
          - id
          - it
          - ja
          - ko
          - lv
          - ms
          - "no"
          - fa
          - ps
          - pl
          - pt
          - ro
          - ru
          - sr
          - sk
          - sl
          - so
          - es
          - es-MX
          - sw
          - sv
          - tl
          - ta
          - th
          - tr
          - uk
          - ur
          - vi
          - lt
          title: Language
          type: string
          x-stream-index: "002"
      required:
      - language
      type: object
    TruncateChannelRequest:
      nullable: true
      properties:
        hard_delete:
          description: Permanently delete channel data (messages, reactions, etc.)
          title: Hard delete
          type: boolean
          x-stream-index: "002"
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "004"
        skip_push:
          description: When `message` is set disables all push notifications for it
          title: Skip push
          type: boolean
          x-stream-index: "005"
        truncated_at:
          description: Truncate channel data up to `truncated_at`. The system message
            (if provided) creation time is always greater than `truncated_at`
          format: date-time
          title: Truncated at
          type: number
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "007.002"
        user_id:
          type: string
          x-stream-index: "007.001"
      type: object
    TruncateChannelResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Truncated channel object
          title: Channel
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Truncated message object
          title: Message
          x-stream-index: "003"
      required:
      - duration
      type: object
    TypingIndicators:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    TypingIndicatorsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    UnbanActionRequest:
      type: object
    UnbanRequest:
      nullable: true
      properties:
        unbanned_by:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005"
        unbanned_by_id:
          type: string
          x-stream-index: "004"
      type: object
    UnbanResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    UnblockActionRequest:
      type: object
    UnblockUserRequest:
      description: UnblockUserRequest is the payload for unblocking a user.
      nullable: true
      properties:
        user_id:
          description: the user to unblock
          title: UserID
          type: string
          x-stream-index: "003"
      required:
      - user_id
      title: UnblockUserRequest
      type: object
    UnblockUserResponse:
      description: UnblockUserResponse is the payload for unblocking a user.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: UnblockUserResponse
      type: object
    UnblockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - blocked_user_id
      type: object
    UnblockUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    UnblockedUserEvent:
      description: |-
        This event is sent when a user is unblocked on a call,
        this can be useful to notify the user that they can now join the call again
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.unblocked_user
          description: 'The type of event: "call.unblocked_user" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that was unblocked
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      title: UnblockedUserEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UnmuteChannelRequest:
      nullable: true
      properties:
        channel_cids:
          description: Channel CIDs to mute (if multiple channels)
          items:
            type: string
          maximum: 25
          title: Channel CIDs
          type: array
          x-stream-index: "001.002"
        expiration:
          description: Duration of mute in milliseconds
          title: Expiration
          type: integer
          x-stream-index: "001.003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "002.002"
        user_id:
          type: string
          x-stream-index: "002.001"
      type: object
    UnmuteRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to unmute
          items:
            type: string
          title: Target IDs
          type: array
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "002.002"
        user_id:
          type: string
          x-stream-index: "002.001"
      required:
      - target_ids
      title: UnmuteRequest
      type: object
    UnmuteResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        non_existing_users:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    UnpinRequest:
      description: UnpinRequest is the payload for unpinning a message.
      nullable: true
      properties:
        session_id:
          description: the session ID of the user who pinned the message
          title: SessionID
          type: string
          x-stream-index: "003"
        user_id:
          description: the user ID of the user who pinned the message
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user_id
      - session_id
      title: UnpinRequest
      type: object
    UnpinResponse:
      description: UnpinResponse is the payload for unpinning a message.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: UnpinResponse
      type: object
    UnreadCountsBatchRequest:
      nullable: true
      properties:
        user_ids:
          items:
            type: string
          maximum: 100
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      type: object
    UnreadCountsBatchResponse:
      description: Basic response information
      nullable: true
      properties:
        counts_by_user:
          additionalProperties:
            $ref: '#/components/schemas/UnreadCountsResponse'
          type: object
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - counts_by_user
      - duration
      title: Response
      type: object
    UnreadCountsChannel:
      properties:
        channel_id:
          type: string
          x-stream-index: "001"
        last_read:
          format: date-time
          type: number
          x-stream-index: "003"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - channel_id
      - unread_count
      - last_read
      type: object
    UnreadCountsChannelType:
      properties:
        channel_count:
          format: int32
          type: integer
          x-stream-index: "002"
        channel_type:
          type: string
          x-stream-index: "001"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - channel_type
      - channel_count
      - unread_count
      type: object
    UnreadCountsResponse:
      nullable: true
      properties:
        channel_type:
          items:
            $ref: '#/components/schemas/UnreadCountsChannelType'
          type: array
          x-stream-index: "004"
        channels:
          items:
            $ref: '#/components/schemas/UnreadCountsChannel'
          type: array
          x-stream-index: "003"
        threads:
          items:
            $ref: '#/components/schemas/UnreadCountsThread'
          type: array
          x-stream-index: "005"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "001"
        total_unread_threads_count:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - total_unread_count
      - total_unread_threads_count
      - channels
      - channel_type
      - threads
      type: object
    UnreadCountsThread:
      properties:
        last_read:
          format: date-time
          type: number
          x-stream-index: "002"
        last_read_message_id:
          type: string
          x-stream-index: "003"
        parent_message_id:
          type: string
          x-stream-index: "004"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - unread_count
      - last_read
      - last_read_message_id
      - parent_message_id
      type: object
    UpdateAppRequest:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "001.017"
        apn_config:
          $ref: '#/components/schemas/APNConfig'
          x-stream-index: "001.003"
        async_moderation_config:
          $ref: '#/components/schemas/AsyncModerationConfiguration'
          x-stream-index: "001.039"
        async_url_enrich_enabled:
          type: boolean
          x-stream-index: "001.019"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "001.018"
        before_message_send_hook_url:
          type: string
          x-stream-index: "001.020"
        cdn_expiration_seconds:
          format: int32
          maximum: 1209600
          minimum: 14400
          type: integer
          x-stream-index: "001.038"
        channel_hide_members_only:
          type: boolean
          x-stream-index: "001.033"
        custom_action_handler_url:
          type: string
          x-stream-index: "001.021"
        datadog_info:
          $ref: '#/components/schemas/DataDogInfo'
          x-stream-index: "001.040"
        disable_auth_checks:
          type: boolean
          x-stream-index: "001.001"
        disable_permissions_checks:
          type: boolean
          x-stream-index: "001.002"
        enforce_unique_usernames:
          enum:
          - "no"
          - app
          - team
          type: string
          x-stream-index: "001.022"
        feeds_moderation_enabled:
          type: boolean
          x-stream-index: "001.042"
        feeds_v2_region:
          type: string
          x-stream-index: "001.041"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "001.030"
        firebase_config:
          $ref: '#/components/schemas/FirebaseConfig'
          x-stream-index: "001.004"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "001.034"
        huawei_config:
          $ref: '#/components/schemas/HuaweiConfig'
          x-stream-index: "001.005"
        image_moderation_block_labels:
          items:
            type: string
          type: array
          x-stream-index: "001.015"
        image_moderation_enabled:
          type: boolean
          x-stream-index: "001.016"
        image_moderation_labels:
          items:
            type: string
          type: array
          x-stream-index: "001.014"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "001.029"
        migrate_permissions_to_v2:
          type: boolean
          x-stream-index: "001.035"
        moderation_enabled:
          type: boolean
          x-stream-index: "001.009"
        moderation_webhook_url:
          type: string
          x-stream-index: "001.010"
        multi_tenant_enabled:
          type: boolean
          x-stream-index: "001.013"
        permission_version:
          enum:
          - v1
          - v2
          type: string
          x-stream-index: "001.011"
        push_config:
          $ref: '#/components/schemas/PushConfig'
          x-stream-index: "001.007"
        reminders_interval:
          format: int32
          maximum: 86400
          minimum: 60
          type: integer
          x-stream-index: "001.036"
        reminders_max_members:
          format: int32
          minimum: 2
          type: integer
          x-stream-index: "001.037"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.031"
        sns_key:
          type: string
          x-stream-index: "001.027"
        sns_secret:
          type: string
          x-stream-index: "001.028"
        sns_topic_arn:
          type: string
          x-stream-index: "001.026"
        sqs_key:
          type: string
          x-stream-index: "001.024"
        sqs_secret:
          type: string
          x-stream-index: "001.025"
        sqs_url:
          type: string
          x-stream-index: "001.023"
        user_search_disallowed_roles:
          items:
            type: string
          type: array
          x-stream-index: "001.012"
        webhook_events:
          items:
            type: string
          type: array
          x-stream-index: "001.032"
        webhook_url:
          type: string
          x-stream-index: "001.008"
        xiaomi_config:
          $ref: '#/components/schemas/XiaomiConfig'
          x-stream-index: "001.006"
      type: object
    UpdateBlockListRequest:
      nullable: true
      properties:
        words:
          description: List of words to block
          items:
            type: string
          minimum: 1
          title: Words
          type: array
          x-stream-index: "002"
      title: Update block list
      type: object
      x-stream-docs-page-id: update_block_list
    UpdateCallMembersRequest:
      description: Update call members
      nullable: true
      properties:
        remove_members:
          description: List of userID to remove
          items:
            type: string
          maximum: 100
          title: Remove Members
          type: array
          x-stream-index: "003"
        update_members:
          description: List of members to update or insert
          items:
            $ref: '#/components/schemas/MemberRequest'
          maximum: 100
          title: Update Members
          type: array
          x-stream-index: "004"
      title: UpdateCallMembersRequest
      type: object
    UpdateCallMembersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "002"
      required:
      - duration
      - members
      title: Response
      type: object
    UpdateCallRequest:
      description: Request for updating a call
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "003"
        settings_override:
          $ref: '#/components/schemas/CallSettingsRequest'
          description: the settings to change for this call
          title: Settings Override
          x-stream-index: "004"
        starts_at:
          description: the time the call is scheduled to start
          format: date-time
          title: Starts At
          type: number
          x-stream-index: "005"
      title: UpdateCallRequest
      type: object
    UpdateCallResponse:
      description: Response for updating a call
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "002.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - duration
      title: UpdateCallResponse
      type: object
    UpdateCallTypeRequest:
      description: UpdateCallTypeRequest is the payload for updating a call type.
      nullable: true
      properties:
        external_storage:
          type: string
          x-stream-index: "002.004"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002.001"
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
          x-stream-index: "002.002"
        settings:
          $ref: '#/components/schemas/CallSettingsRequest'
          x-stream-index: "002.003"
      title: UpdateCallTypeRequest
      type: object
    UpdateCallTypeResponse:
      description: UpdateCallTypeResponse is the payload for updating a call type.
      nullable: true
      properties:
        created_at:
          description: the time the call type was created
          format: date-time
          title: CreatedAt
          type: number
          x-stream-index: "001.005"
        duration:
          type: string
          x-stream-index: "002.001"
        external_storage:
          description: the external storage for the call type
          title: ExternalStorage
          type: string
          x-stream-index: "001.007"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          description: the permissions granted to each role
          title: Grants
          type: object
          x-stream-index: "001.002"
        name:
          description: the name of the call type
          title: Name
          type: string
          x-stream-index: "001.001"
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
          description: the notification settings for the call type
          title: NotificationSettings
          x-stream-index: "001.004"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          description: the settings for the call type
          title: Settings
          x-stream-index: "001.003"
        updated_at:
          description: the time the call type was last updated
          format: date-time
          title: UpdatedAt
          type: number
          x-stream-index: "001.006"
      required:
      - name
      - grants
      - settings
      - notification_settings
      - created_at
      - updated_at
      - duration
      title: UpdateCallTypeResponse
      type: object
    UpdateChannelPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      title: UpdateChannelPartialRequest
      type: object
    UpdateChannelPartialResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Updated channel object
          title: Channel
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        members:
          description: List of updated members
          items:
            $ref: '#/components/schemas/ChannelMemberResponse'
          title: ChannelMemberResponse
          type: array
          x-stream-index: "002"
      required:
      - members
      - duration
      type: object
    UpdateChannelRequest:
      nullable: true
      properties:
        accept_invite:
          description: Set to `true` to accept the invite
          title: Accept invite
          type: boolean
          x-stream-index: "008"
        add_members:
          description: List of user IDs to add to the channel
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Add members
          type: array
          x-stream-index: "001"
        add_moderators:
          description: List of user IDs to make channel moderators
          items:
            type: string
          maximum: 100
          title: Add moderators
          type: array
          x-stream-index: "003"
        assign_roles:
          description: List of channel member role assignments. If any specified user
            is not part of the channel, the request will fail
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Assign roles
          type: array
          x-stream-index: "006"
        cooldown:
          description: Sets cool down period for the channel in seconds
          format: int32
          maximum: 120
          minimum: 0
          title: Cool down
          type: integer
          x-stream-index: "007"
        data:
          $ref: '#/components/schemas/ChannelInput'
          x-stream-index: "013.001"
        demote_moderators:
          description: List of user IDs to take away moderators status from
          items:
            type: string
          maximum: 100
          title: Demote moderators
          type: array
          x-stream-index: "004"
        hide_history:
          description: Set to `true` to hide channel's history when adding new members
          title: Hide history
          type: boolean
          x-stream-index: "012"
        invites:
          description: List of user IDs to invite to the channel
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Invites
          type: array
          x-stream-index: "005"
        message:
          $ref: '#/components/schemas/MessageRequest'
          description: Message to send to the chat when channel is successfully updated
          title: Message
          x-stream-index: "010"
        reject_invite:
          description: Set to `true` to reject the invite
          title: Reject invite
          type: boolean
          x-stream-index: "009"
        remove_members:
          description: List of user IDs to remove from the channel
          items:
            type: string
          maximum: 100
          title: Remove members
          type: array
          x-stream-index: "002"
        skip_push:
          description: When `message` is set disables all push notifications for it
          title: Skip push
          type: boolean
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "014.002"
        user_id:
          type: string
          x-stream-index: "014.001"
      title: Channel update request
      type: object
      x-stream-docs-page-id: channel_update
    UpdateChannelResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Updated channel
          title: Channel
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        members:
          description: List of channel members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "003"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Message sent to the chat
          title: Message
          x-stream-index: "002"
      required:
      - members
      - duration
      type: object
    UpdateChannelTypeRequest:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 009.001.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 009.001.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 009.001.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 009.001.025
        blocklist:
          type: string
          x-stream-index: 009.001.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 009.001.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 009.001.023
        commands:
          description: List of commands that channel supports
          items:
            type: string
          title: Commands
          type: array
          x-stream-index: "009.003"
        connect_events:
          type: boolean
          x-stream-index: 009.001.004
        custom_events:
          type: boolean
          x-stream-index: 009.001.012
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "004"
        mark_messages_pending:
          type: boolean
          x-stream-index: 009.001.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 009.001.018
        mutes:
          type: boolean
          x-stream-index: 009.001.009
        partition_size:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "007"
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: "008"
        permissions:
          items:
            $ref: '#/components/schemas/PolicyRequest'
          type: array
          x-stream-index: "003"
        polls:
          type: boolean
          x-stream-index: 009.001.016
        push_notifications:
          type: boolean
          x-stream-index: 009.001.013
        quotes:
          type: boolean
          x-stream-index: 009.001.008
        reactions:
          type: boolean
          x-stream-index: 009.001.006
        read_events:
          type: boolean
          x-stream-index: 009.001.003
        reminders:
          type: boolean
          x-stream-index: 009.001.014
        replies:
          type: boolean
          x-stream-index: 009.001.007
        search:
          type: boolean
          x-stream-index: 009.001.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 009.001.028
        typing_events:
          type: boolean
          x-stream-index: 009.001.002
        uploads:
          type: boolean
          x-stream-index: 009.001.010
        url_enrichment:
          type: boolean
          x-stream-index: 009.001.011
      required:
      - max_message_length
      - automod
      - automod_behavior
      type: object
    UpdateChannelTypeResponse:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 003.001.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 003.001.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 003.001.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 003.001.025
        blocklist:
          type: string
          x-stream-index: 003.001.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 003.001.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 003.001.023
        commands:
          items:
            type: string
          type: array
          x-stream-index: "003.003"
        connect_events:
          type: boolean
          x-stream-index: 003.001.004
        created_at:
          format: date-time
          type: number
          x-stream-index: 003.002.003
        custom_events:
          type: boolean
          x-stream-index: 003.001.012
        duration:
          type: string
          x-stream-index: "004.001"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 003.001.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 003.001.018
        mutes:
          type: boolean
          x-stream-index: 003.001.009
        name:
          type: string
          x-stream-index: 003.001.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 003.001.026
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 003.001.027
        permissions:
          items:
            $ref: '#/components/schemas/PolicyRequest'
          type: array
          x-stream-index: "001"
        polls:
          type: boolean
          x-stream-index: 003.001.016
        push_notifications:
          type: boolean
          x-stream-index: 003.001.013
        quotes:
          type: boolean
          x-stream-index: 003.001.008
        reactions:
          type: boolean
          x-stream-index: 003.001.006
        read_events:
          type: boolean
          x-stream-index: 003.001.003
        reminders:
          type: boolean
          x-stream-index: 003.001.014
        replies:
          type: boolean
          x-stream-index: 003.001.007
        search:
          type: boolean
          x-stream-index: 003.001.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 003.001.028
        typing_events:
          type: boolean
          x-stream-index: 003.001.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 003.002.004
        uploads:
          type: boolean
          x-stream-index: 003.001.010
        url_enrichment:
          type: boolean
          x-stream-index: 003.001.011
      required:
      - permissions
      - grants
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - created_at
      - updated_at
      - commands
      - duration
      type: object
    UpdateCommandRequest:
      nullable: true
      properties:
        args:
          description: Arguments help text, shown in commands auto-completion
          maxLength: 255
          title: Arguments
          type: string
          x-stream-index: "003"
        description:
          description: Description, shown in commands auto-completion
          maxLength: 255
          title: Description
          type: string
          x-stream-index: "002"
        set:
          description: Set name used for grouping commands
          maxLength: 255
          title: Set
          type: string
          x-stream-index: "004"
      required:
      - description
      title: UpdateCommandRequest
      type: object
    UpdateCommandResponse:
      nullable: true
      properties:
        command:
          $ref: '#/components/schemas/Command'
          description: Command object
          title: Command
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: UpdateCommandResponse
      type: object
    UpdateExternalStorageRequest:
      description: External storage
      nullable: true
      properties:
        aws_s3:
          $ref: '#/components/schemas/S3Request'
          description: Only required if you want to create an Amazon S3 storage
          title: AwsS3
          x-stream-index: "003.004"
        azure_blob:
          $ref: '#/components/schemas/AzureRequest'
          description: Only required if you want to create an Azure Blob Storage
          title: AzureBlob
          x-stream-index: "003.006"
        bucket:
          description: The name of the bucket on the service provider
          title: Bucket
          type: string
          x-stream-index: "003.002"
        gcs_credentials:
          type: string
          x-stream-index: "003.005"
        path:
          description: The path prefix to use for storing files
          title: Path
          type: string
          x-stream-index: "003.003"
        storage_type:
          description: The type of storage to use
          enum:
          - s3
          - gcs
          - abs
          title: StorageType
          type: string
          x-stream-index: "003.001"
      required:
      - storage_type
      - bucket
      title: ExternalStorageRequest
      type: object
    UpdateExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        bucket:
          type: string
          x-stream-index: "001.003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        name:
          type: string
          x-stream-index: "001.001"
        path:
          type: string
          x-stream-index: "001.004"
        type:
          enum:
          - s3
          - gcs
          - abs
          type: string
          x-stream-index: "001.002"
      required:
      - name
      - type
      - bucket
      - path
      - duration
      title: Response
      type: object
    UpdateMemberPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      type: object
    UpdateMemberPartialResponse:
      nullable: true
      properties:
        channel_member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          description: Updated channel member
          title: Channel member
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    UpdateMessagePartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        skip_enrich_url:
          description: Skip enriching the URL in the message
          title: SkipEnrichURL
          type: boolean
          x-stream-index: "001"
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    UpdateMessagePartialResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Updated message
          title: Message
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          description: Pending message metadata
          title: PendingMessageMetadata
          type: object
          x-stream-index: "002"
      required:
      - duration
      type: object
    UpdateMessageRequest:
      nullable: true
      properties:
        message:
          $ref: '#/components/schemas/MessageRequest'
          description: Message
          title: MessageRequest
          x-stream-index: "001"
        skip_enrich_url:
          description: Skip enrich URL
          title: boolean
          type: boolean
          x-stream-index: "002"
      required:
      - message
      type: object
    UpdateMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      title: Response
      type: object
    UpdatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "004"
        id:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
      required:
      - id
      - text
      type: object
    UpdatePollPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      type: object
    UpdatePollRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Allow answers
          title: boolean
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          description: Allow user suggested options
          title: boolean
          type: boolean
          x-stream-index: "008"
        description:
          description: Poll description
          title: string
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Enforce unique vote
          title: boolean
          type: boolean
          x-stream-index: "005"
        id:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
        is_closed:
          description: Is closed
          title: boolean
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Max votes allowed
          format: int32
          maximum: 10
          title: integer
          type: integer
          x-stream-index: "007"
        name:
          description: Poll name
          title: string
          type: string
          x-stream-index: "002"
        options:
          description: Poll options
          items:
            $ref: '#/components/schemas/PollOptionRequest'
          maximum: 100
          title: PollOptions
          type: array
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "012.002"
        user_id:
          type: string
          x-stream-index: "012.001"
        voting_visibility:
          description: Voting visibility
          enum:
          - anonymous
          - public
          title: string
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      type: object
    UpdateThreadPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "004.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "004.002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      type: object
    UpdateThreadPartialResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          description: Updated thread (not enriched)
          title: Thread
          x-stream-index: "001"
      required:
      - thread
      - duration
      type: object
    UpdateUserPartialRequest:
      properties:
        id:
          description: User ID to update
          title: ID
          type: string
          x-stream-index: "001"
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      required:
      - id
      type: object
    UpdateUserPermissionsRequest:
      nullable: true
      properties:
        grant_permissions:
          items:
            type: string
          type: array
          x-stream-index: "002"
        revoke_permissions:
          items:
            type: string
          type: array
          x-stream-index: "003"
        user_id:
          type: string
          x-stream-index: "001"
      required:
      - user_id
      type: object
    UpdateUserPermissionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    UpdateUsersPartialRequest:
      nullable: true
      properties:
        users:
          items:
            $ref: '#/components/schemas/UpdateUserPartialRequest'
          maximum: 100
          type: array
          x-stream-index: "001"
      required:
      - users
      type: object
    UpdateUsersRequest:
      nullable: true
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/UserRequest'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      type: object
    UpdateUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        membership_deletion_task_id:
          type: string
          x-stream-index: "002"
        users:
          additionalProperties:
            $ref: '#/components/schemas/FullUserResponse'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      - membership_deletion_task_id
      - duration
      type: object
    UpdatedCallPermissionsEvent:
      description: This event is sent to notify about permission changes for a user,
        clients receiving this event should update their UI accordingly
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        own_capabilities:
          description: The capabilities of the current user
          items:
            $ref: '#/components/schemas/OwnCapability'
          title: Own capabilities
          type: array
          x-stream-index: "004"
        type:
          default: call.permissions_updated
          description: 'The type of event: "call.permissions_updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who received the new permissions
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      - own_capabilities
      title: UpdatedCallPermissionsEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UpsertConfigRequest:
      nullable: true
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          x-stream-index: "010"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          x-stream-index: "008"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          x-stream-index: "011"
        async:
          type: boolean
          x-stream-index: "003"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          x-stream-index: "005"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          x-stream-index: "006"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          x-stream-index: "004"
        aws_rekognition_config:
          $ref: '#/components/schemas/AIImageConfig'
          x-stream-index: "014"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          x-stream-index: "007"
        bodyguard_config:
          $ref: '#/components/schemas/AITextConfig'
          x-stream-index: "013"
        google_vision_config:
          $ref: '#/components/schemas/GoogleVisionConfig'
          x-stream-index: "009"
        key:
          type: string
          x-stream-index: "001"
        team:
          maxLength: 128
          minLength: 1
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "015.002"
        user_id:
          type: string
          x-stream-index: "015.001"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          x-stream-index: "012"
      required:
      - key
      type: object
    UpsertConfigResponse:
      description: Basic response information
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ConfigResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    UpsertModerationTemplateRequest:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/FeedsModerationTemplateConfig'
          x-stream-index: "002"
        name:
          type: string
          x-stream-index: "001"
      required:
      - name
      - config
      type: object
    UpsertModerationTemplateResponse:
      description: Basic response information
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/FeedsModerationTemplateConfig'
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "005.001"
        name:
          type: string
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "004"
      required:
      - name
      - created_at
      - updated_at
      - duration
      title: Response
      type: object
    UpsertPushProviderRequest:
      nullable: true
      properties:
        push_provider:
          $ref: '#/components/schemas/PushProvider'
          x-stream-index: "001"
      type: object
    UpsertPushProviderResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        push_provider:
          $ref: '#/components/schemas/PushProviderResponse'
          x-stream-index: "001"
      required:
      - push_provider
      - duration
      title: Response
      type: object
    User:
      properties:
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "016"
        banned:
          type: boolean
          x-stream-index: "015"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        deactivated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "013"
        deleted_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "012"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "022"
        language:
          type: string
          x-stream-index: "033"
        last_active:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "010"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "011"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "021"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "025"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettings'
          x-stream-index: "024"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "040"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "034"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "008"
      required:
      - id
      - role
      - custom
      - banned
      - online
      type: object
    UserBannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "006.002"
        channel_type:
          type: string
          x-stream-index: "006.003"
        cid:
          type: string
          x-stream-index: "006.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        expiration:
          format: date-time
          type: number
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: user.banned
          type: string
          x-stream-index: "008.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007.001"
      required:
      - created_by
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserBannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserBlock:
      nullable: true
      properties:
        blocked_by_user_id:
          type: string
          x-stream-index: "005"
        blocked_user_id:
          type: string
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
      required:
      - blocked_by_user_id
      - blocked_user_id
      - created_at
      type: object
    UserCustomEventRequest:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    UserDeactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        type:
          default: user.deactivated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - created_by
      - type
      - created_at
      title: UserDeactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserDeletedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        delete_conversation_channels:
          type: boolean
          x-stream-index: "005"
        hard_delete:
          type: boolean
          x-stream-index: "003.001"
        mark_messages_deleted:
          type: boolean
          x-stream-index: "004"
        type:
          default: user.deleted
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - hard_delete
      - mark_messages_deleted
      - delete_conversation_channels
      title: UserDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserEventPayload:
      properties:
        banned:
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.016"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.015"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "002"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.013"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.014"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      type: object
    UserFeedbackReport:
      properties:
        count_by_rating:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001"
        unreported_count:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - count_by_rating
      - unreported_count
      type: object
    UserFeedbackReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateUserFeedbackReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    UserFlaggedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "002"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "003"
        type:
          default: user.flagged
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserInfoResponse:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001"
        image:
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "002"
        roles:
          items:
            type: string
          type: array
          x-stream-index: "005"
      required:
      - id
      - name
      - image
      - custom
      - roles
      type: object
    UserMute:
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: number
          x-stream-index: "008"
        target:
          $ref: '#/components/schemas/User'
          description: User who's muted
          title: Target
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/User'
          description: Owner of channel mute
          title: User
          x-stream-index: "005"
      required:
      - created_at
      - updated_at
      type: object
    UserMuteResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        expires:
          format: date-time
          type: number
          x-stream-index: "003"
        target:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    UserMutedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "001"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "002"
        type:
          default: user.muted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: UserMutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserReactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: user.reactivated
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserReactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserRequest:
      description: User request object
      properties:
        custom:
          additionalProperties: {}
          title: Custom
          type: object
          x-stream-index: "004"
        id:
          description: User ID
          title: ID
          type: string
          x-stream-index: "001"
        image:
          title: Image
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "006"
        language:
          type: string
          x-stream-index: "005"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "002"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "007"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsInput'
          x-stream-index: "010"
        role:
          title: Role
          type: string
          x-stream-index: "008"
        teams:
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "009"
      required:
      - id
      title: UserRequest
      type: object
    UserResponse:
      description: User response object
      properties:
        ban_expires:
          description: Date when ban expires
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "003"
        banned:
          description: Whether a user is banned or not
          title: Banned
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.016"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          description: Date of deactivation
          format: date-time
          title: Deactivated at
          type: number
          x-stream-index: "001.015"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "001.010"
        devices:
          description: List of devices user is using
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "006"
        id:
          description: Unique user identifier
          title: ID
          type: string
          x-stream-index: "001.001"
        image:
          title: Image
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "007"
        language:
          description: Preferred language of a user
          title: Language
          type: string
          x-stream-index: "001.005"
        last_active:
          description: Date of last activity
          format: date-time
          title: Last active
          type: number
          x-stream-index: "001.013"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "001.002"
        online:
          description: Whether a user online or not
          title: Online
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          description: User privacy settings
          title: Privacy settings
          x-stream-index: "005"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          description: User push notification settings
          title: Push notifications
          x-stream-index: "004"
        revoke_tokens_issued_before:
          description: Revocation date for tokens
          format: date-time
          title: Revoke tokens issued before
          type: number
          x-stream-index: "001.014"
        role:
          description: Determines the set of user permissions
          title: Role
          type: string
          x-stream-index: "001.006"
        shadow_banned:
          description: Whether a user is shadow banned
          title: Shadow banned
          type: boolean
          x-stream-index: "002"
        teams:
          description: List of teams user is a part of
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "001.007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - devices
      - invisible
      title: UserResponse
      type: object
    UserSessionStats:
      properties:
        average_connection_time:
          format: float
          type: number
          x-stream-index: "010"
        browser:
          type: string
          x-stream-index: "015.008"
        browser_version:
          type: string
          x-stream-index: "015.009"
        current_ip:
          type: string
          x-stream-index: "006"
        current_sfu:
          type: string
          x-stream-index: "007"
        device_model:
          type: string
          x-stream-index: "015.006"
        device_version:
          type: string
          x-stream-index: "015.007"
        distance_to_sfu_kilometers:
          format: float
          type: number
          x-stream-index: "008"
        freeze_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "017.011"
        geolocation:
          $ref: '#/components/schemas/GeolocationResult'
          x-stream-index: "009"
        group:
          type: string
          x-stream-index: "015.010"
        jitter:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "002"
        latency:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "003"
        max_fir_per_second:
          format: float
          type: number
          x-stream-index: "017.003"
        max_freeze_fraction:
          format: float
          type: number
          x-stream-index: "017.006"
        max_freezes_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "017.005"
        max_freezes_per_second:
          format: float
          type: number
          x-stream-index: "017.004"
        max_nack_per_second:
          format: float
          type: number
          x-stream-index: "017.002"
        max_pli_per_second:
          format: float
          type: number
          x-stream-index: "017.001"
        max_publishing_video_quality:
          $ref: '#/components/schemas/VideoQuality'
          x-stream-index: "016.003"
        max_receiving_video_quality:
          $ref: '#/components/schemas/VideoQuality'
          x-stream-index: "017.012"
        min_event_ts:
          format: int32
          type: integer
          x-stream-index: "005"
        os:
          type: string
          x-stream-index: "015.001"
        os_version:
          type: string
          x-stream-index: "015.002"
        packet_loss_fraction:
          format: float
          type: number
          x-stream-index: "017.007"
        pub_sub_hints:
          $ref: '#/components/schemas/MediaPubSubHint'
          x-stream-index: "013"
        published_tracks:
          items:
            $ref: '#/components/schemas/PublishedTrackInfo'
          type: array
          x-stream-index: "016.002"
        publisher_jitter:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "016.009"
        publisher_latency:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "016.008"
        publisher_noise_cancellation_seconds:
          format: float
          type: number
          x-stream-index: "016.012"
        publisher_packet_loss_fraction:
          format: float
          type: number
          x-stream-index: "016.007"
        publisher_quality_limitation_fraction:
          format: float
          type: number
          x-stream-index: "016.011"
        publisher_video_quality_limitation_duration_seconds:
          additionalProperties:
            format: float
            type: number
          type: object
          x-stream-index: "016.010"
        publishing_audio_codec:
          type: string
          x-stream-index: "016.005"
        publishing_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "016.001"
        publishing_video_codec:
          type: string
          x-stream-index: "016.006"
        quality_score:
          format: float
          type: number
          x-stream-index: "004"
        receiving_audio_codec:
          type: string
          x-stream-index: "017.014"
        receiving_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "017.010"
        receiving_video_codec:
          type: string
          x-stream-index: "017.015"
        sdk:
          type: string
          x-stream-index: "015.004"
        sdk_version:
          type: string
          x-stream-index: "015.005"
        session_id:
          type: string
          x-stream-index: "012"
        subscriber_jitter:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "017.009"
        subscriber_latency:
          $ref: '#/components/schemas/TimeStats'
          x-stream-index: "017.008"
        subscriber_video_quality_throttled_duration_seconds:
          format: float
          type: number
          x-stream-index: "017.016"
        subsessions:
          items:
            $ref: '#/components/schemas/Subsession'
          type: array
          x-stream-index: "011"
        timeline:
          $ref: '#/components/schemas/CallTimeline'
          x-stream-index: "001"
        total_pixels_in:
          type: integer
          x-stream-index: "017.013"
        total_pixels_out:
          type: integer
          x-stream-index: "016.004"
        truncated:
          type: boolean
          x-stream-index: "014"
        webrtc_version:
          type: string
          x-stream-index: "015.003"
      required:
      - quality_score
      - min_event_ts
      - session_id
      - group
      - publishing_duration_seconds
      - total_pixels_out
      - publisher_packet_loss_fraction
      - max_freezes_duration_seconds
      - max_freeze_fraction
      - packet_loss_fraction
      - receiving_duration_seconds
      - freeze_duration_seconds
      - total_pixels_in
      type: object
    UserStats:
      nullable: true
      properties:
        info:
          $ref: '#/components/schemas/UserInfoResponse'
          x-stream-index: "001"
        min_event_ts:
          format: int32
          type: integer
          x-stream-index: "004"
        rating:
          format: int32
          type: integer
          x-stream-index: "003"
        session_stats:
          items:
            $ref: '#/components/schemas/UserSessionStats'
          type: array
          x-stream-index: "002"
      required:
      - info
      - session_stats
      - min_event_ts
      type: object
    UserUnbannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "005.002"
        shadow:
          type: boolean
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "004.001"
        type:
          default: user.unbanned
          type: string
          x-stream-index: "005.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserUnbannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUnmutedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "002"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "003"
        type:
          default: user.unmuted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserUnmutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUnreadReminderEvent:
      properties:
        channels:
          additionalProperties:
            $ref: '#/components/schemas/ChannelMessages'
          type: object
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: user.unread_message_reminder
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002"
      required:
      - type
      - created_at
      - channels
      title: UserUnreadReminderEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUpdatedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        type:
          default: user.updated
          type: string
          x-stream-index: "002.002"
        user:
          $ref: '#/components/schemas/UserEventPayload'
          x-stream-index: "001"
      required:
      - user
      - type
      - created_at
      title: UserUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    VelocityFilterConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        cascading_actions:
          type: boolean
          x-stream-index: "004"
        enabled:
          type: boolean
          x-stream-index: "002"
        first_message_only:
          type: boolean
          x-stream-index: "005"
        rules:
          items:
            $ref: '#/components/schemas/VelocityFilterConfigRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      - cascading_actions
      - first_message_only
      type: object
    VelocityFilterConfigRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - ban
          type: string
          x-stream-index: "001"
        ban_duration:
          format: int32
          type: integer
          x-stream-index: "002"
        cascading_action:
          enum:
          - flag
          - shadow
          - remove
          - ban
          type: string
          x-stream-index: "006"
        cascading_threshold:
          format: int64
          type: integer
          x-stream-index: "005"
        check_message_context:
          type: boolean
          x-stream-index: "009"
        fast_spam_threshold:
          format: int32
          type: integer
          x-stream-index: "007"
        fast_spam_ttl:
          format: int32
          type: integer
          x-stream-index: "010"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        shadow_ban:
          type: boolean
          x-stream-index: "003"
        slow_spam_ban_duration:
          format: int32
          type: integer
          x-stream-index: "012"
        slow_spam_threshold:
          format: int32
          type: integer
          x-stream-index: "008"
        slow_spam_ttl:
          format: int32
          type: integer
          x-stream-index: "011"
      required:
      - action
      - ban_duration
      - shadow_ban
      - ip_ban
      - cascading_threshold
      - cascading_action
      - fast_spam_threshold
      - slow_spam_threshold
      - check_message_context
      - fast_spam_ttl
      - slow_spam_ttl
      type: object
    VideoDimension:
      properties:
        height:
          type: integer
          x-stream-index: "002"
        width:
          type: integer
          x-stream-index: "001"
      required:
      - width
      - height
      type: object
    VideoQuality:
      properties:
        resolution:
          $ref: '#/components/schemas/VideoDimension'
          x-stream-index: "002"
        usage_type:
          type: string
          x-stream-index: "001"
      type: object
    VideoSettings:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      - target_resolution
      - camera_default_on
      - camera_facing
      type: object
    VideoSettingsRequest:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      type: object
    VideoSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      - target_resolution
      - camera_default_on
      - camera_facing
      type: object
    VoteData:
      properties:
        Option:
          $ref: '#/components/schemas/PollOptionResponseData'
          x-stream-index: "003"
        answer_text:
          type: string
          x-stream-index: "002"
        option_id:
          maxLength: 255
          type: string
          x-stream-index: "001"
      type: object
    WSEvent:
      description: Represents an BaseEvent that happened in Stream Chat
      properties:
        automoderation:
          type: boolean
          x-stream-index: "021"
        automoderation_scores:
          $ref: '#/components/schemas/ModerationResponse'
          x-stream-index: "022"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "009"
        channel_id:
          type: string
          x-stream-index: "004"
        channel_type:
          type: string
          x-stream-index: "005"
        cid:
          type: string
          x-stream-index: "003"
        connection_id:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "026"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "020"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "025"
        me:
          $ref: '#/components/schemas/OwnUserResponse'
          x-stream-index: "017"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "012"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "006"
        message_update:
          $ref: '#/components/schemas/MessageUpdate'
          x-stream-index: "007"
        parent_id:
          type: string
          x-stream-index: "023"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "013"
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "014"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          x-stream-index: "008"
        reason:
          type: string
          x-stream-index: "019"
        team:
          type: string
          x-stream-index: "024"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "011"
        thread_id:
          type: string
          x-stream-index: "010"
        type:
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "015"
        user_id:
          type: string
          x-stream-index: "016"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "018"
      required:
      - type
      - custom
      - created_at
      title: Event
      type: object
      x-stream-docs-page-id: event_object
    WebhookEvent:
      description: The discriminator object for all webhook events, it maps events'
        payload to the final type
      discriminator:
        mapping:
          '*': '#/components/schemas/AnyEvent'
          call.accepted: '#/components/schemas/CallAcceptedEvent'
          call.blocked_user: '#/components/schemas/BlockedUserEvent'
          call.closed_caption: '#/components/schemas/ClosedCaptionEvent'
          call.closed_captions_failed: '#/components/schemas/CallClosedCaptionsFailedEvent'
          call.closed_captions_started: '#/components/schemas/CallClosedCaptionsStartedEvent'
          call.closed_captions_stopped: '#/components/schemas/CallClosedCaptionsStoppedEvent'
          call.created: '#/components/schemas/CallCreatedEvent'
          call.deleted: '#/components/schemas/CallDeletedEvent'
          call.ended: '#/components/schemas/CallEndedEvent'
          call.hls_broadcasting_failed: '#/components/schemas/CallHLSBroadcastingFailedEvent'
          call.hls_broadcasting_started: '#/components/schemas/CallHLSBroadcastingStartedEvent'
          call.hls_broadcasting_stopped: '#/components/schemas/CallHLSBroadcastingStoppedEvent'
          call.live_started: '#/components/schemas/CallLiveStartedEvent'
          call.member_added: '#/components/schemas/CallMemberAddedEvent'
          call.member_removed: '#/components/schemas/CallMemberRemovedEvent'
          call.member_updated: '#/components/schemas/CallMemberUpdatedEvent'
          call.member_updated_permission: '#/components/schemas/CallMemberUpdatedPermissionEvent'
          call.missed: '#/components/schemas/CallMissedEvent'
          call.notification: '#/components/schemas/CallNotificationEvent'
          call.permission_request: '#/components/schemas/PermissionRequestEvent'
          call.permissions_updated: '#/components/schemas/UpdatedCallPermissionsEvent'
          call.reaction_new: '#/components/schemas/CallReactionEvent'
          call.recording_failed: '#/components/schemas/CallRecordingFailedEvent'
          call.recording_ready: '#/components/schemas/CallRecordingReadyEvent'
          call.recording_started: '#/components/schemas/CallRecordingStartedEvent'
          call.recording_stopped: '#/components/schemas/CallRecordingStoppedEvent'
          call.rejected: '#/components/schemas/CallRejectedEvent'
          call.ring: '#/components/schemas/CallRingEvent'
          call.rtmp_broadcast_failed: '#/components/schemas/CallRtmpBroadcastFailedEvent'
          call.rtmp_broadcast_started: '#/components/schemas/CallRtmpBroadcastStartedEvent'
          call.rtmp_broadcast_stopped: '#/components/schemas/CallRtmpBroadcastStoppedEvent'
          call.session_ended: '#/components/schemas/CallSessionEndedEvent'
          call.session_participant_joined: '#/components/schemas/CallSessionParticipantJoinedEvent'
          call.session_participant_left: '#/components/schemas/CallSessionParticipantLeftEvent'
          call.session_started: '#/components/schemas/CallSessionStartedEvent'
          call.transcription_failed: '#/components/schemas/CallTranscriptionFailedEvent'
          call.transcription_ready: '#/components/schemas/CallTranscriptionReadyEvent'
          call.transcription_started: '#/components/schemas/CallTranscriptionStartedEvent'
          call.transcription_stopped: '#/components/schemas/CallTranscriptionStoppedEvent'
          call.unblocked_user: '#/components/schemas/UnblockedUserEvent'
          call.updated: '#/components/schemas/CallUpdatedEvent'
          call.user_muted: '#/components/schemas/CallUserMutedEvent'
          campaign.completed: '#/components/schemas/CampaignCompletedEvent'
          campaign.started: '#/components/schemas/CampaignStartedEvent'
          channel.created: '#/components/schemas/ChannelCreatedEvent'
          channel.deleted: '#/components/schemas/ChannelDeletedEvent'
          channel.frozen: '#/components/schemas/ChannelFrozenEvent'
          channel.hidden: '#/components/schemas/ChannelHiddenEvent'
          channel.muted: '#/components/schemas/ChannelMutedEvent'
          channel.truncated: '#/components/schemas/ChannelTruncatedEvent'
          channel.unfrozen: '#/components/schemas/ChannelUnFrozenEvent'
          channel.unmuted: '#/components/schemas/ChannelUnmutedEvent'
          channel.updated: '#/components/schemas/ChannelUpdatedEvent'
          channel.visible: '#/components/schemas/ChannelVisibleEvent'
          custom: '#/components/schemas/CustomVideoEvent'
          flag.updated: '#/components/schemas/FlagUpdatedEvent'
          member.added: '#/components/schemas/MemberAddedEvent'
          member.removed: '#/components/schemas/MemberRemovedEvent'
          member.updated: '#/components/schemas/MemberUpdatedEvent'
          message.deleted: '#/components/schemas/MessageDeletedEvent'
          message.flagged: '#/components/schemas/MessageFlaggedEvent'
          message.new: '#/components/schemas/MessageNewEvent'
          message.read: '#/components/schemas/MessageReadEvent'
          message.unblocked: '#/components/schemas/MessageUnblockedEvent'
          message.undeleted: '#/components/schemas/MessageUndeletedEvent'
          message.updated: '#/components/schemas/MessageUpdatedEvent'
          moderation.custom_action: '#/components/schemas/ModerationCustomActionEvent'
          moderation.flagged: '#/components/schemas/ModerationFlaggedEvent'
          moderation.mark_reviewed: '#/components/schemas/ModerationMarkReviewedEvent'
          notification.mark_unread: '#/components/schemas/NotificationMarkUnreadEvent'
          notification.thread_message_new: '#/components/schemas/MessageNewEvent'
          reaction.deleted: '#/components/schemas/ReactionDeletedEvent'
          reaction.new: '#/components/schemas/ReactionNewEvent'
          reaction.updated: '#/components/schemas/ReactionUpdatedEvent'
          review_queue_item.new: '#/components/schemas/ModerationEvent'
          review_queue_item.updated: '#/components/schemas/ModerationEvent'
          thread.updated: '#/components/schemas/ThreadUpdatedEvent'
          user.banned: '#/components/schemas/UserBannedEvent'
          user.deactivated: '#/components/schemas/UserDeactivatedEvent'
          user.deleted: '#/components/schemas/UserDeletedEvent'
          user.flagged: '#/components/schemas/UserFlaggedEvent'
          user.muted: '#/components/schemas/UserMutedEvent'
          user.reactivated: '#/components/schemas/UserReactivatedEvent'
          user.unbanned: '#/components/schemas/UserUnbannedEvent'
          user.unmuted: '#/components/schemas/UserUnmutedEvent'
          user.unread_message_reminder: '#/components/schemas/UserUnreadReminderEvent'
          user.updated: '#/components/schemas/UserUpdatedEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AnyEvent'
      - $ref: '#/components/schemas/BlockedUserEvent'
      - $ref: '#/components/schemas/CallAcceptedEvent'
      - $ref: '#/components/schemas/CallClosedCaptionsFailedEvent'
      - $ref: '#/components/schemas/CallClosedCaptionsStartedEvent'
      - $ref: '#/components/schemas/CallClosedCaptionsStoppedEvent'
      - $ref: '#/components/schemas/CallCreatedEvent'
      - $ref: '#/components/schemas/CallDeletedEvent'
      - $ref: '#/components/schemas/CallEndedEvent'
      - $ref: '#/components/schemas/CallHLSBroadcastingFailedEvent'
      - $ref: '#/components/schemas/CallHLSBroadcastingStartedEvent'
      - $ref: '#/components/schemas/CallHLSBroadcastingStoppedEvent'
      - $ref: '#/components/schemas/CallLiveStartedEvent'
      - $ref: '#/components/schemas/CallMemberAddedEvent'
      - $ref: '#/components/schemas/CallMemberRemovedEvent'
      - $ref: '#/components/schemas/CallMemberUpdatedEvent'
      - $ref: '#/components/schemas/CallMemberUpdatedPermissionEvent'
      - $ref: '#/components/schemas/CallMissedEvent'
      - $ref: '#/components/schemas/CallNotificationEvent'
      - $ref: '#/components/schemas/CallReactionEvent'
      - $ref: '#/components/schemas/CallRecordingFailedEvent'
      - $ref: '#/components/schemas/CallRecordingReadyEvent'
      - $ref: '#/components/schemas/CallRecordingStartedEvent'
      - $ref: '#/components/schemas/CallRecordingStoppedEvent'
      - $ref: '#/components/schemas/CallRejectedEvent'
      - $ref: '#/components/schemas/CallRingEvent'
      - $ref: '#/components/schemas/CallRtmpBroadcastFailedEvent'
      - $ref: '#/components/schemas/CallRtmpBroadcastStartedEvent'
      - $ref: '#/components/schemas/CallRtmpBroadcastStoppedEvent'
      - $ref: '#/components/schemas/CallSessionEndedEvent'
      - $ref: '#/components/schemas/CallSessionParticipantJoinedEvent'
      - $ref: '#/components/schemas/CallSessionParticipantLeftEvent'
      - $ref: '#/components/schemas/CallSessionStartedEvent'
      - $ref: '#/components/schemas/CallTranscriptionFailedEvent'
      - $ref: '#/components/schemas/CallTranscriptionReadyEvent'
      - $ref: '#/components/schemas/CallTranscriptionStartedEvent'
      - $ref: '#/components/schemas/CallTranscriptionStoppedEvent'
      - $ref: '#/components/schemas/CallUpdatedEvent'
      - $ref: '#/components/schemas/CallUserMutedEvent'
      - $ref: '#/components/schemas/CampaignCompletedEvent'
      - $ref: '#/components/schemas/CampaignStartedEvent'
      - $ref: '#/components/schemas/ChannelCreatedEvent'
      - $ref: '#/components/schemas/ChannelDeletedEvent'
      - $ref: '#/components/schemas/ChannelFrozenEvent'
      - $ref: '#/components/schemas/ChannelHiddenEvent'
      - $ref: '#/components/schemas/ChannelMutedEvent'
      - $ref: '#/components/schemas/ChannelTruncatedEvent'
      - $ref: '#/components/schemas/ChannelUnFrozenEvent'
      - $ref: '#/components/schemas/ChannelUnmutedEvent'
      - $ref: '#/components/schemas/ChannelUpdatedEvent'
      - $ref: '#/components/schemas/ChannelVisibleEvent'
      - $ref: '#/components/schemas/ClosedCaptionEvent'
      - $ref: '#/components/schemas/CustomVideoEvent'
      - $ref: '#/components/schemas/FlagUpdatedEvent'
      - $ref: '#/components/schemas/MemberAddedEvent'
      - $ref: '#/components/schemas/MemberRemovedEvent'
      - $ref: '#/components/schemas/MemberUpdatedEvent'
      - $ref: '#/components/schemas/MessageDeletedEvent'
      - $ref: '#/components/schemas/MessageFlaggedEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageReadEvent'
      - $ref: '#/components/schemas/MessageUnblockedEvent'
      - $ref: '#/components/schemas/MessageUndeletedEvent'
      - $ref: '#/components/schemas/MessageUpdatedEvent'
      - $ref: '#/components/schemas/ModerationCustomActionEvent'
      - $ref: '#/components/schemas/ModerationEvent'
      - $ref: '#/components/schemas/ModerationEvent'
      - $ref: '#/components/schemas/ModerationFlaggedEvent'
      - $ref: '#/components/schemas/ModerationMarkReviewedEvent'
      - $ref: '#/components/schemas/NotificationMarkUnreadEvent'
      - $ref: '#/components/schemas/PermissionRequestEvent'
      - $ref: '#/components/schemas/ReactionDeletedEvent'
      - $ref: '#/components/schemas/ReactionNewEvent'
      - $ref: '#/components/schemas/ReactionUpdatedEvent'
      - $ref: '#/components/schemas/ThreadUpdatedEvent'
      - $ref: '#/components/schemas/UnblockedUserEvent'
      - $ref: '#/components/schemas/UpdatedCallPermissionsEvent'
      - $ref: '#/components/schemas/UserBannedEvent'
      - $ref: '#/components/schemas/UserDeactivatedEvent'
      - $ref: '#/components/schemas/UserDeletedEvent'
      - $ref: '#/components/schemas/UserFlaggedEvent'
      - $ref: '#/components/schemas/UserMutedEvent'
      - $ref: '#/components/schemas/UserReactivatedEvent'
      - $ref: '#/components/schemas/UserUnbannedEvent'
      - $ref: '#/components/schemas/UserUnmutedEvent'
      - $ref: '#/components/schemas/UserUnreadReminderEvent'
      - $ref: '#/components/schemas/UserUpdatedEvent'
    WrappedUnreadCountsResponse:
      description: Basic response information
      nullable: true
      properties:
        channel_type:
          items:
            $ref: '#/components/schemas/UnreadCountsChannelType'
          type: array
          x-stream-index: "001.004"
        channels:
          items:
            $ref: '#/components/schemas/UnreadCountsChannel'
          type: array
          x-stream-index: "001.003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        threads:
          items:
            $ref: '#/components/schemas/UnreadCountsThread'
          type: array
          x-stream-index: "001.005"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
        total_unread_threads_count:
          format: int32
          type: integer
          x-stream-index: "001.002"
      required:
      - total_unread_count
      - total_unread_threads_count
      - channels
      - channel_type
      - threads
      - duration
      title: Response
      type: object
    XiaomiConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "003"
        package_name:
          type: string
          x-stream-index: "001"
        secret:
          type: string
          x-stream-index: "002"
      type: object
    XiaomiConfigFields:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        package_name:
          type: string
          x-stream-index: "002"
        secret:
          type: string
          x-stream-index: "003"
      required:
      - enabled
      type: object
  securitySchemes:
    JWT:
      description: |
        JWT should be always provided when stream-auth-type=jwt.

        Using JWT auth request could be authenticated as user or as server-side.

        When using user authentication permission checking is going to be applied to requests based on the user that is
        performing a request.

        The `authorization` header should be a JWT string signed using the secret attached to the API key used to perform
        requests.

        **WARNING** all client-side official SDK do not ship with token generation; this is to make sure that the API secret is not
        shared with an untrusted party such as a browser or a iOS/Android application. Tokens **must** be generated server-side.
        If you wish, you can configure your application to ignore authentication (see `disable_auth_check`)
        The JWT string must include only the user_id claim and can include any built-in JWT claim such as iat, exp as well.
      in: header
      name: Authorization
      type: apiKey
    api_key:
      description: Application API key should be always set in order to authenticate
        the request.
      in: query
      name: api_key
      type: apiKey
    stream-auth-type:
      description: |-
        Stream-Auth-Type should be always set in order to authenticate the request. Possible
        values: `jwt` or `anonymous`.

        `jwt` allows you to authenticate as a user. With this auth type you should also provide valid JWT in Authorization
        header.

        `anonymous` allows you to authenticate as anonymous user. Please note that most advanced features are not available
        to anonymous users.
      in: header
      name: Stream-Auth-Type
      type: apiKey
info:
  title: Stream API
  version: v142.2.1
openapi: 3.0.3
paths:
  /api/v2/app:
    get:
      description: |
        This Method returns the application settings
      operationId: GetApp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get App Settings
      tags:
      - product:common
    patch:
      description: |
        This Method updates one or more application settings
      operationId: UpdateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update App Settings
      tags:
      - product:common
  /api/v2/blocklists:
    get:
      description: |
        Returns all available block lists
      operationId: ListBlockLists
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List block lists
      tags:
      - product:common
    post:
      description: |
        Creates a new application blocklist, once created the blocklist can be used by any channel type
      operationId: CreateBlockList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlockListRequest'
        description: Block list
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create block list
      tags:
      - product:common
  /api/v2/blocklists/{name}:
    delete:
      description: |
        Deletes previously created application blocklist
      operationId: DeleteBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Block list name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete block list
      tags:
      - product:common
    get:
      description: |
        Returns block list by given name
      operationId: GetBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Block list name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockListResponse'
          description: GetBlockListResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get block list
      tags:
      - product:common
    put:
      description: |
        Updates contents of the block list
      operationId: UpdateBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Block list name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockListRequest'
        description: Update block list
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update block list
      tags:
      - product:common
  /api/v2/chat/campaigns/{id}:
    get:
      description: |
        Get campaign by ID.
      operationId: GetCampaign
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The ID of the campaign (uuid)
          maxLength: 255
          title: Campaign ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get campaign
      tags:
      - product:chat
  /api/v2/chat/campaigns/{id}/start:
    post:
      description: |
        Starts or schedules a campaign
      operationId: StartCampaign
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCampaignRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCampaignResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start/schedule campaign
      tags:
      - product:chat
  /api/v2/chat/campaigns/{id}/stop:
    post:
      description: |
        Stops a campaign
      operationId: ScheduleCampaign
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopCampaignRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop campaign
      tags:
      - product:chat
  /api/v2/chat/campaigns/query:
    post:
      description: |
        Query campaigns
      operationId: QueryCampaigns
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCampaignsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCampaignsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query campaign
      tags:
      - product:chat
  /api/v2/chat/channels:
    post:
      description: |
        Query channels with filter query
      operationId: QueryChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryChannelsRequest'
        description: Query Channels Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryChannelsResponse'
          description: Channels list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query channels
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}:
    delete:
      description: |
        Deletes channel

        Sends events:
        - channel.deleted
      operationId: DeleteChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: hard_delete
        schema:
          type: boolean
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete channel
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the channel

        Sends events:
        - channel.updated
      operationId: UpdateChannelPartial
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelPartialRequest'
        description: UpdateChannelPartialRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update channel
      tags:
      - product:chat
    post:
      description: |
        Change channel data

        Sends events:
        - channel.updated
        - member.added
        - member.removed
        - member.updated
        - message.new
      operationId: UpdateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 013.002.001
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 013.002.002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelRequest'
        description: Channel update request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/event:
    post:
      description: |
        Sends event to the channel
      operationId: SendEvent
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEventRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send event
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/file:
    delete:
      description: |
        Deletes previously uploaded file
      operationId: DeleteFile
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of file
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: File ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete file
      tags:
      - product:chat
    post:
      description: |
        Uploads file
      operationId: UploadFile
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload file
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/hide:
    post:
      description: |
        Marks channel as hidden for current user

        Sends events:
        - channel.hidden
      operationId: HideChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HideChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HideChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Hide channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/image:
    delete:
      description: |
        Deletes previously uploaded image
      operationId: DeleteImage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of file
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: File ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete image
      tags:
      - product:chat
    post:
      description: |
        Uploads image
      operationId: UploadImage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 001.001.001
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 001.001.002
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload image
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/member/{user_id}:
    patch:
      description: |2+

      operationId: UpdateMemberPartial
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMemberPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially channel member update
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/message:
    post:
      description: |
        Sends new message to the specified channel

        Sends events:
        - message.new
        - message.updated
      operationId: SendMessage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "009.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "009.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send new message
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/messages:
    get:
      description: |
        Returns list messages found by IDs
      operationId: GetManyMessages
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: ids
        required: true
        schema:
          description: List of comma-separated IDs
          items:
            type: string
          maximum: 50
          minimum: 1
          title: IDs
          type: array
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyMessagesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get many messages
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/query:
    post:
      description: |
        This Method creates a channel or returns an existing one with matching attributes

        Sends events:
        - channel.created
        - member.added
        - member.removed
        - member.updated
        - user.watching.start
      operationId: GetOrCreateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID (maximum length of 64 characters)
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelGetOrCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/read:
    post:
      description: |
        Marks channel as read up to the specific message

        Sends events:
        - message.read
      operationId: MarkRead
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkReadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkReadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark read
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/show:
    post:
      description: |
        Shows previously hidden channel

        Sends events:
        - channel.visible
      operationId: ShowChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Show channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/truncate:
    post:
      description: |
        Truncates channel

        Sends events:
        - channel.truncated
      operationId: TruncateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruncateChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncateChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Truncate channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/unread:
    post:
      description: |
        Marks channel as unread from a specific message
      operationId: MarkUnread
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnreadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark unread
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/query:
    post:
      description: |
        This Method creates a channel or returns an existing one with matching attributes

        Sends events:
        - channel.created
        - member.added
        - member.removed
        - member.updated
        - user.watching.start
      operationId: GetOrCreateDistinctChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelGetOrCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create channel
      tags:
      - product:chat
  /api/v2/chat/channels/delete:
    post:
      description: |
        Allows to delete several channels at once asynchronously

        Sends events:
        - channel.deleted
      operationId: DeleteChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChannelsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deletes channels asynchronously
      tags:
      - product:chat
  /api/v2/chat/channels/read:
    post:
      description: |
        Marks channels as read up to the specific message. If no channels is given, mark all channel as read

        Sends events:
        - message.read
      operationId: MarkChannelsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkChannelsReadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkReadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark channels as read
      tags:
      - product:chat
  /api/v2/chat/channeltypes:
    get:
      description: |
        Lists all available channel types
      operationId: ListChannelTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListChannelTypesResponse'
          description: ListChannelTypesResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List channel types
      tags:
      - product:chat
    post:
      description: |
        Creates new channel type
      operationId: CreateChannelType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChannelTypeRequest'
        description: CreateChannelTypeRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChannelTypeResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create channel type
      tags:
      - product:chat
  /api/v2/chat/channeltypes/{name}:
    delete:
      description: |
        Deletes channel type
      operationId: DeleteChannelType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Channel type name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete channel type
      tags:
      - product:chat
    get:
      description: |
        Gets channel type
      operationId: GetChannelType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Channel type name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChannelTypeResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get channel type
      tags:
      - product:chat
    put:
      description: |
        Updates channel type
      operationId: UpdateChannelType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelTypeRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelTypeResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update channel type
      tags:
      - product:chat
  /api/v2/chat/commands:
    get:
      description: |
        Returns all custom commands
      operationId: ListCommands
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCommandsResponse'
          description: ListCommandsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List commands
      tags:
      - product:chat
    post:
      description: |
        Creates custom chat command
      operationId: CreateCommand
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommandRequest'
        description: CreateCommandRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCommandResponse'
          description: CreateCommandResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create command
      tags:
      - product:chat
  /api/v2/chat/commands/{name}:
    delete:
      description: |
        Deletes custom chat command
      operationId: DeleteCommand
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Command name
          title: Name
          type: string
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCommandResponse'
          description: DeleteCommandResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete command
      tags:
      - product:chat
    get:
      description: |
        Returns custom command by its name
      operationId: GetCommand
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Command name
          title: Name
          type: string
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommandResponse'
          description: GetCommandResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get command
      tags:
      - product:chat
    put:
      description: |
        Updates custom chat command
      operationId: UpdateCommand
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Unique command name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommandRequest'
        description: UpdateCommandRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCommandResponse'
          description: UpdateCommandResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update command
      tags:
      - product:chat
  /api/v2/chat/export_channels:
    post:
      description: |
        Exports channel data to JSON file
      operationId: ExportChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportChannelsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportChannelsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export channels
      tags:
      - product:chat
  /api/v2/chat/export_channels/{id}:
    get:
      description: |2+

      operationId: GetExportChannelsStatus
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Task ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExportChannelsStatusResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export channels status
      tags:
      - product:chat
  /api/v2/chat/members:
    get:
      description: |
        Find and filter channel members
      operationId: QueryMembers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMembersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query members
      tags:
      - product:chat
  /api/v2/chat/messages/{id}:
    delete:
      description: |
        Deletes message

        Sends events:
        - message.deleted
      operationId: DeleteMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard
        schema:
          description: Delete all message reactions and replies as well
          title: Hard
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: deleted_by
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete message
      tags:
      - product:chat
    get:
      description: |
        Returns message by ID
      operationId: GetMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: ID of the message
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: show_deleted_message
        schema:
          description: Whether to show deleted message
          title: Show deleted message
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get message
      tags:
      - product:chat
    post:
      description: |
        Updates message with new data

        Sends events:
        - message.updated
      operationId: UpdateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update message
      tags:
      - product:chat
    put:
      description: |
        Updates certain fields of the message

        Sends events:
        - message.updated
      operationId: UpdateMessagePartial
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessagePartialRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessagePartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially message update
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/action:
    post:
      description: |
        Executes message command action with given parameters

        Sends events:
        - message.new
      operationId: RunMessageAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Run message command action
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/commit:
    post:
      description: |
        Commits a pending message, which will make it visible in the channel

        Sends events:
        - message.new
        - message.updated
      operationId: CommitMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommitMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Commit message
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/reaction:
    post:
      description: |
        Sends reaction to specified message

        Sends events:
        - reaction.new
        - reaction.updated
      operationId: SendReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to send reaction for
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendReactionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send reaction
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/reaction/{type}:
    delete:
      description: |
        Removes user reaction from the message

        Sends events:
        - reaction.deleted
      operationId: DeleteReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to remove reaction from
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          description: Reaction type to remove
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionRemovalResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete reaction
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/reactions:
    get:
      description: |
        Returns list of reactions of specific message
      operationId: GetReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: limit
        schema:
          description: Number of records to return
          format: int32
          title: Limit
          type: integer
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: offset
        schema:
          description: Number of records to offset
          format: int32
          title: Offset
          type: integer
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReactionsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get reactions
      tags:
      - product:chat
    post:
      description: |
        Get reactions on a message
      operationId: QueryReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/translate:
    post:
      description: |
        Translates message to a given language using automated translation software

        Sends events:
        - message.updated
      operationId: TranslateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Translate message
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/undelete:
    post:
      description: |
        Undelete a message that was previously soft-deleted

        Sends events:
        - message.undeleted
      operationId: UndeleteMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Undelete message
      tags:
      - product:chat
  /api/v2/chat/messages/{message_id}/polls/{poll_id}/vote:
    post:
      description: |
        Cast a vote on a poll

        Sends events:
        - poll.vote_casted
      operationId: CastPollVote
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastPollVoteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Cast vote
      tags:
      - product:chat
  /api/v2/chat/messages/{message_id}/polls/{poll_id}/vote/{vote_id}:
    delete:
      description: |
        Delete a vote from a poll

        Sends events:
        - poll.vote_removed
      operationId: RemovePollVote
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: path
        name: vote_id
        required: true
        schema:
          description: Vote ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "004"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete vote
      tags:
      - product:chat
  /api/v2/chat/messages/{parent_id}/replies:
    get:
      description: |
        Returns replies (thread) of the message
      operationId: GetReplies
      parameters:
      - in: path
        name: parent_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: sort
        schema:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: limit
        schema:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "003.001"
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
          x-stream-index: "003.002"
      - in: query
        name: id_gte
        schema:
          type: string
          x-stream-index: "003.003"
      - in: query
        name: id_gt
        schema:
          type: string
          x-stream-index: "003.004"
      - in: query
        name: id_lte
        schema:
          type: string
          x-stream-index: "003.005"
      - in: query
        name: id_lt
        schema:
          type: string
          x-stream-index: "003.006"
      - in: query
        name: created_at_after_or_equal
        schema:
          format: date-time
          type: number
          x-stream-index: "003.007"
      - in: query
        name: created_at_after
        schema:
          format: date-time
          type: number
          x-stream-index: "003.008"
      - in: query
        name: created_at_before_or_equal
        schema:
          format: date-time
          type: number
          x-stream-index: "003.009"
      - in: query
        name: created_at_before
        schema:
          format: date-time
          type: number
          x-stream-index: "003.010"
      - in: query
        name: id_around
        schema:
          type: string
          x-stream-index: "003.011"
      - in: query
        name: created_at_around
        schema:
          format: date-time
          type: number
          x-stream-index: "003.012"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepliesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get replies
      tags:
      - product:chat
  /api/v2/chat/messages/history:
    post:
      description: |
        Queries history for one message
      operationId: QueryMessageHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMessageHistoryRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMessageHistoryResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query message history
      tags:
      - product:chat
  /api/v2/chat/moderation/flags/message:
    get:
      description: |
        Find and filter message flags
      operationId: QueryMessageFlags
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMessageFlagsPayload'
              description: JSON object with query message flags payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMessageFlagsResponse'
          description: QueryMessageFlagsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Message Flags
      tags:
      - product:chat
  /api/v2/chat/moderation/mute/channel:
    post:
      description: |
        Mutes channel for user

        Sends events:
        - channel.muted
      operationId: MuteChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute channel
      tags:
      - product:chat
  /api/v2/chat/moderation/unmute/channel:
    post:
      description: |
        Unmutes channel for user

        Sends events:
        - channel.unmuted
      operationId: UnmuteChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmuteChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmuteResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unmute channel
      tags:
      - product:chat
  /api/v2/chat/polls:
    post:
      description: |
        Creates a new poll
      operationId: CreatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollRequest'
        description: Create Poll Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll
      tags:
      - product:chat
    put:
      description: |
        Updates a poll

        Sends events:
        - poll.closed
        - poll.updated
      operationId: UpdatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll
      tags:
      - product:chat
  /api/v2/chat/polls/{poll_id}:
    delete:
      description: |
        Deletes a poll

        Sends events:
        - poll.deleted
      operationId: DeletePoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll
      tags:
      - product:chat
    get:
      description: |
        Retrieves a poll
      operationId: GetPoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll
      tags:
      - product:chat
    patch:
      description: |
        Updates a poll partially

        Sends events:
        - poll.updated
      operationId: UpdatePollPartial
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partial update poll
      tags:
      - product:chat
  /api/v2/chat/polls/{poll_id}/options:
    post:
      description: |
        Creates a poll option

        Sends events:
        - poll.updated
      operationId: CreatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll option
      tags:
      - product:chat
    put:
      description: |
        Updates a poll option

        Sends events:
        - poll.updated
      operationId: UpdatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll option
      tags:
      - product:chat
  /api/v2/chat/polls/{poll_id}/options/{option_id}:
    delete:
      description: |
        Deletes a poll option

        Sends events:
        - poll.updated
      operationId: DeletePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll option
      tags:
      - product:chat
    get:
      description: |
        Retrieves a poll option
      operationId: GetPollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll option
      tags:
      - product:chat
  /api/v2/chat/polls/{poll_id}/votes:
    post:
      description: |
        Queries votes
      operationId: QueryPollVotes
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollVotesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVotesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query votes
      tags:
      - product:chat
  /api/v2/chat/polls/query:
    post:
      description: |
        Queries polls
      operationId: QueryPolls
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPollsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query polls
      tags:
      - product:chat
  /api/v2/chat/query_banned_users:
    get:
      description: |
        Find and filter channel scoped or global user bans
      operationId: QueryBannedUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBannedUsersPayload'
              description: JSON object with query user bans payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBannedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Banned Users
      tags:
      - product:chat
  /api/v2/chat/search:
    get:
      description: |
        Search messages across channels
      operationId: Search
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPayload'
              description: JSON object with search payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Search messages
      tags:
      - product:chat
  /api/v2/chat/segments/{id}:
    delete:
      description: |
        Delete a segment
      operationId: DeleteSegment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete segment
      tags:
      - product:chat
    get:
      description: |
        Get segment
      operationId: GetSegment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSegmentResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get segment
      tags:
      - product:chat
  /api/v2/chat/segments/{id}/deletetargets:
    post:
      description: |
        Delete targets from a segment
      operationId: DeleteSegmentTargets
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSegmentTargetsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete targets from a segment
      tags:
      - product:chat
  /api/v2/chat/segments/{id}/target/{target_id}:
    get:
      description: |
        Check whether a target exists in a segment. Returns 200 if the target exists, 404 otherwise
      operationId: SegmentTargetExists
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: target_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check whether a target exists in a segment
      tags:
      - product:chat
  /api/v2/chat/segments/{id}/targets/query:
    post:
      description: |
        Query segment targets
      operationId: QuerySegmentTargets
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySegmentTargetsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySegmentTargetsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query segment targets
      tags:
      - product:chat
  /api/v2/chat/segments/query:
    post:
      description: |
        Query segments
      operationId: QuerySegments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuerySegmentsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuerySegmentsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query segments
      tags:
      - product:chat
  /api/v2/chat/threads:
    post:
      description: |
        Returns the list of threads for specific user
      operationId: QueryThreads
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryThreadsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryThreadsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Threads
      tags:
      - product:chat
  /api/v2/chat/threads/{message_id}:
    get:
      description: |
        Return a specific thread
      operationId: GetThread
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: reply_limit
        schema:
          description: Limit the number of replies returned
          format: int32
          minimum: 0
          title: Reply limit
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: participant_limit
        schema:
          description: Limit the number of participants returned
          format: int32
          maximum: 100
          minimum: 0
          title: Participant limit
          type: integer
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: member_limit
        schema:
          description: Limit the number of members returned per thread channel
          format: int32
          maximum: 100
          minimum: 0
          title: Member limit
          type: integer
          writeOnly: true
          x-stream-index: "006"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThreadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Thread
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the thread

        Sends events:
        - thread.updated
      operationId: UpdateThreadPartial
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThreadPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update thread
      tags:
      - product:chat
  /api/v2/chat/unread:
    get:
      description: |
        Fetch unread counts for a single user
      operationId: UnreadCounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WrappedUnreadCountsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unread counts
      tags:
      - product:chat
  /api/v2/chat/unread_batch:
    post:
      description: |
        Fetch unread counts in batch for multiple users in one call
      operationId: UnreadCountsBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnreadCountsBatchRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnreadCountsBatchResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Batch unread counts
      tags:
      - product:chat
  /api/v2/chat/users/{user_id}/event:
    post:
      description: |
        Sends a custom event to a user

        Sends events:
        - *
      operationId: SendUserCustomEvent
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendUserCustomEventRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send user event
      tags:
      - product:chat
  /api/v2/check_push:
    post:
      description: |
        Sends a test message via push, this is a test endpoint to verify your push settings
      operationId: CheckPush
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPushRequest'
        description: CheckPushRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckPushResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check push
      tags:
      - product:common
  /api/v2/check_sns:
    post:
      description: |
        Validates Amazon SNS configuration
      operationId: CheckSNS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSNSRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSNSResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check SNS
      tags:
      - product:common
  /api/v2/check_sqs:
    post:
      description: |
        Validates Amazon SQS credentials
      operationId: CheckSQS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSQSRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSQSResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check SQS
      tags:
      - product:common
  /api/v2/devices:
    delete:
      description: |
        Deletes one device
      operationId: DeleteDevice
      parameters:
      - in: query
        name: id
        required: true
        schema:
          description: Device ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete device
      tags:
      - product:common
    get:
      description: |
        Returns all available devices
      operationId: ListDevices
      parameters:
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: ListDevicesResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List devices
      tags:
      - product:common
    post:
      description: |
        Adds a new device to a user, if the same device already exists the call will have no effect
      operationId: CreateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        description: CreateDeviceRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create device
      tags:
      - product:common
  /api/v2/export/users:
    post:
      description: |
        Exports user profile, reactions and messages for list of given users
      operationId: ExportUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportUsersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export users
      tags:
      - product:common
  /api/v2/external_storage:
    get:
      description: |
        Lists external storage
      operationId: ListExternalStorage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List external storage
      tags:
      - product:common
    post:
      description: |
        Creates new external storage
      operationId: CreateExternalStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExternalStorageRequest'
        description: CreateExternalStorageRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create external storage
      tags:
      - product:common
  /api/v2/external_storage/{name}:
    delete:
      description: |
        Deletes external storage
      operationId: DeleteExternalStorage
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete external storage
      tags:
      - product:common
    put:
      description: |2+

      operationId: UpdateExternalStorage
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExternalStorageRequest'
        description: ExternalStorageRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update External Storage
      tags:
      - product:common
  /api/v2/external_storage/{name}/check:
    get:
      description: |2+

      operationId: CheckExternalStorage
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check External Storage
      tags:
      - product:common
  /api/v2/guest:
    post:
      description: |2+

      operationId: CreateGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGuestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGuestResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create Guest
      tags:
      - product:common
  /api/v2/import_urls:
    post:
      description: |
        Creates a new import URL
      operationId: CreateImportURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImportURLRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportURLResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create import URL
      tags:
      - product:common
  /api/v2/imports:
    get:
      description: |
        Gets an import
      operationId: ListImports
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get import
      tags:
      - product:common
    post:
      description: |
        Creates a new import
      operationId: CreateImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImportRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create import
      tags:
      - product:common
  /api/v2/imports/{id}:
    get:
      description: |
        Gets an import
      operationId: GetImport
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get import
      tags:
      - product:common
  /api/v2/moderation/ban:
    post:
      description: |
        Moderation v2 ban
      operationId: ban
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BanRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BanResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 ban
      tags:
      - product:moderation
  /api/v2/moderation/check:
    post:
      description: |
        Moderation v2 check
      operationId: check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 check
      tags:
      - product:moderation
  /api/v2/moderation/config:
    post:
      description: |
        Moderation v2 upsert configuration
      operationId: upsert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertConfigRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertConfigResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 upsert configuration
      tags:
      - product:moderation
  /api/v2/moderation/config/{key}:
    delete:
      description: |
        Delete a specific moderation policy by its name
      operationId: delete_config
      parameters:
      - in: path
        name: key
        required: true
        schema:
          type: string
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteModerationConfigResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a moderation policy
      tags:
      - product:moderation
    get:
      description: |
        Moderation v2 get configuration
      operationId: get_config
      parameters:
      - in: path
        name: key
        required: true
        schema:
          type: string
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 get configuration
      tags:
      - product:moderation
  /api/v2/moderation/configs:
    post:
      description: |
        Query moderation configs. This is used for building a moderation dashboard.
      operationId: query_moderation_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationConfigsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationConfigsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query moderation configs
      tags:
      - product:moderation
  /api/v2/moderation/custom_check:
    post:
      description: |
        Moderation v2 custom check, add your own AI model reports to the review queue
      operationId: custom_check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomCheckRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomCheckResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 custom check endpoint
      tags:
      - product:moderation
  /api/v2/moderation/feeds_moderation_template:
    delete:
      description: |
        Delete a specific moderation template by its name
      operationId: V2DeleteTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteModerationTemplateResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a moderation template
      tags:
      - product:moderation
    get:
      description: |
        Retrieve a list of feed moderation templates (hard limit of 100 templates)
      operationId: V2QueryTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFeedModerationTemplatesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 query feed templates
      tags:
      - product:moderation
    post:
      description: |
        Moderation v2 upsert feeds template
      operationId: V2UpsertTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertModerationTemplateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertModerationTemplateResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 upsert feeds template
      tags:
      - product:moderation
  /api/v2/moderation/flag:
    post:
      description: |
        Moderation v2 flag
      operationId: flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 flag
      tags:
      - product:moderation
  /api/v2/moderation/logs:
    post:
      description: |
        Query review queue items allows you to filter the moderation logs. This is used for building a moderation dashboard.
      operationId: query_moderation_logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationLogsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationLogsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Moderation Action Logs
      tags:
      - product:moderation
  /api/v2/moderation/moderator_stats:
    get:
      description: |
        Moderation v2 moderator stats
      operationId: get_moderator_stats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModeratorStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 moderator stats
      tags:
      - product:moderation
  /api/v2/moderation/mute:
    post:
      description: |
        Moderation v2 mute
      operationId: mute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteRequest'
        description: MuteRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteResponse'
          description: MuteResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 mute
      tags:
      - product:moderation
  /api/v2/moderation/queue_stats:
    get:
      description: |
        Moderation v2 queue stats
      operationId: get_queue_stats
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueueStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 queue stats
      tags:
      - product:moderation
  /api/v2/moderation/review_queue:
    post:
      description: |
        Query review queue items allows you to filter the review queue items. This is used for building a moderation dashboard.
      operationId: query_review_queue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReviewQueueRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryReviewQueueResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query review queue items
      tags:
      - product:moderation
  /api/v2/moderation/review_queue/{id}:
    get:
      description: |
        Moderation v2 get review queue item
      operationId: get_review_queue_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReviewQueueItemResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 get review queue item
      tags:
      - product:moderation
  /api/v2/moderation/submit_action:
    post:
      description: |
        Moderation v2 submit action
      operationId: submit_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitActionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 submit action
      tags:
      - product:moderation
  /api/v2/moderation/unban:
    post:
      description: |
        Moderation v2 unban
      operationId: unban
      parameters:
      - in: query
        name: target_user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: channel_cid
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: created_by
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnbanRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 unban
      tags:
      - product:moderation
  /api/v2/moderation/unmute:
    post:
      description: |
        Moderation V2 unmute a user
      operationId: unmute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmuteRequest'
        description: UnmuteRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmuteResponse'
          description: UnmuteResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation V2 unmute a user
      tags:
      - product:moderation
  /api/v2/moderation/usage_stats:
    post:
      description: |
        Query usage stats
      operationId: query_usage_stats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUsageStatsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUsageStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query usage stats
      tags:
      - product:moderation
  /api/v2/moderation/user_report:
    get:
      description: |
        Moderation v2 get user moderation report
      operationId: get_user_report
      parameters:
      - in: query
        name: user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: create_user_if_not_exists
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: include_user_mutes
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: include_user_blocks
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "004"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserModerationReportResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Moderation v2 get user moderation report
      tags:
      - product:moderation
  /api/v2/og:
    get:
      description: |
        Get an OpenGraph attachment for a link
      operationId: GetOG
      parameters:
      - in: query
        name: url
        required: true
        schema:
          description: URL to be scraped
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOGResponse'
          description: Get OG Attachment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get OG
      tags:
      - product:common
  /api/v2/permissions:
    get:
      description: |
        Lists all available permissions
      operationId: ListPermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List permissions
      tags:
      - product:common
  /api/v2/permissions/{id}:
    get:
      description: |
        Gets custom permission
      operationId: GetPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Permission ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomPermissionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get permission
      tags:
      - product:common
  /api/v2/push_providers:
    get:
      description: |
        List details of all push providers.
      operationId: ListPushProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPushProvidersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List push providers
      tags:
      - product:common
    post:
      description: |
        Upsert a push provider for v2 with multi bundle/package support
      operationId: UpsertPushProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPushProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertPushProviderResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert a push provider
      tags:
      - product:common
  /api/v2/push_providers/{type}/{name}:
    delete:
      description: |
        Delete a push provider from v2 with multi bundle/package support. v1 isn't supported in this endpoint
      operationId: DeletePushProvider
      parameters:
      - in: path
        name: type
        required: true
        schema:
          enum:
          - apn
          - firebase
          - huawei
          - xiaomi
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: name
        required: true
        schema:
          maxLength: 36
          minLength: 1
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a push provider
      tags:
      - product:common
  /api/v2/rate_limits:
    get:
      description: |
        Get rate limits usage and quotas
      operationId: GetRateLimits
      parameters:
      - in: query
        name: server_side
        schema:
          description: Whether to include server-side platform limits or not
          title: Server-side
          type: boolean
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: android
        schema:
          description: Whether to include Android platform limits or not
          title: Android
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: ios
        schema:
          description: Whether to include iOS platform limits or not
          title: iOS
          type: boolean
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: web
        schema:
          description: Whether to include web platform limits or not
          title: Web
          type: boolean
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: endpoints
        schema:
          description: Specific endpoints to show limits for, as a comma-separated
            list of values
          title: Endpoints
          type: string
          writeOnly: true
          x-stream-index: "005"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRateLimitsResponse'
          description: Get Rate Limits Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get rate limits
      tags:
      - product:common
  /api/v2/roles:
    get:
      description: |
        Lists all available roles
      operationId: ListRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List roles
      tags:
      - product:common
    post:
      description: |
        Creates custom role
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create role
      tags:
      - product:common
  /api/v2/roles/{name}:
    delete:
      description: |
        Deletes custom role
      operationId: DeleteRole
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Role name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete role
      tags:
      - product:common
  /api/v2/tasks/{id}:
    get:
      description: |
        Gets status of a task
      operationId: GetTask
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Task ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskResponse'
          description: Get Task Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get status of a task
      tags:
      - product:common
  /api/v2/users:
    get:
      description: |
        Find and filter users
      operationId: QueryUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUsersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query users
      tags:
      - product:common
    patch:
      description: |
        Updates certain fields of the user

        Sends events:
        - user.updated
        - user.presence.changed
      operationId: UpdateUsersPartial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update user
      tags:
      - product:common
    post:
      description: |
        Update or create users in bulk

        Sends events:
        - user.updated
      operationId: UpdateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert users
      tags:
      - product:common
  /api/v2/users/{user_id}/deactivate:
    post:
      description: |
        Deactivates user with possibility to activate it back

        Sends events:
        - user.deactivated
      operationId: DeactivateUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deactivate user
      tags:
      - product:common
  /api/v2/users/{user_id}/export:
    get:
      description: |
        Exports the user's profile, reactions and messages. Raises an error if a user has more than 10k messages or reactions
      operationId: ExportUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User ID
          type: string
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export user
      tags:
      - product:common
  /api/v2/users/{user_id}/reactivate:
    post:
      description: |
        Activates user who's been deactivated previously

        Sends events:
        - user.reactivated
      operationId: ReactivateUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User ID
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactivateUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactivateUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reactivate user
      tags:
      - product:common
  /api/v2/users/block:
    get:
      description: |
        Get list of blocked Users
      operationId: GetBlockedUsers
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get list of blocked Users
      tags:
      - product:common
    post:
      description: |
        Block users
      operationId: BlockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Block user
      tags:
      - product:common
  /api/v2/users/deactivate:
    post:
      description: |
        Deactivate users in batches

        Sends events:
        - user.deactivated
      operationId: DeactivateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
        description: DeactivateUsersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateUsersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deactivate users
      tags:
      - product:common
  /api/v2/users/delete:
    post:
      description: |
        Deletes users and optionally all their belongings asynchronously.

        Sends events:
        - channel.deleted
        - user.deleted
      operationId: DeleteUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete Users
      tags:
      - product:common
  /api/v2/users/reactivate:
    post:
      description: |
        Reactivate users in batches

        Sends events:
        - user.reactivated
      operationId: ReactivateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactivateUsersRequest'
        description: ReactivateUsersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactivateUsersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reactivate users
      tags:
      - product:common
  /api/v2/users/restore:
    post:
      description: |
        Restore soft deleted users
      operationId: RestoreUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Restore users
      tags:
      - product:common
  /api/v2/users/unblock:
    post:
      description: |
        Unblock users
      operationId: UnblockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unblock user
      tags:
      - product:common
  /api/v2/video/call/{type}/{id}:
    get:
      description: |2+

      operationId: GetCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: members_limit
        schema:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: ring
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: notify
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "006"
      - in: query
        name: video
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "007"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallResponse'
          description: GetCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Call
      tags:
      - product:video
    patch:
      description: |2


        Sends events:
        - call.updated
      operationId: UpdateCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCallRequest'
        description: UpdateCallRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCallResponse'
          description: UpdateCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update Call
      tags:
      - product:video
    post:
      description: |
        Gets or creates a new call

        Sends events:
        - call.created
        - call.notification
        - call.ring
      operationId: GetOrCreateCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateCallRequest'
        description: GetOrCreateCallRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrCreateCallResponse'
          description: GetOrCreateCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/{session}/recordings/{filename}:
    delete:
      description: |
        Deletes recording
      operationId: DeleteRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: filename
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "004"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecordingResponse'
          description: DeleteRecordingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/{session}/transcriptions/{filename}:
    delete:
      description: |
        Deletes transcription
      operationId: DeleteTranscription
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: filename
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "004"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTranscriptionResponse'
          description: DeleteTranscriptionResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete transcription
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/block:
    post:
      description: |
        Block a user, preventing them from joining the call until they are unblocked.

        Sends events:
        - call.blocked_user
      operationId: BlockUser
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUserRequest'
        description: BlockUserRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUserResponse'
          description: BlockUserResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Block user on a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/delete:
    post:
      description: |2


        Sends events:
        - call.deleted
      operationId: DeleteCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCallRequest'
        description: DeleteCallRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCallResponse'
          description: DeleteCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete Call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/event:
    post:
      description: |
        Sends custom event to the call

        Sends events:
        - custom
      operationId: SendCallEvent
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCallEventRequest'
        description: SendCallEventRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCallEventResponse'
          description: SendCallEventResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send custom event
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/feedback/{session}:
    post:
      description: |2+

      operationId: CollectUserFeedback
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectUserFeedbackRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectUserFeedbackResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Collect user feedback
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/go_live:
    post:
      description: |2


        Sends events:
        - call.live_started
      operationId: GoLive
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoLiveRequest'
        description: GoLiveRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoLiveResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Set call as live
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/mark_ended:
    post:
      description: |2


        Sends events:
        - call.ended
      operationId: EndCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndCallResponse'
          description: EndCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: End call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/members:
    post:
      description: |2


        Sends events:
        - call.member_added
        - call.member_removed
        - call.member_updated
      operationId: UpdateCallMembers
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCallMembersRequest'
        description: UpdateCallMembersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCallMembersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update Call Member
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/mute_users:
    post:
      description: |
        Mutes users in a call
      operationId: MuteUsers
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteUsersRequest'
        description: MuteUsersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteUsersResponse'
          description: MuteUsersResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute users
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/pin:
    post:
      description: |
        Pins a track for all users in the call.
      operationId: VideoPin
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
        description: PinRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Pin
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/recordings:
    get:
      description: |
        Lists recordings
      operationId: ListRecordings
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordingsResponse'
          description: ListRecordingsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List recordings
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/rtmp_broadcasts:
    post:
      description: |
        Starts RTMP broadcasts for the provided RTMP destinations
      operationId: StartRTMPBroadcasts
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRTMPBroadcastsRequest'
        description: StartRTMPBroadcastsRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRTMPBroadcastsResponse'
          description: StartRTMPBroadcastsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start RTMP broadcasts
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/rtmp_broadcasts/{name}/stop:
    post:
      description: |
        Stop RTMP broadcasts for the provided RTMP destinations
      operationId: StopRTMPBroadcast
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRTMPBroadcastsRequest'
        description: StopRTMPBroadcastsRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRTMPBroadcastsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop RTMP broadcasts
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/rtmp_broadcasts/stop:
    post:
      description: |
        Stop all RTMP broadcasts for the provided call
      operationId: StopAllRTMPBroadcasts
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAllRTMPBroadcastsResponse'
          description: StopAllRTMPBroadcastsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop all RTMP broadcasts for a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_broadcasting:
    post:
      description: |
        Starts HLS broadcasting
      operationId: StartHLSBroadcasting
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartHLSBroadcastingResponse'
          description: StartHLSBroadcastingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start HLS broadcasting
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_closed_captions:
    post:
      description: |
        Starts closed captions
      operationId: StartClosedCaptions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartClosedCaptionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartClosedCaptionsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start closed captions
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_recording:
    post:
      description: |
        Starts recording

        Sends events:
        - call.recording_started
      operationId: StartRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRecordingRequest'
        description: StartRecordingRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRecordingResponse'
          description: StartRecordingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_transcription:
    post:
      description: |
        Starts transcription
      operationId: StartTranscription
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTranscriptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTranscriptionResponse'
          description: StartTranscriptionResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start transcription
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stats/{session}:
    get:
      description: |2+

      operationId: GetCallStats
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Call Stats
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_broadcasting:
    post:
      description: |
        Stops HLS broadcasting
      operationId: StopHLSBroadcasting
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopHLSBroadcastingResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop HLS broadcasting
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_closed_captions:
    post:
      description: |
        Stops closed captions

        Sends events:
        - call.transcription_stopped
      operationId: StopClosedCaptions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopClosedCaptionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopClosedCaptionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop closed captions
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_live:
    post:
      description: |2


        Sends events:
        - call.updated
      operationId: StopLive
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopLiveRequest'
        description: StopLiveRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopLiveResponse'
          description: StopLiveResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Set call as not live
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_recording:
    post:
      description: |
        Stops recording

        Sends events:
        - call.recording_stopped
      operationId: StopRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRecordingResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_transcription:
    post:
      description: |
        Stops transcription

        Sends events:
        - call.transcription_stopped
      operationId: StopTranscription
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTranscriptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTranscriptionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop transcription
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/transcriptions:
    get:
      description: |
        Lists transcriptions
      operationId: ListTranscriptions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTranscriptionsResponse'
          description: ListTranscriptionsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List transcriptions
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/unblock:
    post:
      description: |
        Removes the block for a user on a call. The user will be able to join the call again.

        Sends events:
        - call.unblocked_user
      operationId: UnblockUser
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockUserRequest'
        description: UnblockUserRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockUserResponse'
          description: UnblockUserResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unblocks user on a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/unpin:
    post:
      description: |
        Unpins a track for all users in the call.
      operationId: VideoUnpin
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnpinRequest'
        description: UnpinRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpinResponse'
          description: UnpinResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unpin
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/user_permissions:
    post:
      description: |
        Updates user permissions

        Sends events:
        - call.permissions_updated
      operationId: UpdateUserPermissions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "005.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "005.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPermissionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserPermissionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update user permissions
      tags:
      - product:video
  /api/v2/video/call/members:
    post:
      description: |
        Query call members with filter query
      operationId: QueryCallMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallMembersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallMembersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call members
      tags:
      - product:video
  /api/v2/video/call/stats:
    post:
      description: |2+

      operationId: QueryCallStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallStatsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Call Stats
      tags:
      - product:video
  /api/v2/video/calls:
    post:
      description: |
        Query calls with filter query
      operationId: QueryCalls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallsRequest'
        description: QueryCallsRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallsResponse'
          description: QueryCallsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call
      tags:
      - product:video
  /api/v2/video/calltypes:
    get:
      description: |2+

      operationId: ListCallTypes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCallTypeResponse'
          description: ListCallTypeResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List Call Type
      tags:
      - product:video
    post:
      description: |2+

      operationId: CreateCallType
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCallTypeRequest'
        description: CreateCallTypeRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCallTypeResponse'
          description: CreateCallTypeResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create Call Type
      tags:
      - product:video
  /api/v2/video/calltypes/{name}:
    delete:
      description: |2+

      operationId: DeleteCallType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete Call Type
      tags:
      - product:video
    get:
      description: |2+

      operationId: GetCallType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallTypeResponse'
          description: GetCallTypeResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Call Type
      tags:
      - product:video
    put:
      description: |2+

      operationId: UpdateCallType
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCallTypeRequest'
        description: UpdateCallTypeRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCallTypeResponse'
          description: UpdateCallTypeResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update Call Type
      tags:
      - product:video
  /api/v2/video/edges:
    get:
      description: |
        Returns the list of all edges available for video calls.
      operationId: GetEdges
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEdgesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Edges
      tags:
      - product:video
  /api/v2/video/stats:
    post:
      description: |2+

      operationId: QueryAggregateCallStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAggregateCallStatsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAggregateCallStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Aggregate call Stats
      tags:
      - product:video
security:
- JWT: []
  api_key: []
  stream-auth-type: []
- api_key: []
  stream-auth-type: []
servers:
- description: Stream API
  url: https://chat.stream-io-api.com
