components:
  schemas:
    APIError:
      nullable: true
      properties:
        StatusCode:
          description: Response HTTP status code
          format: int32
          title: Status code
          type: integer
          x-stream-index: "004"
        code:
          description: API error code
          format: int32
          title: Code
          type: integer
          x-stream-index: "001"
        details:
          description: Additional error-specific information
          items:
            type: integer
          title: Details
          type: array
          x-stream-index: "007"
        duration:
          description: Request duration
          title: Duration
          type: string
          x-stream-index: "005"
        exception_fields:
          additionalProperties:
            type: string
          description: Additional error info
          title: Exception fields
          type: object
          x-stream-index: "003"
        message:
          description: Message describing an error
          title: Message
          type: string
          x-stream-index: "002"
        more_info:
          description: URL with additional information
          title: More info
          type: string
          x-stream-index: "006"
        unrecoverable:
          description: Flag that indicates if the error is unrecoverable, requests
            that return unrecoverable errors should not be retried, this error only
            applies to the request that caused it
          title: Unrecoverable
          type: boolean
          x-stream-index: "008"
      required:
      - code
      - message
      - StatusCode
      - duration
      - more_info
      - details
      title: Error response
      type: object
    Action:
      nullable: true
      properties:
        name:
          type: string
          x-stream-index: "001"
        style:
          type: string
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "004"
        value:
          type: string
          x-stream-index: "005"
      required:
      - name
      - text
      - type
      type: object
    ActionLog:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "002"
        reason:
          type: string
          x-stream-index: "008"
        reporter_type:
          type: string
          x-stream-index: "009"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "014"
        review_queue_item_id:
          type: string
          x-stream-index: "012"
        target_user:
          $ref: '#/components/schemas/User'
          x-stream-index: "013"
        target_user_id:
          type: string
          x-stream-index: "011"
        type:
          type: string
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007"
      required:
      - id
      - created_at
      - type
      - reason
      - reporter_type
      - custom
      - target_user_id
      - review_queue_item_id
      type: object
    AgoraCall:
      properties:
        channel:
          type: string
          x-stream-index: "001"
      required:
      - channel
      type: object
    AnyEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: '*'
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: AnyEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AppResponseFields:
      properties:
        async_url_enrich_enabled:
          type: boolean
          x-stream-index: "017"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "020"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "030"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "031"
        moderation_enabled:
          type: boolean
          x-stream-index: "043"
        name:
          type: string
          x-stream-index: "001"
        video_provider:
          type: string
          x-stream-index: "038"
      required:
      - name
      - organization
      - push_notifications
      - webhook_url
      - moderation_webhook_url
      - channel_configs
      - call_types
      - policies
      - suspended
      - suspended_explanation
      - disable_auth_checks
      - disable_permissions_checks
      - permission_version
      - user_search_disallowed_roles
      - multi_tenant_enabled
      - image_moderation_enabled
      - async_url_enrich_enabled
      - auto_translation_enabled
      - custom_action_handler_url
      - enforce_unique_usernames
      - sqs_url
      - sqs_key
      - sqs_secret
      - sns_topic_arn
      - sns_key
      - sns_secret
      - file_upload_config
      - image_upload_config
      - grants
      - campaign_enabled
      - webhook_events
      - reminders_interval
      - cdn_expiration_seconds
      - video_provider
      - moderation_enabled
      type: object
    Attachment:
      description: An attachment is a message object that represents a file uploaded
        by a user.
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "015"
        asset_url:
          type: string
          x-stream-index: "017"
        author_icon:
          type: string
          x-stream-index: "007"
        author_link:
          type: string
          x-stream-index: "006"
        author_name:
          type: string
          x-stream-index: "005"
        color:
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "021"
        fallback:
          type: string
          x-stream-index: "002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "016"
        footer:
          type: string
          x-stream-index: "013"
        footer_icon:
          type: string
          x-stream-index: "014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "022"
        image_url:
          type: string
          x-stream-index: "011"
        latitude:
          format: float
          type: number
          x-stream-index: "018"
        longitude:
          format: float
          type: number
          x-stream-index: "019"
        og_scrape_url:
          type: string
          x-stream-index: "023"
        original_height:
          format: int32
          type: integer
          x-stream-index: "025"
        original_width:
          format: int32
          type: integer
          x-stream-index: "024"
        pretext:
          type: string
          x-stream-index: "004"
        stopped_sharing:
          type: boolean
          x-stream-index: "020"
        text:
          type: string
          x-stream-index: "010"
        thumb_url:
          type: string
          x-stream-index: "012"
        title:
          type: string
          x-stream-index: "008"
        title_link:
          type: string
          x-stream-index: "009"
        type:
          description: Attachment type (e.g. image, video, url)
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - custom
      title: Attachment
      type: object
      x-stream-docs-page-id: file_uploads
    AutomodDetails:
      properties:
        action:
          type: string
          x-stream-index: "001"
        image_labels:
          items:
            type: string
          type: array
          x-stream-index: "005"
        message_details:
          $ref: '#/components/schemas/FlagMessageDetails'
          x-stream-index: "004"
        original_message_type:
          type: string
          x-stream-index: "002"
        result:
          $ref: '#/components/schemas/MessageModerationResult'
          x-stream-index: "003"
      type: object
    Ban:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "004"
        created_at:
          format: date-time
          type: string
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "011"
        expires:
          format: date-time
          type: string
          x-stream-index: "007"
        reason:
          type: string
          x-stream-index: "008"
        shadow:
          type: boolean
          x-stream-index: "009"
        target:
          $ref: '#/components/schemas/User'
          x-stream-index: "006"
      required:
      - shadow
      - created_at
      type: object
    BanRequest:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserRequest'
          description: User who issued a ban
          title: Banned by
          x-stream-index: "010"
        banned_by_id:
          description: User ID who issued a ban
          title: Banned by ID
          type: string
          x-stream-index: "009"
        channel_cid:
          description: Channel CID to ban user in eg. messaging:123
          title: Channel CID
          type: string
          x-stream-index: "006"
        ip_ban:
          description: Whether to perform IP ban or not
          title: IP ban
          type: boolean
          x-stream-index: "008"
        reason:
          description: Ban reason
          title: Reason
          type: string
          x-stream-index: "003"
        shadow:
          description: Whether to perform shadow ban or not
          title: Shadow
          type: boolean
          x-stream-index: "007"
        target_user_id:
          description: ID of user to ban
          title: Target user ID
          type: string
          x-stream-index: "001"
        timeout:
          description: Timeout of ban in minutes. User will be unbanned after this
            period of time
          title: Timeout
          type: integer
          x-stream-index: "002"
      required:
      - target_user_id
      type: object
    BanResponse:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "006"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "007"
        expires:
          format: date-time
          type: string
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
      required:
      - created_at
      type: object
    BlockListOptions:
      properties:
        behavior:
          description: Blocklist behavior
          enum:
          - flag
          - block
          - shadow_block
          title: Behavior
          type: string
          x-stream-index: "002"
        blocklist:
          description: Blocklist name
          title: Blocklist
          type: string
          x-stream-index: "001"
      required:
      - blocklist
      - behavior
      type: object
    BlockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          description: User id to block
          title: BlockedUserID
          type: string
          x-stream-index: "001"
      required:
      - blocked_user_id
      type: object
    BlockUsersResponse:
      nullable: true
      properties:
        blocked_by_user_id:
          description: User id who blocked another user
          title: BlockedByUserID
          type: string
          x-stream-index: "002"
        blocked_user_id:
          description: User id who got blocked
          title: BlockedUserID
          type: string
          x-stream-index: "003"
        created_at:
          description: Timestamp when the user was blocked
          format: date-time
          title: CreatedAt
          type: string
          x-stream-index: "004"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      - blocked_by_user_id
      - blocked_user_id
      - created_at
      type: object
    BlockedUserResponse:
      nullable: true
      properties:
        blocked_user:
          $ref: '#/components/schemas/UserResponse'
          description: User who got blocked
          title: User
          x-stream-index: "003"
        blocked_user_id:
          description: ID of the user who got blocked
          title: UserID
          type: string
          x-stream-index: "004"
        created_at:
          format: date-time
          type: string
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who blocked another user
          title: User
          x-stream-index: "001"
        user_id:
          description: ID of the user who blocked another user
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_id
      - blocked_user
      - blocked_user_id
      - created_at
      type: object
    Call:
      properties:
        agora:
          $ref: '#/components/schemas/AgoraCall'
          x-stream-index: "005"
        hms:
          $ref: '#/components/schemas/HMSCall'
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "002"
        provider:
          type: string
          x-stream-index: "001"
        type:
          type: string
          x-stream-index: "003"
      required:
      - provider
      - id
      - type
      type: object
    CampaignChannelTemplate:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "002"
        members:
          items:
            type: string
          maximum: 1000
          type: array
          x-stream-index: "003"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001"
      required:
      - type
      - custom
      type: object
    CampaignCompletedEvent:
      nullable: true
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: string
          x-stream-index: "002.004"
        type:
          default: campaign.completed
          type: string
          x-stream-index: "002.002"
      required:
      - type
      - created_at
      type: object
    CampaignMessageTemplate:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          maximum: 30
          type: array
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        poll_id:
          type: string
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "001"
      required:
      - text
      - attachments
      - poll_id
      - custom
      type: object
    CampaignResponse:
      properties:
        channel_template:
          $ref: '#/components/schemas/CampaignChannelTemplate'
          x-stream-index: "014"
        create_channels:
          type: boolean
          x-stream-index: "007"
        created_at:
          format: date-time
          type: string
          x-stream-index: "018"
        description:
          type: string
          x-stream-index: "008"
        id:
          type: string
          x-stream-index: "001"
        message_template:
          $ref: '#/components/schemas/CampaignMessageTemplate'
          x-stream-index: "013"
        name:
          type: string
          x-stream-index: "006"
        scheduled_for:
          format: date-time
          type: string
          x-stream-index: "011"
        segment_ids:
          items:
            type: string
          type: array
          x-stream-index: "002"
        segments:
          items:
            $ref: '#/components/schemas/Segment'
          type: array
          x-stream-index: "003"
        sender:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "005"
        sender_id:
          type: string
          x-stream-index: "004"
        skip_push:
          type: boolean
          x-stream-index: "009"
        skip_webhook:
          type: boolean
          x-stream-index: "010"
        stats:
          $ref: '#/components/schemas/CampaignStatsResponse'
          x-stream-index: "020"
        status:
          type: string
          x-stream-index: "017"
        stop_at:
          format: date-time
          type: string
          x-stream-index: "012"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "019"
        user_ids:
          items:
            type: string
          type: array
          x-stream-index: "015"
        users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "016"
      required:
      - id
      - segment_ids
      - segments
      - sender_id
      - name
      - create_channels
      - description
      - skip_push
      - skip_webhook
      - user_ids
      - users
      - status
      - created_at
      - updated_at
      - stats
      type: object
    CampaignStartedEvent:
      nullable: true
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: string
          x-stream-index: "002.004"
        type:
          default: campaign.started
          type: string
          x-stream-index: "002.002"
      required:
      - type
      - created_at
      type: object
    CampaignStatsResponse:
      properties:
        progress:
          format: float
          type: number
          x-stream-index: "005"
        stats_channels_created:
          format: int32
          type: integer
          x-stream-index: "004"
        stats_completed_at:
          format: date-time
          type: string
          x-stream-index: "002"
        stats_messages_sent:
          format: int32
          type: integer
          x-stream-index: "003"
        stats_started_at:
          format: date-time
          type: string
          x-stream-index: "001"
      required:
      - stats_started_at
      - stats_completed_at
      - stats_messages_sent
      - stats_channels_created
      - progress
      type: object
    CastPollVoteRequest:
      nullable: true
      properties:
        vote:
          $ref: '#/components/schemas/VoteData'
          description: Vote data
          title: VoteData
          x-stream-index: "003"
      type: object
    Channel:
      properties:
        auto_translation_enabled:
          type: boolean
          x-stream-index: "028"
        auto_translation_language:
          type: string
          x-stream-index: "029"
        cid:
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "025"
        config_overrides:
          $ref: '#/components/schemas/ConfigOverrides'
          x-stream-index: "026"
        cooldown:
          format: int32
          type: integer
          x-stream-index: "030"
        created_at:
          format: date-time
          type: string
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "018"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "011"
        disabled:
          type: boolean
          x-stream-index: "017"
        frozen:
          type: boolean
          x-stream-index: "016"
        id:
          type: string
          x-stream-index: "004"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "021"
        last_message_at:
          format: date-time
          type: string
          x-stream-index: "006"
        member_count:
          format: int32
          type: integer
          x-stream-index: "020"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "019"
        team:
          type: string
          x-stream-index: "027"
        truncated_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "015"
        type:
          type: string
          x-stream-index: "005"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "010"
      required:
      - cid
      - id
      - type
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      - auto_translation_language
      type: object
    ChannelConfig:
      description: Channel configuration overrides
      properties:
        blocklist:
          type: string
          x-stream-index: "008"
        blocklist_behavior:
          enum:
          - flag
          - block
          type: string
          x-stream-index: "009"
        commands:
          description: List of commands that channel supports
          items:
            type: string
          title: Commands
          type: array
          x-stream-index: "011"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          title: Grants
          type: object
          x-stream-index: "010"
          x-stream-map:
            description: List of grants modifiers that apply to a role
            key: role
            title: Grants
        max_message_length:
          description: Overrides max message length
          format: int32
          maximum: 20000
          title: Max Message Length
          type: integer
          x-stream-index: "007"
        quotes:
          description: Enables message quotes
          title: Quotes
          type: boolean
          x-stream-index: "004"
        reactions:
          description: Enables or disables reactions
          title: Reactions
          type: boolean
          x-stream-index: "002"
        replies:
          description: Enables message replies (threads)
          title: Replies
          type: boolean
          x-stream-index: "003"
        typing_events:
          description: Enables or disables typing events
          title: Typing events
          type: boolean
          x-stream-index: "001"
        uploads:
          description: Enables or disables file uploads
          title: Uploads
          type: boolean
          x-stream-index: "005"
        url_enrichment:
          description: Enables or disables URL enrichment
          title: URL Enrichment
          type: boolean
          x-stream-index: "006"
      type: object
    ChannelConfigWithInfo:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 001.002.024
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 001.002.019
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.020
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 001.002.025
        blocklist:
          type: string
          x-stream-index: 001.002.021
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.022
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 001.002.023
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
          x-stream-index: "001.003"
        connect_events:
          type: boolean
          x-stream-index: 001.002.004
        created_at:
          format: date-time
          type: string
          x-stream-index: 001.001.003
        custom_events:
          type: boolean
          x-stream-index: 001.002.012
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 001.002.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 001.002.018
        mutes:
          type: boolean
          x-stream-index: 001.002.009
        name:
          type: string
          x-stream-index: 001.002.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 001.002.026
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 001.002.027
        polls:
          type: boolean
          x-stream-index: 001.002.016
        push_notifications:
          type: boolean
          x-stream-index: 001.002.013
        quotes:
          type: boolean
          x-stream-index: 001.002.008
        reactions:
          type: boolean
          x-stream-index: 001.002.006
        read_events:
          type: boolean
          x-stream-index: 001.002.003
        reminders:
          type: boolean
          x-stream-index: 001.002.014
        replies:
          type: boolean
          x-stream-index: 001.002.007
        search:
          type: boolean
          x-stream-index: 001.002.005
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 001.002.028
        typing_events:
          type: boolean
          x-stream-index: 001.002.002
        updated_at:
          format: date-time
          type: string
          x-stream-index: 001.001.004
        uploads:
          type: boolean
          x-stream-index: 001.002.010
        url_enrichment:
          type: boolean
          x-stream-index: 001.002.011
      required:
      - created_at
      - updated_at
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - commands
      type: object
    ChannelCreatedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: channel.created
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelDeletedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        team:
          type: string
          x-stream-index: "001.001"
        type:
          default: channel.deleted
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelFrozenEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: channel.frozen
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: ChannelFrozenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelGetOrCreateRequest:
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/ChannelInput'
          x-stream-index: "003"
        hide_for_creator:
          description: Whether this channel will be hidden for the user who created
            the channel or not
          title: Hide for creator
          type: boolean
          x-stream-index: "007"
        members:
          $ref: '#/components/schemas/PaginationParams'
          x-stream-index: "010"
        messages:
          $ref: '#/components/schemas/MessagePaginationParams'
          x-stream-index: "009"
        presence:
          description: Fetch user presence info
          title: Presence
          type: boolean
          x-stream-index: "006"
        state:
          description: Refresh channel state
          title: State
          type: boolean
          x-stream-index: "005"
        thread_unread_counts:
          type: boolean
          x-stream-index: "008"
        watch:
          description: Start watching the channel
          title: Watch
          type: boolean
          x-stream-index: "004"
        watchers:
          $ref: '#/components/schemas/PaginationParams'
          x-stream-index: "011"
      type: object
    ChannelHiddenEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        clear_history:
          type: boolean
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        type:
          default: channel.hidden
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - clear_history
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - type
      - created_at
      title: ChannelHiddenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelInput:
      properties:
        auto_translation_enabled:
          description: Enable or disable auto translation
          title: Auto translation
          type: boolean
          x-stream-index: "005"
        auto_translation_language:
          description: Switch auto translation language
          title: Auto translation language
          type: string
          x-stream-index: "006"
        config_overrides:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "024"
        created_by:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "009"
        created_by_id:
          type: string
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "015"
        disabled:
          type: boolean
          x-stream-index: "014"
        frozen:
          description: Freeze or unfreeze the channel
          title: Frozen
          type: boolean
          x-stream-index: "013"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "016"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "018"
        team:
          description: Team the channel belongs to (if multi-tenant mode is enabled)
          title: Team
          type: string
          x-stream-index: "004"
        truncated_by_id:
          type: string
          x-stream-index: "010"
      type: object
    ChannelKickedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: channel.kicked
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelKickedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelMember:
      nullable: true
      properties:
        archived_at:
          format: date-time
          type: string
          x-stream-index: "015"
        ban_expires:
          description: Expiration date of the ban
          format: date-time
          title: Ban expires
          type: string
          x-stream-index: "013"
        banned:
          description: Whether member is banned this channel or not
          title: Banned
          type: boolean
          x-stream-index: "012"
        channel_role:
          description: Role of the member in the channel
          title: Channel Role
          type: string
          x-stream-index: "018"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "011"
        invite_accepted_at:
          description: Date when invite was accepted
          format: date-time
          title: Invited accepted at
          type: string
          x-stream-index: "006"
        invite_rejected_at:
          description: Date when invite was rejected
          format: date-time
          title: Invited rejected at
          type: string
          x-stream-index: "007"
        invited:
          description: Whether member was invited or not
          title: Invited
          type: boolean
          x-stream-index: "005"
        is_moderator:
          description: Whether member is channel moderator or not
          title: Is moderator
          type: boolean
          x-stream-index: "003"
        notifications_muted:
          type: boolean
          x-stream-index: "019"
        pinned_at:
          format: date-time
          type: string
          x-stream-index: "016"
        role:
          description: 'Permission level of the member in the channel (DEPRECATED:
            use channel_role instead)'
          enum:
          - member
          - moderator
          - admin
          - owner
          title: Role
          type: string
          x-stream-index: "017"
        shadow_banned:
          description: Whether member is shadow banned in this channel or not
          title: Shadow banned
          type: boolean
          x-stream-index: "014"
        status:
          type: string
          x-stream-index: "008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        user_id:
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - custom
      - created_at
      - updated_at
      - banned
      - shadow_banned
      - channel_role
      - notifications_muted
      title: Channel member
      type: object
    ChannelMemberResponse:
      properties:
        archived_at:
          format: date-time
          type: string
          x-stream-index: "016"
        ban_expires:
          description: Expiration date of the ban
          format: date-time
          title: Ban expires
          type: string
          x-stream-index: "013"
        banned:
          description: Whether member is banned this channel or not
          title: Banned
          type: boolean
          x-stream-index: "012"
        channel_role:
          description: Role of the member in the channel
          title: Channel Role
          type: string
          x-stream-index: "018"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "011"
        invite_accepted_at:
          description: Date when invite was accepted
          format: date-time
          title: Invited accepted at
          type: string
          x-stream-index: "006"
        invite_rejected_at:
          description: Date when invite was rejected
          format: date-time
          title: Invited rejected at
          type: string
          x-stream-index: "007"
        invited:
          description: Whether member was invited or not
          title: Invited
          type: boolean
          x-stream-index: "005"
        is_moderator:
          description: Whether member is channel moderator or not
          title: Is moderator
          type: boolean
          x-stream-index: "003"
        notifications_muted:
          type: boolean
          x-stream-index: "019"
        pinned_at:
          format: date-time
          type: string
          x-stream-index: "015"
        role:
          description: 'Permission level of the member in the channel (DEPRECATED:
            use channel_role instead)'
          enum:
          - member
          - moderator
          - admin
          - owner
          title: Role
          type: string
          x-stream-index: "017"
        shadow_banned:
          description: Whether member is shadow banned in this channel or not
          title: Shadow banned
          type: boolean
          x-stream-index: "014"
        status:
          type: string
          x-stream-index: "008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        user_id:
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - custom
      - created_at
      - updated_at
      - banned
      - shadow_banned
      - channel_role
      - notifications_muted
      title: Channel member
      type: object
    ChannelMessages:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        messages:
          items:
            $ref: '#/components/schemas/Message'
          type: array
          x-stream-index: "002"
      required:
      - messages
      type: object
    ChannelMute:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "004"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: string
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Owner of channel mute
          title: User
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    ChannelMutedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: channel.muted
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelMutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelOwnCapability:
      description: All possibility of string to use
      enum:
      - ban-channel-members
      - cast-poll-vote
      - connect-events
      - create-attachment
      - create-call
      - delete-any-message
      - delete-channel
      - delete-own-message
      - flag-message
      - freeze-channel
      - join-call
      - join-channel
      - leave-channel
      - mute-channel
      - pin-message
      - query-poll-votes
      - quote-message
      - read-events
      - search-messages
      - send-custom-events
      - send-links
      - send-message
      - send-poll
      - send-reaction
      - send-reply
      - send-typing-events
      - set-channel-cooldown
      - skip-slow-mode
      - slow-mode
      - typing-events
      - update-any-message
      - update-channel
      - update-channel-members
      - update-own-message
      - update-thread
      - upload-file
      title: ChannelOwnCapability
      type: string
    ChannelResponse:
      description: Represents channel in chat
      properties:
        auto_translation_enabled:
          description: Whether auto translation is enabled or not
          title: Auto translation
          type: boolean
          x-stream-index: "017"
        auto_translation_language:
          description: Language to translate to when auto translation is active
          title: Auto translation language
          type: string
          x-stream-index: "018"
        blocked:
          description: Whether this channel is blocked by current user or not
          title: Blocked
          type: boolean
          x-stream-index: "023"
        cid:
          description: Channel CID (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfigWithInfo'
          description: Channel configuration
          title: ChannelConfigWithInfo
          x-stream-index: "013"
        cooldown:
          description: Cooldown period after sending each message
          format: int32
          title: Cooldown
          type: integer
          x-stream-index: "020"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "005"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Creator of the channel
          title: UserResponse
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "026"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: string
          x-stream-index: "007"
        disabled:
          type: boolean
          x-stream-index: "010"
        frozen:
          description: Whether channel is frozen or not
          title: Frozen
          type: boolean
          x-stream-index: "009"
        hidden:
          description: Whether this channel is hidden by current user or not
          title: Hidden
          type: boolean
          x-stream-index: "022"
        hide_messages_before:
          description: Date since when the message history is accessible
          format: date-time
          title: Hide messages before
          type: string
          x-stream-index: "019"
        id:
          description: Channel unique ID
          title: ID
          type: string
          x-stream-index: "001"
        last_message_at:
          description: Date of the last message sent
          format: date-time
          title: Last message at
          type: string
          x-stream-index: "004"
        member_count:
          description: Number of members in the channel
          format: int32
          title: Member count
          type: integer
          x-stream-index: "012"
        members:
          description: List of channel members (max 100)
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: ChannelMembers
          type: array
          x-stream-index: "011"
        mute_expires_at:
          description: Date of mute expiration
          format: date-time
          title: Mute expires at
          type: string
          x-stream-index: "015"
        muted:
          description: Whether this channel is muted or not
          title: Muted
          type: boolean
          x-stream-index: "014"
        own_capabilities:
          description: List of channel capabilities of authenticated user
          items:
            $ref: '#/components/schemas/ChannelOwnCapability'
          title: ChannelOwnCapability
          type: array
          x-stream-index: "021"
        team:
          description: Team the channel belongs to (multi-tenant only)
          title: Team
          type: string
          x-stream-index: "016"
        truncated_at:
          description: Date of the latest truncation of the channel
          format: date-time
          title: UserResponse
          type: string
          x-stream-index: "024"
        truncated_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "025"
        type:
          description: Type of the channel
          title: Type
          type: string
          x-stream-docs-page-id: channel_features
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "006"
      required:
      - id
      - type
      - cid
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      title: Channel
      type: object
    ChannelStateResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "002.001"
        hidden:
          type: boolean
          x-stream-index: "001.010"
        hide_messages_before:
          format: date-time
          type: string
          x-stream-index: "001.011"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "001.007"
        membership:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.008"
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001.002"
        pending_messages:
          items:
            $ref: '#/components/schemas/PendingMessageResponse'
          type: array
          x-stream-index: "001.012"
        pinned_messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001.003"
        read:
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          type: array
          x-stream-index: "001.006"
        threads:
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          type: array
          x-stream-index: "001.009"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.004"
        watchers:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.005"
      required:
      - messages
      - pinned_messages
      - members
      - threads
      - duration
      type: object
    ChannelStateResponseFields:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        hidden:
          description: Whether this channel is hidden or not
          title: Hidden
          type: boolean
          x-stream-index: "010"
        hide_messages_before:
          description: Messages before this date are hidden from the user
          format: date-time
          title: Hide messages before
          type: string
          x-stream-index: "011"
        members:
          description: List of channel members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "007"
        membership:
          $ref: '#/components/schemas/ChannelMember'
          description: Current user membership object
          title: Membership
          x-stream-index: "008"
        messages:
          description: List of channel messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Message
          type: array
          x-stream-index: "002"
        pending_messages:
          description: Pending messages that this user has sent
          items:
            $ref: '#/components/schemas/PendingMessageResponse'
          title: Pending messages
          type: array
          x-stream-index: "012"
        pinned_messages:
          description: List of pinned messages in the channel
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Pinned messages
          type: array
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "003"
        read:
          description: List of read states
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          title: Read
          type: array
          x-stream-index: "006"
        threads:
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          type: array
          x-stream-index: "009"
        watcher_count:
          description: Number of channel watchers
          format: int32
          title: Watcher count
          type: integer
          x-stream-index: "004"
        watchers:
          description: List of user who is watching the channel
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Watchers
          type: array
          x-stream-index: "005"
      required:
      - messages
      - pinned_messages
      - members
      - threads
      type: object
    ChannelStopWatchingRequest:
      nullable: true
      type: object
    ChannelTruncatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.004"
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "001.005"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        type:
          default: channel.truncated
          type: string
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - type
      - created_at
      title: ChannelTruncatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUnFrozenEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: channel.unfrozen
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: ChannelUnFrozenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUnmutedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: channel.unmuted
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelUnmutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUpdatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "004.004"
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "004.005"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: channel.updated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelVisibleEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        type:
          default: channel.visible
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ChannelVisibleEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    Command:
      description: Represents custom chat command
      nullable: true
      properties:
        args:
          description: Arguments help text, shown in commands auto-completion
          title: Arguments
          type: string
          x-stream-index: "006"
        created_at:
          description: Date/time of creation
          format: date-time
          readOnly: true
          title: Created at
          type: string
          x-stream-index: "001"
        description:
          description: Description, shown in commands auto-completion
          title: Description
          type: string
          x-stream-index: "005"
        name:
          description: Unique command name
          title: Name
          type: string
          x-stream-index: "004"
        set:
          description: Set name used for grouping commands
          title: Set
          type: string
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          readOnly: true
          title: Updated at
          type: string
          x-stream-index: "002"
      required:
      - name
      - description
      - args
      - set
      title: Command
      type: object
    ConfigOverrides:
      properties:
        blocklist:
          type: string
          x-stream-index: "008"
        blocklist_behavior:
          enum:
          - flag
          - block
          type: string
          x-stream-index: "009"
        commands:
          items:
            type: string
          type: array
          x-stream-index: "011"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "010"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "007"
        quotes:
          type: boolean
          x-stream-index: "004"
        reactions:
          type: boolean
          x-stream-index: "002"
        replies:
          type: boolean
          x-stream-index: "003"
        typing_events:
          type: boolean
          x-stream-index: "001"
        uploads:
          type: boolean
          x-stream-index: "005"
        url_enrichment:
          type: boolean
          x-stream-index: "006"
      required:
      - grants
      - commands
      type: object
    ConnectRequest:
      properties:
        device:
          $ref: '#/components/schemas/DeviceFields'
          x-stream-index: "001.002"
        user_details:
          $ref: '#/components/schemas/User'
          x-stream-index: "001.001"
      required:
      - user_details
      type: object
    CreateCallRequest:
      nullable: true
      properties:
        id:
          type: string
          x-stream-index: "004"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        type:
          enum:
          - audio
          - video
          type: string
          x-stream-index: "003"
      required:
      - type
      - id
      type: object
    CreateCallResponse:
      description: Basic response information
      nullable: true
      properties:
        agora_app_id:
          type: string
          x-stream-index: "002.003"
        agora_uid:
          format: int32
          type: integer
          x-stream-index: "002.002"
        call:
          $ref: '#/components/schemas/Call'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        token:
          type: string
          x-stream-index: "002.001"
      required:
      - token
      - duration
      title: Response
      type: object
    CreateDeviceRequest:
      description: Create device request
      nullable: true
      properties:
        id:
          description: Device ID
          maxLength: 255
          minLength: 1
          title: ID
          type: string
          x-stream-index: "001"
        push_provider:
          description: Push provider
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          title: PushProvider
          type: string
          x-stream-index: "002"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "003"
        voip_token:
          description: When true the token is for Apple VoIP push notifications
          title: VoipToken
          type: boolean
          x-stream-index: "004"
      required:
      - id
      - push_provider
      title: CreateDeviceRequest
      type: object
    CreateGuestRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      type: object
    CreateGuestResponse:
      nullable: true
      properties:
        access_token:
          description: the access token to authenticate the user
          title: Access token
          type: string
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      - access_token
      - duration
      type: object
    CreatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "004"
        position:
          format: int32
          type: integer
          x-stream-index: "003"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "002"
      required:
      - text
      type: object
    CreatePollRequest:
      description: Contains all information needed to create a new poll
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Indicates whether users can suggest user defined answers
          title: Allow answers
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "008"
        description:
          description: A description of the poll
          title: Description
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Indicates whether users can cast multiple votes
          title: Multiple choice
          type: boolean
          x-stream-index: "006"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        is_closed:
          description: Indicates whether the poll is open for voting
          title: Is closed
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Indicates the maximum amount of votes a user can cast
          format: int32
          maximum: 10
          title: Maximum votes allowed
          type: integer
          x-stream-index: "007"
        name:
          description: The name of the poll
          title: Name
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionInput'
          maximum: 100
          type: array
          x-stream-index: "004"
        voting_visibility:
          enum:
          - anonymous
          - public
          type: string
          x-stream-index: "005"
      required:
      - name
      title: Create Poll Request
      type: object
    Data:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    DeleteChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteChannelsRequest:
      nullable: true
      properties:
        cids:
          description: All channels that should be deleted
          items:
            type: string
          maximum: 100
          minimum: 1
          title: Channels CID
          type: array
          x-stream-index: "001"
        hard_delete:
          description: Specify if channels and all ressources should be hard deleted
          title: Hard delete
          type: boolean
          x-stream-index: "002"
      required:
      - cids
      type: object
    DeleteChannelsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        result:
          additionalProperties:
            $ref: '#/components/schemas/DeleteChannelsResultResponse'
          description: Map of channel IDs and their deletion results
          title: Result
          type: object
          x-stream-index: "001"
        task_id:
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    DeleteChannelsResultResponse:
      nullable: true
      properties:
        error:
          type: string
          x-stream-index: "002"
        status:
          type: string
          x-stream-index: "001"
      required:
      - status
      type: object
    DeleteMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
      required:
      - message
      - duration
      title: Response
      type: object
    Device:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        disabled:
          type: boolean
          x-stream-index: "002.003"
        disabled_reason:
          type: string
          x-stream-index: "002.004"
        id:
          type: string
          x-stream-index: 002.001.004
        push_provider:
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          type: string
          x-stream-index: 002.001.001
        push_provider_name:
          type: string
          x-stream-index: 002.001.003
        user_id:
          type: string
          x-stream-index: "004"
        voip:
          type: boolean
          x-stream-index: 002.001.005
      required:
      - push_provider
      - id
      - created_at
      - user_id
      type: object
    DeviceFields:
      properties:
        id:
          type: string
          x-stream-index: "004"
        push_provider:
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          type: string
          x-stream-index: "001"
        push_provider_name:
          type: string
          x-stream-index: "003"
        voip:
          type: boolean
          x-stream-index: "005"
      required:
      - push_provider
      - id
      type: object
    EnrichedActivity:
      properties:
        actor:
          $ref: '#/components/schemas/Data'
          x-stream-index: "002"
        foreign_id:
          type: string
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        latest_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "013"
        object:
          $ref: '#/components/schemas/Data'
          x-stream-index: "004"
        origin:
          $ref: '#/components/schemas/Data'
          x-stream-index: "008"
        own_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "012"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "011"
        score:
          format: float
          type: number
          x-stream-index: "010"
        target:
          $ref: '#/components/schemas/Data'
          x-stream-index: "006"
        time:
          $ref: '#/components/schemas/Time'
          x-stream-index: "007"
        to:
          items:
            type: string
          type: array
          x-stream-index: "009"
        verb:
          type: string
          x-stream-index: "003"
      type: object
    EnrichedReaction:
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "003"
        children_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "010"
        created_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "012"
        data:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        kind:
          type: string
          x-stream-index: "002"
        latest_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "008"
        own_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "009"
        parent:
          type: string
          x-stream-index: "007"
        target_feeds:
          items:
            type: string
          type: array
          x-stream-index: "006"
        updated_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "013"
        user:
          $ref: '#/components/schemas/Data'
          x-stream-index: "011"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - kind
      - activity_id
      - user_id
      type: object
    EntityCreator:
      properties:
        ban_count:
          format: int32
          type: integer
          x-stream-index: "002"
        ban_expires:
          format: date-time
          type: string
          x-stream-index: "001.016"
        banned:
          type: boolean
          x-stream-index: "001.015"
        created_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "001.007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.005"
        deactivated_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "001.013"
        deleted_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "001.012"
        deleted_content_count:
          format: int32
          type: integer
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "001.022"
        language:
          type: string
          x-stream-index: "001.033"
        last_active:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "001.010"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "001.011"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "001.021"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "001.025"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettings'
          x-stream-index: "001.024"
        revoke_tokens_issued_before:
          format: date-time
          type: string
          x-stream-index: "001.040"
        role:
          type: string
          x-stream-index: "001.004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.034"
        updated_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "001.008"
      required:
      - id
      - role
      - custom
      - banned
      - online
      - ban_count
      - deleted_content_count
      type: object
    EventRequest:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    EventResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        event:
          $ref: '#/components/schemas/WSEvent'
          x-stream-index: "001"
      required:
      - event
      - duration
      title: Response
      type: object
    Field:
      nullable: true
      properties:
        short:
          type: boolean
          x-stream-index: "003"
        title:
          type: string
          x-stream-index: "001"
        value:
          type: string
          x-stream-index: "002"
      required:
      - title
      - value
      - short
      type: object
    FileUploadConfig:
      properties:
        allowed_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "001"
        allowed_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "003"
        blocked_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "002"
        blocked_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        size_limit:
          format: int32
          maximum: 104857600
          minimum: 0
          type: integer
          x-stream-index: "005"
      required:
      - allowed_file_extensions
      - blocked_file_extensions
      - allowed_mime_types
      - blocked_mime_types
      - size_limit
      type: object
    FileUploadRequest:
      nullable: true
      properties:
        file:
          description: file field
          title: File
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          description: user for the request **server side only**
          title: User
          x-stream-index: "003"
      type: object
    FileUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        file:
          description: URL to the uploaded asset. Should be used to put to `asset_url`
            attachment field
          title: File
          type: string
          x-stream-index: "001"
        thumb_url:
          description: URL of the file thumbnail for supported file formats. Should
            be put to `thumb_url` attachment field
          title: Thumbnail URL
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    Flag:
      description: Contains information about flagged user or message
      properties:
        approved_at:
          description: Date of the approval
          format: date-time
          title: Approved at
          type: string
          x-stream-index: "015"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "011"
        created_by_automod:
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "022"
        details:
          $ref: '#/components/schemas/FlagDetails'
          x-stream-index: "021"
        reason:
          type: string
          x-stream-index: "020"
        rejected_at:
          description: Date of the rejection
          format: date-time
          title: Rejected at
          type: string
          x-stream-index: "016"
        reviewed_at:
          description: Date of the review
          format: date-time
          title: Reviewed at
          type: string
          x-stream-index: "013"
        reviewed_by:
          type: string
          x-stream-index: "014"
        target_message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "008"
        target_message_id:
          description: ID of flagged message
          title: Target Message ID
          type: string
          x-stream-index: "007"
        target_user:
          $ref: '#/components/schemas/User'
          description: Flagged user
          title: User
          x-stream-index: "010"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "012"
        user:
          $ref: '#/components/schemas/User'
          description: User who flagged a message or a user
          title: User
          x-stream-index: "006"
      required:
      - created_by_automod
      - created_at
      - updated_at
      title: Flag
      type: object
    Flag2:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "017"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "013"
        entity_creator_id:
          type: string
          x-stream-index: "009"
        entity_id:
          type: string
          x-stream-index: "008"
        entity_type:
          type: string
          x-stream-index: "007"
        labels:
          items:
            type: string
          type: array
          x-stream-index: "014"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "010"
        moderation_payload_hash:
          type: string
          x-stream-index: "011"
        reason:
          type: string
          x-stream-index: "012"
        result:
          items:
            additionalProperties: {}
            type: object
          type: array
          x-stream-index: "015"
        review_queue_item_id:
          type: string
          x-stream-index: "016"
        type:
          type: string
          x-stream-index: "004"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "018"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "006"
      required:
      - entity_type
      - entity_id
      - result
      - created_at
      - updated_at
      type: object
    FlagDetails:
      properties:
        Extra:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "002"
        automod:
          $ref: '#/components/schemas/AutomodDetails'
          x-stream-index: "001"
        original_text:
          type: string
          x-stream-index: "003"
      required:
      - Extra
      - original_text
      type: object
    FlagFeedback:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "005"
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
          x-stream-index: "006"
        message_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - created_at
      - labels
      type: object
    FlagMessageDetails:
      properties:
        pin_changed:
          type: boolean
          x-stream-index: "002"
        should_enrich:
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "004"
        updated_by_id:
          type: string
          x-stream-index: "001"
      type: object
    FlagRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        reason:
          maxLength: 255
          type: string
          x-stream-index: "003"
        target_message_id:
          description: ID of the message when reporting a message
          title: Target Message ID
          type: string
          x-stream-index: "001"
        target_user_id:
          description: ID of the user when reporting a user
          title: Target User ID
          type: string
          x-stream-index: "002"
      type: object
    FlagResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        flag:
          $ref: '#/components/schemas/Flag'
          x-stream-index: "001"
        review_queue_item_id:
          type: string
          x-stream-index: "002"
      required:
      - review_queue_item_id
      - duration
      title: Response
      type: object
    FlagUpdatedEvent:
      nullable: true
      properties:
        CreatedBy:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "003"
        Message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        User:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.003"
        received_at:
          format: date-time
          type: string
          x-stream-index: "004.004"
        type:
          default: flag.updated
          type: string
          x-stream-index: "004.002"
      required:
      - type
      - created_at
      type: object
    FullUserResponse:
      properties:
        banned:
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "014"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: string
          x-stream-index: "001.015"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "001.010"
        devices:
          items:
            $ref: '#/components/schemas/Response for Device'
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: string
          x-stream-index: "001.013"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "012"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: string
          x-stream-index: "001.014"
        role:
          type: string
          x-stream-index: "001.006"
        shadow_banned:
          type: boolean
          x-stream-index: "013"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      - shadow_banned
      - blocked_user_ids
      type: object
    GetApplicationResponse:
      description: Basic response information
      nullable: true
      properties:
        app:
          $ref: '#/components/schemas/AppResponseFields'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - app
      - duration
      title: Response
      type: object
    GetBlockedUsersResponse:
      nullable: true
      properties:
        blocks:
          description: Array of blocked user object
          items:
            $ref: '#/components/schemas/BlockedUserResponse'
          title: Blocks
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocks
      - duration
      type: object
    GetCallTokenRequest:
      nullable: true
      type: object
    GetCallTokenResponse:
      description: Basic response information
      nullable: true
      properties:
        agora_app_id:
          type: string
          x-stream-index: "001.003"
        agora_uid:
          format: int32
          type: integer
          x-stream-index: "001.002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        token:
          type: string
          x-stream-index: "001.001"
      required:
      - token
      - duration
      title: Response
      type: object
    GetManyMessagesResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: 001.002.001
        messages:
          description: List of messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Messages
          type: array
          x-stream-index: "001.001"
      required:
      - messages
      - duration
      type: object
    GetMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageWithChannelResponse'
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      title: Response
      type: object
    GetOGResponse:
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "001.015"
        asset_url:
          description: URL of detected video or audio
          title: Image URL
          type: string
          x-stream-index: "001.017"
        author_icon:
          type: string
          x-stream-index: "001.007"
        author_link:
          description: og:site
          title: Author Link
          type: string
          x-stream-index: "001.006"
        author_name:
          description: og:site_name
          title: Author Name
          type: string
          x-stream-index: "001.005"
        color:
          type: string
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.021"
        duration:
          type: string
          x-stream-index: "002.001"
        fallback:
          type: string
          x-stream-index: "001.002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "001.016"
        footer:
          type: string
          x-stream-index: "001.013"
        footer_icon:
          type: string
          x-stream-index: "001.014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "001.022"
        image_url:
          description: URL of detected image
          title: Image URL
          type: string
          x-stream-index: "001.011"
        latitude:
          format: float
          type: number
          x-stream-index: "001.018"
        longitude:
          format: float
          type: number
          x-stream-index: "001.019"
        og_scrape_url:
          description: extracted url from the text
          title: OG Scrape URL
          type: string
          x-stream-index: "001.023"
        original_height:
          format: int32
          type: integer
          x-stream-index: "001.025"
        original_width:
          format: int32
          type: integer
          x-stream-index: "001.024"
        pretext:
          type: string
          x-stream-index: "001.004"
        stopped_sharing:
          type: boolean
          x-stream-index: "001.020"
        text:
          description: og:description
          title: Text
          type: string
          x-stream-index: "001.010"
        thumb_url:
          description: URL of detected thumb image
          title: Image URL
          type: string
          x-stream-index: "001.012"
        title:
          description: og:title
          title: Title
          type: string
          x-stream-index: "001.008"
        title_link:
          description: og:url
          title: Title Link
          type: string
          x-stream-index: "001.009"
        type:
          description: Attachment type, could be empty, image, audio or video
          title: Type
          type: string
          x-stream-index: "001.001"
      required:
      - custom
      - duration
      title: Get OG Attachment
      type: object
      x-stream-docs-page-id: og
    GetReactionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        reactions:
          description: List of reactions
          items:
            $ref: '#/components/schemas/Reaction'
          title: Reactions
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      type: object
    GetRepliesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001"
      required:
      - messages
      - duration
      title: Response
      type: object
    GetThreadResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        thread:
          $ref: '#/components/schemas/ThreadStateResponse'
          description: Enriched thread state
          title: Thread
          x-stream-index: "001"
      required:
      - thread
      - duration
      type: object
    HMSCall:
      properties:
        room_id:
          type: string
          x-stream-index: "001"
        room_name:
          type: string
          x-stream-index: "002"
      required:
      - room_id
      - room_name
      type: object
    HealthCheckEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "003"
        connection_id:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.003"
        me:
          $ref: '#/components/schemas/OwnUserResponse'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: string
          x-stream-index: "004.004"
        type:
          default: health.check
          type: string
          x-stream-index: "004.002"
      required:
      - connection_id
      - type
      - created_at
      type: object
    HideChannelRequest:
      nullable: true
      properties:
        clear_history:
          description: Whether to clear message history of the channel or not
          title: Clear history
          type: boolean
          x-stream-index: "001"
      type: object
    HideChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    ImageData:
      properties:
        frames:
          type: string
          x-stream-index: "005"
        height:
          type: string
          x-stream-index: "003"
        size:
          type: string
          x-stream-index: "004"
        url:
          type: string
          x-stream-index: "001"
        width:
          type: string
          x-stream-index: "002"
      required:
      - url
      - width
      - height
      - size
      - frames
      type: object
    ImageSize:
      properties:
        crop:
          description: Crop mode
          enum:
          - top
          - bottom
          - left
          - right
          - center
          title: Crop
          type: string
          x-stream-index: "001"
        height:
          description: Target image height
          format: int32
          title: Height
          type: integer
          x-stream-index: "003"
        resize:
          description: Resize method
          enum:
          - clip
          - crop
          - scale
          - fill
          title: Resize
          type: string
          x-stream-index: "002"
        width:
          description: Target image width
          format: int32
          title: Width
          type: integer
          x-stream-index: "004"
      title: Image size configuration
      type: object
    ImageUploadRequest:
      nullable: true
      properties:
        file:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: field with JSON-encoded array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          x-stream-index: "001.003"
      type: object
    ImageUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.003.001
        file:
          type: string
          x-stream-index: "001.001"
        thumb_url:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: Array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
      required:
      - duration
      type: object
    Images:
      properties:
        fixed_height:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "002"
        fixed_height_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "004"
        fixed_height_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "003"
        fixed_width:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "005"
        fixed_width_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "007"
        fixed_width_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "006"
        original:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "001"
      required:
      - original
      - fixed_height
      - fixed_height_still
      - fixed_height_downsampled
      - fixed_width
      - fixed_width_still
      - fixed_width_downsampled
      type: object
    Label:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        phrase_list_ids:
          items:
            format: int32
            type: integer
          type: array
          x-stream-index: "002"
      required:
      - name
      type: object
    LabelThresholds:
      properties:
        block:
          description: Threshold for automatic message block
          format: float
          maximum: 1
          minimum: 0
          title: Block
          type: number
          x-stream-index: "002"
        flag:
          description: Threshold for automatic message flag
          format: float
          maximum: 1
          minimum: 0
          title: Flag
          type: number
          x-stream-index: "001"
      type: object
    ListDevicesResponse:
      description: List devices response
      nullable: true
      properties:
        devices:
          description: List of devices
          items:
            $ref: '#/components/schemas/Response for Device'
          title: Devices
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - devices
      - duration
      title: ListDevicesResponse
      type: object
    MarkChannelsReadRequest:
      nullable: true
      properties:
        read_by_channel:
          additionalProperties:
            type: string
          description: Map of channel ID to last read message ID
          maximum: 30
          title: Read by channel
          type: object
          x-stream-index: "001"
      type: object
    MarkReadRequest:
      nullable: true
      properties:
        message_id:
          description: ID of the message that is considered last read by client
          title: Message ID
          type: string
          x-stream-index: "001"
        thread_id:
          description: Optional Thread ID to specifically mark a given thread as read
          title: Thread ID
          type: string
          x-stream-index: "002"
      type: object
    MarkReadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        event:
          $ref: '#/components/schemas/MessageReadEvent'
          description: Mark read event
          title: Event
          x-stream-index: "001"
      required:
      - duration
      type: object
    MarkUnreadRequest:
      nullable: true
      properties:
        message_id:
          description: ID of the message from where the channel is marked unread
          title: Message ID
          type: string
          x-stream-index: "001"
        thread_id:
          description: Mark a thread unread, specify both the thread and message id
          title: Thread ID
          type: string
          x-stream-index: "003"
      type: object
    MemberAddedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: member.added
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MemberRemovedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        type:
          default: member.removed
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberRemovedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MemberUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: member.updated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MembersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        members:
          description: List of found members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "001"
      required:
      - members
      - duration
      type: object
    Message:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "011"
        before_message_send_failed:
          type: boolean
          x-stream-index: "045"
        cid:
          type: string
          x-stream-index: "027"
        command:
          type: string
          x-stream-index: "006"
        created_at:
          format: date-time
          type: string
          x-stream-index: "029"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "033"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "032"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "022"
        html:
          type: string
          x-stream-index: "007"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "043"
        id:
          type: string
          x-stream-index: "002"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "039"
        latest_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "012"
        mentioned_users:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "042"
        message_text_updated_at:
          format: date-time
          type: string
          x-stream-index: "051"
        mml:
          type: string
          x-stream-index: "005"
        own_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "013"
        parent_id:
          type: string
          x-stream-index: "018"
        pin_expires:
          format: date-time
          type: string
          x-stream-index: "050"
        pinned:
          type: boolean
          x-stream-index: "046"
        pinned_at:
          format: date-time
          type: string
          x-stream-index: "047"
        pinned_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "049"
        poll:
          $ref: '#/components/schemas/Poll'
          x-stream-index: "053"
        poll_id:
          type: string
          x-stream-index: "052"
        quoted_message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "024"
        quoted_message_id:
          type: string
          x-stream-index: "023"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "014"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "016"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "015"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "021"
        shadowed:
          type: boolean
          x-stream-index: "035"
        show_in_channel:
          type: boolean
          x-stream-index: "020"
        silent:
          type: boolean
          x-stream-index: "044"
        text:
          type: string
          x-stream-index: "004"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "026"
        type:
          type: string
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "030"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "010"
      required:
      - id
      - text
      - html
      - type
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reaction_groups
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      type: object
    MessageActionRequest:
      nullable: true
      properties:
        form_data:
          additionalProperties:
            type: string
          description: ReadOnlyData to execute command with
          title: Form data
          type: object
          x-stream-index: "002"
      required:
      - form_data
      type: object
    MessageChangeSet:
      properties:
        attachments:
          type: boolean
          x-stream-index: "005"
        custom:
          type: boolean
          x-stream-index: "001"
        html:
          type: boolean
          x-stream-index: "004"
        mentioned_user_ids:
          type: boolean
          x-stream-index: "006"
        mml:
          type: boolean
          x-stream-index: "003"
        pin:
          type: boolean
          x-stream-index: "009"
        quoted_message_id:
          type: boolean
          x-stream-index: "007"
        silent:
          type: boolean
          x-stream-index: "008"
        text:
          type: boolean
          x-stream-index: "002"
      required:
      - custom
      - text
      - mml
      - html
      - attachments
      - mentioned_user_ids
      - quoted_message_id
      - silent
      - pin
      type: object
    MessageDeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "006.002"
        hard_delete:
          type: boolean
          x-stream-index: "002.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.deleted
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - hard_delete
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: MessageDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageFlagResponse:
      nullable: true
      properties:
        approved_at:
          format: date-time
          type: string
          x-stream-index: "013"
        created_at:
          format: date-time
          type: string
          x-stream-index: "009"
        created_by_automod:
          type: boolean
          x-stream-index: "001"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "008"
        details:
          $ref: '#/components/schemas/FlagDetails'
          x-stream-index: "006"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "005"
        moderation_feedback:
          $ref: '#/components/schemas/FlagFeedback'
          x-stream-index: "003"
        moderation_result:
          $ref: '#/components/schemas/MessageModerationResult'
          x-stream-index: "002"
        reason:
          type: string
          x-stream-index: "007"
        rejected_at:
          format: date-time
          type: string
          x-stream-index: "014"
        reviewed_at:
          format: date-time
          type: string
          x-stream-index: "011"
        reviewed_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "012"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
      required:
      - created_by_automod
      - created_at
      - updated_at
      type: object
    MessageFlaggedEvent:
      properties:
        cid:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "005.002"
        flag:
          $ref: '#/components/schemas/Flag'
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "002.002"
        type:
          default: message.flagged
          type: string
          x-stream-index: "005.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004"
      required:
      - cid
      - type
      - created_at
      title: MessageFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageModerationResult:
      description: Result of the message moderation
      properties:
        action:
          description: Action taken by automod
          title: Action
          type: string
          x-stream-index: "002"
        ai_moderation_response:
          $ref: '#/components/schemas/ModerationResponse'
          description: Response from AI moderation
          title: ModerationResponse
          x-stream-index: "007"
        blocked_word:
          description: Word that was blocked
          title: Blocked word
          type: string
          x-stream-index: "004"
        blocklist_name:
          description: Name of the blocklist
          title: Blocklist name
          type: string
          x-stream-index: "005"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "010"
        message_id:
          description: ID of the message
          title: Message ID
          type: string
          x-stream-index: "001"
        moderated_by:
          description: User who moderated the message
          title: Moderated by
          type: string
          x-stream-index: "003"
        moderation_thresholds:
          $ref: '#/components/schemas/Thresholds'
          description: Thresholds for AI moderation
          title: Thresholds
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "011"
        user_bad_karma:
          description: Whether user has bad karma
          title: User bad karma
          type: boolean
          x-stream-index: "009"
        user_karma:
          description: Karma of the user
          format: float
          title: User karma
          type: number
          x-stream-index: "008"
      required:
      - message_id
      - action
      - user_karma
      - user_bad_karma
      - created_at
      - updated_at
      title: Message moderation result
      type: object
    MessageNewEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "006.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.new
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "002.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessagePaginationParams:
      type: object
    MessageReadEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003"
        channel_type:
          type: string
          x-stream-index: "004"
        cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: string
          x-stream-index: "008"
        last_read_message_id:
          type: string
          x-stream-index: "009"
        team:
          type: string
          x-stream-index: "006"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "005"
        type:
          default: message.read
          type: string
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      type: object
    MessageRequest:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          maximum: 30
          type: array
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        mentioned_users:
          items:
            type: string
          maximum: 25
          type: array
          x-stream-index: "008"
        mml:
          type: string
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "005"
        pin_expires:
          format: date-time
          type: string
          x-stream-index: "015"
        pinned:
          type: boolean
          x-stream-index: "013"
        pinned_at:
          format: date-time
          nullable: true
          type: string
          x-stream-index: "014"
        poll_id:
          type: string
          x-stream-index: "038"
        quoted_message_id:
          type: string
          x-stream-index: "009"
        show_in_channel:
          type: boolean
          x-stream-index: "006"
        silent:
          type: boolean
          x-stream-index: "012"
        text:
          type: string
          x-stream-index: "002"
        type:
          enum:
          - '''''regular'
          - system
          type: string
          x-stream-index: "011"
      type: object
    MessageResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "008"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "021"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "022"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "025"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: string
          x-stream-index: "024"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "017"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "029"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "027"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "009"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "028"
        message_text_updated_at:
          format: date-time
          type: string
          x-stream-index: "035"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "003"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "010"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "014"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: string
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "034"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "031"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: string
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "032"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "033"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "037"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "036"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "019"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "018"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "011"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "013"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "012"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "016"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "026"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "015"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "030"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "020"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "023"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    MessageUnblockedEvent:
      properties:
        cid:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "002.002"
        type:
          default: message.unblocked
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - type
      - created_at
      title: MessageUnblockedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageUndeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.undeleted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageUndeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageUpdate:
      properties:
        change_set:
          $ref: '#/components/schemas/MessageChangeSet'
          x-stream-index: "002"
        old_text:
          type: string
          x-stream-index: "001"
      type: object
    MessageUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.updated
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageWithChannelResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "001.008"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel object
          title: Channel
          x-stream-index: "002"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "001.021"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "001.022"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.025"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: string
          x-stream-index: "001.024"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "001.017"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "001.005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "001.029"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001.001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "001.027"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "001.009"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "001.028"
        message_text_updated_at:
          format: date-time
          type: string
          x-stream-index: "001.035"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "001.003"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "001.010"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "001.014"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: string
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.034"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.031"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: string
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.032"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.033"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.037"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "001.036"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.019"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.018"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "001.011"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.013"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "001.012"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "001.016"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "001.026"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "001.015"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "001.030"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "001.002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.020"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "001.006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "001.023"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "001.007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      - channel
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    ModerationCustomActionEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002"
        type:
          default: moderation.custom_action
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationCustomActionEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationFlaggedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        item:
          type: string
          x-stream-index: "001"
        object_id:
          type: string
          x-stream-index: "002"
        type:
          default: moderation.flagged
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationMarkReviewedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002"
        type:
          default: moderation.mark_reviewed
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationMarkReviewedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationPayload:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        images:
          items:
            type: string
          type: array
          x-stream-index: "002"
        texts:
          items:
            type: string
          type: array
          x-stream-index: "001"
        videos:
          items:
            type: string
          type: array
          x-stream-index: "003"
      type: object
    ModerationResponse:
      properties:
        action:
          type: string
          x-stream-index: "004"
        explicit:
          format: float
          type: number
          x-stream-index: "002"
        spam:
          format: float
          type: number
          x-stream-index: "003"
        toxic:
          format: float
          type: number
          x-stream-index: "001"
      required:
      - toxic
      - explicit
      - spam
      - action
      - automod_response
      type: object
    MuteChannelRequest:
      nullable: true
      properties:
        channel_cids:
          description: Channel CIDs to mute (if multiple channels)
          items:
            type: string
          maximum: 25
          title: Channel CIDs
          type: array
          x-stream-index: "002"
        expiration:
          description: Duration of mute in milliseconds
          title: Expiration
          type: integer
          x-stream-index: "003"
      type: object
    MuteChannelResponse:
      nullable: true
      properties:
        channel_mute:
          $ref: '#/components/schemas/ChannelMute'
          description: Object with channel mute (if one channel was muted)
          title: Channel mute
          x-stream-index: "001"
        channel_mutes:
          description: Object with mutes (if multiple channels were muted)
          items:
            $ref: '#/components/schemas/ChannelMute'
          title: Channel mutes
          type: array
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "004.001"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own user
          x-stream-index: "003"
      required:
      - duration
      type: object
    MuteUserRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to mute (if multiple users)
          items:
            type: string
          maximum: 1000
          title: Target IDs
          type: array
          x-stream-index: "002"
        timeout:
          description: Duration of mute in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "003"
      required:
      - timeout
      type: object
    MuteUserResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "005.001"
        mute:
          $ref: '#/components/schemas/UserMute'
          description: Object with user mute (if one user was muted)
          title: Mute
          x-stream-index: "001"
        mutes:
          description: Object with mutes (if multiple users were muted)
          items:
            $ref: '#/components/schemas/UserMute'
          title: Mutes
          type: array
          x-stream-index: "002"
        non_existing_users:
          items:
            type: string
          type: array
          x-stream-index: "004"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own user
          x-stream-index: "003"
      required:
      - duration
      type: object
    NotificationAddedToChannelEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        type:
          default: notification.added_to_channel
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationAddedToChannelEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationChannelDeletedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        team:
          type: string
          x-stream-index: "001.001"
        type:
          default: notification.channel_deleted
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationChannelDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationChannelMutesUpdatedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        me:
          $ref: '#/components/schemas/OwnUser'
          x-stream-index: "001"
        type:
          default: notification.channel_mutes_updated
          type: string
          x-stream-index: "002.001"
      required:
      - me
      - type
      - created_at
      title: NotificationChannelMutesUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationChannelTruncatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: notification.channel_truncated
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationChannelTruncatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationInviteAcceptedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.invite_accepted
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationInviteAcceptedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationInviteRejectedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.invite_rejected
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationInviteRejectedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationInvitedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.invited
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationInvitedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationMarkReadEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        team:
          type: string
          x-stream-index: "002.001"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "006"
        type:
          default: notification.mark_read
          type: string
          x-stream-index: "001.001"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "007"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "005"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "008"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      title: NotificationMarkReadEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationMarkUnreadEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        first_unread_message_id:
          type: string
          x-stream-index: "005"
        last_read_at:
          format: date-time
          type: string
          x-stream-index: "006"
        last_read_message_id:
          type: string
          x-stream-index: "012"
        team:
          type: string
          x-stream-index: "002.001"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        type:
          default: notification.mark_unread
          type: string
          x-stream-index: "001.001"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_messages:
          format: int32
          type: integer
          x-stream-index: "007"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - first_unread_message_id
      - last_read_at
      - unread_messages
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      title: NotificationMarkUnreadEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationMutesUpdatedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        me:
          $ref: '#/components/schemas/OwnUser'
          x-stream-index: "001"
        type:
          default: notification.mutes_updated
          type: string
          x-stream-index: "002.001"
      required:
      - me
      - type
      - created_at
      title: NotificationMutesUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationNewMessageEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "004.004"
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "004.005"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: notification.message_new
          type: string
          x-stream-index: "003.001"
      required:
      - message
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationNewMessageEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationRemovedFromChannelEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.removed_from_channel
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationRemovedFromChannelEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NullBool:
      properties:
        HasValue:
          type: boolean
          writeOnly: true
          x-stream-index: "002"
        Value:
          type: boolean
          writeOnly: true
          x-stream-index: "001"
      type: object
    NullTime:
      properties:
        HasValue:
          type: boolean
          writeOnly: true
          x-stream-index: "002"
        Value:
          format: date-time
          type: string
          writeOnly: true
          x-stream-index: "001"
      type: object
    OnlyUserID:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    OwnUser:
      properties:
        banned:
          type: boolean
          x-stream-index: "015"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "043"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "028"
        created_at:
          format: date-time
          type: string
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        deactivated_at:
          format: date-time
          type: string
          x-stream-index: "013"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "012"
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
          x-stream-index: "026"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "022"
        language:
          type: string
          x-stream-index: "033"
        last_active:
          format: date-time
          type: string
          x-stream-index: "010"
        last_engaged_at:
          format: date-time
          type: string
          x-stream-index: "011"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "035"
        mutes:
          items:
            $ref: '#/components/schemas/UserMute'
          type: array
          x-stream-index: "027"
        online:
          type: boolean
          x-stream-index: "021"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "025"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettings'
          x-stream-index: "024"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "034"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "030"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "031"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "029"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "032"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "008"
      required:
      - id
      - role
      - custom
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      - language
      type: object
    OwnUserResponse:
      properties:
        banned:
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "014"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: string
          x-stream-index: "001.015"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "001.010"
        devices:
          items:
            $ref: '#/components/schemas/Response for Device'
          title: Devices
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: string
          x-stream-index: "001.013"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "012"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: string
          x-stream-index: "001.014"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      type: object
    PaginationParams:
      properties:
        limit:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "001"
        offset:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    PendingMessageResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "003"
        metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      type: object
    Poll:
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "023"
        allow_answers:
          type: boolean
          x-stream-index: "010"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "009"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "015"
        created_at:
          format: date-time
          type: string
          x-stream-index: "021"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "020"
        created_by_id:
          type: string
          x-stream-index: "019"
        description:
          type: string
          x-stream-index: "005"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "007"
        id:
          type: string
          x-stream-index: "003"
        is_closed:
          type: boolean
          x-stream-index: "011"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "017"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVote'
            type: array
          type: object
          x-stream-index: "016"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "008"
        name:
          type: string
          x-stream-index: "004"
        options:
          items:
            $ref: '#/components/schemas/PollOption'
          type: array
          x-stream-index: "013"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "018"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "022"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "012"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "014"
        voting_visibility:
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      - description
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - vote_counts_by_option
      - answers_count
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - Custom
      type: object
    PollClosedEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "002.002"
        created_at:
          format: date-time
          type: string
          x-stream-index: 002.003.003
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: string
          x-stream-index: 002.003.004
        type:
          default: poll.closed
          type: string
          x-stream-index: 002.003.002
      required:
      - poll
      - cid
      - type
      - created_at
      type: object
    PollDeletedEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "002.002"
        created_at:
          format: date-time
          type: string
          x-stream-index: 002.003.003
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: string
          x-stream-index: 002.003.004
        type:
          default: poll.deleted
          type: string
          x-stream-index: 002.003.002
      required:
      - poll
      - cid
      - type
      - created_at
      type: object
    PollOption:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollOptionInput:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
      type: object
    PollOptionRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      type: object
    PollOptionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll_option:
          $ref: '#/components/schemas/PollOptionResponseData'
          description: Poll option
          title: PollOptionResponseData
          x-stream-index: "001"
      required:
      - poll_option
      - duration
      type: object
    PollOptionResponseData:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: Poll
          title: PollResponseData
          x-stream-index: "001"
      required:
      - poll
      - duration
      type: object
    PollResponseData:
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "021"
        allow_answers:
          type: boolean
          x-stream-index: "008"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "007"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "012"
        created_at:
          format: date-time
          type: string
          x-stream-index: "019"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "018"
        created_by_id:
          type: string
          x-stream-index: "017"
        description:
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        is_closed:
          type: boolean
          x-stream-index: "009"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "015"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVoteResponseData'
            type: array
          type: object
          x-stream-index: "014"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionResponseData'
          type: array
          x-stream-index: "011"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "016"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "020"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "010"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "013"
        voting_visibility:
          type: string
          x-stream-index: "004"
      required:
      - id
      - name
      - description
      - voting_visibility
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - answers_count
      - vote_counts_by_option
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - Custom
      type: object
    PollUpdatedEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "002.002"
        created_at:
          format: date-time
          type: string
          x-stream-index: 002.003.003
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: string
          x-stream-index: 002.003.004
        type:
          default: poll.updated
          type: string
          x-stream-index: 002.003.002
      required:
      - poll
      - cid
      - type
      - created_at
      type: object
    PollVote:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "007"
        created_at:
          format: date-time
          type: string
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "004"
        is_answer:
          type: boolean
          x-stream-index: "006"
        option_id:
          type: string
          x-stream-index: "005"
        poll_id:
          type: string
          x-stream-index: "003"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "009"
        user_id:
          type: string
          x-stream-index: "008"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVoteCastedEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "003.002"
        created_at:
          format: date-time
          type: string
          x-stream-index: 003.003.003
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001"
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: string
          x-stream-index: 003.003.004
        type:
          default: poll.vote_casted
          type: string
          x-stream-index: 003.003.002
      required:
      - poll
      - poll_vote
      - cid
      - type
      - created_at
      type: object
    PollVoteChangedEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "003.002"
        created_at:
          format: date-time
          type: string
          x-stream-index: 003.003.003
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001"
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: string
          x-stream-index: 003.003.004
        type:
          default: poll.vote_changed
          type: string
          x-stream-index: 003.003.002
      required:
      - poll
      - poll_vote
      - cid
      - type
      - created_at
      type: object
    PollVoteRemovedEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "003.002"
        created_at:
          format: date-time
          type: string
          x-stream-index: 003.003.003
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001"
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: string
          x-stream-index: 003.003.004
        type:
          default: poll.vote_removed
          type: string
          x-stream-index: 003.003.002
      required:
      - poll
      - poll_vote
      - cid
      - type
      - created_at
      type: object
    PollVoteResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: Poll vote
          title: PollVoteResponseData
          x-stream-index: "001"
      required:
      - duration
      type: object
    PollVoteResponseData:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "005"
        created_at:
          format: date-time
          type: string
          x-stream-index: "008"
        id:
          type: string
          x-stream-index: "002"
        is_answer:
          type: boolean
          x-stream-index: "004"
        option_id:
          type: string
          x-stream-index: "003"
        poll_id:
          type: string
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "006"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVotesResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        votes:
          description: Poll votes
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          title: PollVoteResponseList
          type: array
          x-stream-index: "001"
      required:
      - votes
      - duration
      type: object
    PrivacySettings:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceipts'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicators'
          x-stream-index: "001"
      type: object
    PrivacySettingsResponse:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceiptsResponse'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicatorsResponse'
          x-stream-index: "001"
      type: object
    PushNotificationSettings:
      properties:
        disabled:
          type: boolean
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: string
          x-stream-index: "002"
      type: object
    PushNotificationSettingsInput:
      properties:
        disabled:
          $ref: '#/components/schemas/NullBool'
          x-stream-index: "001"
        disabled_until:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "002"
      type: object
    PushNotificationSettingsResponse:
      properties:
        disabled:
          type: boolean
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: string
          x-stream-index: "002"
      type: object
    QueryBannedUsersPayload:
      properties:
        exclude_expired_bans:
          description: Whether to exclude expired bans or not
          title: Exclude expired bans
          type: boolean
          x-stream-index: "006"
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          description: Number of records to return
          format: int32
          maximum: 300
          title: Limit
          type: integer
          x-stream-index: "004"
        offset:
          description: Number of records to offset
          format: int32
          maximum: 10000
          title: Offset
          type: integer
          x-stream-index: "005"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          title: Sort
          type: array
          x-stream-index: "002"
      required:
      - filter_conditions
      type: object
    QueryBannedUsersResponse:
      nullable: true
      properties:
        bans:
          description: List of found bans
          items:
            $ref: '#/components/schemas/BanResponse'
          title: BanResponse
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - bans
      - duration
      type: object
    QueryChannelsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          description: Number of channels to limit
          format: int32
          title: Limit
          type: integer
          x-stream-index: "008"
        member_limit:
          description: Number of members to limit
          format: int32
          maximum: 100
          minimum: 0
          title: Member limit
          type: integer
          x-stream-index: "007"
        message_limit:
          description: Number of messages to limit
          format: int32
          minimum: 0
          title: Message limit
          type: integer
          x-stream-index: "006"
        offset:
          description: Channel pagination offset
          format: int32
          title: Offset
          type: integer
          x-stream-index: "009"
        presence:
          title: Presence
          type: boolean
          x-stream-index: "005"
        sort:
          description: List of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
        state:
          description: Whether to update channel state or not
          title: State
          type: boolean
          x-stream-index: "004"
        watch:
          description: Whether to start watching found channels or not
          title: Watch
          type: boolean
          x-stream-index: "003"
      title: Query Channels Request
      type: object
      x-stream-docs-page-id: query_channels
    QueryChannelsResponse:
      nullable: true
      properties:
        channels:
          description: List of channels
          items:
            $ref: '#/components/schemas/ChannelStateResponseFields'
          title: Channels
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - channels
      - duration
      title: Channels list
      type: object
    QueryMembersPayload:
      description: Client request
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
          x-stream-index: "006.003"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "003"
        offset:
          format: int32
          maximum: 10000
          type: integer
          x-stream-index: "006.004"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          x-stream-index: "005"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001"
      required:
      - type
      - filter_conditions
      title: ClientRequest
      type: object
    QueryMessageFlagsPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
          x-stream-index: "003.003"
        offset:
          format: int32
          maximum: 10000
          type: integer
          x-stream-index: "003.004"
        show_deleted_messages:
          description: Whether to include deleted messages in the results
          title: ShowDeletedMessages
          type: boolean
          x-stream-index: "002"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003.005"
      type: object
    QueryMessageFlagsResponse:
      description: Query message flags response
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        flags:
          description: The flags that match the query
          items:
            $ref: '#/components/schemas/MessageFlagResponse'
          title: MessageFlagResponseList
          type: array
          x-stream-index: "001"
      required:
      - flags
      - duration
      title: QueryMessageFlagsResponse
      type: object
    QueryPollVotesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "004"
      type: object
    QueryPollsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "003"
      type: object
    QueryPollsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        polls:
          description: Polls data returned by the query
          items:
            $ref: '#/components/schemas/PollResponseData'
          title: PollsResponseData
          type: array
          x-stream-index: "001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - polls
      - duration
      type: object
    QueryReactionsRequest:
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        next:
          type: string
          x-stream-index: "006.002"
        prev:
          type: string
          x-stream-index: "006.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          type: array
          x-stream-index: "003"
      type: object
    QueryReactionsResponse:
      description: Basic response information
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        next:
          type: string
          x-stream-index: "003.001"
        prev:
          type: string
          x-stream-index: "003.002"
        reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryThreadsRequest:
      nullable: true
      properties:
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        member_limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005"
        next:
          type: string
          x-stream-index: "006.002"
        participant_limit:
          description: Limit the number of participants returned per each thread
          format: int32
          maximum: 100
          minimum: 0
          title: Participant limit
          type: integer
          x-stream-index: "004"
        prev:
          type: string
          x-stream-index: "006.003"
        reply_limit:
          description: Limit the number of replies returned per each thread
          format: int32
          maximum: 10
          minimum: 0
          title: Reply limit
          type: integer
          x-stream-index: "003"
        watch:
          description: Start watching the channel this thread belongs to
          title: Watch
          type: boolean
          x-stream-index: "001"
      type: object
    QueryThreadsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        threads:
          description: List of enriched thread states
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          title: Threads
          type: array
          x-stream-index: "001"
      required:
      - threads
      - duration
      type: object
    QueryUsersPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        include_deactivated_users:
          type: boolean
          x-stream-index: "004"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.003"
        offset:
          format: int32
          maximum: 1000
          type: integer
          x-stream-index: "005.004"
        presence:
          type: boolean
          x-stream-index: "003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "002"
      required:
      - filter_conditions
      type: object
    QueryUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        users:
          description: Array of users as result of filters applied.
          items:
            $ref: '#/components/schemas/FullUserResponse'
          title: Users
          type: array
          x-stream-index: "001"
      required:
      - users
      - duration
      type: object
    Reaction:
      nullable: true
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        message_id:
          type: string
          x-stream-index: "003"
        score:
          format: int32
          type: integer
          x-stream-index: "007"
        type:
          maxLength: 30
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionDeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: reaction.deleted
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactionGroupResponse:
      description: ReactionGroupResponse contains all information about a reaction
        of the same type.
      nullable: true
      properties:
        count:
          description: Count is the number of reactions of this type.
          format: int32
          title: Count
          type: integer
          x-stream-index: "001"
        first_reaction_at:
          description: FirstReactionAt is the time of the first reaction of this type.
            This is the same also if all reaction of this type are deleted, because
            if someone will react again with the same type, will be preserved the
            sorting.
          format: date-time
          title: FirstReactionAt
          type: string
          x-stream-index: "003"
        last_reaction_at:
          description: LastReactionAt is the time of the last reaction of this type.
          format: date-time
          title: LastReactionAt
          type: string
          x-stream-index: "004"
        sum_scores:
          description: 'SumScores is the sum of all scores of reactions of this type.
            Medium allows you to clap articles more than once and shows the sum of
            all claps from all users. For example, you can send `clap` x5 using `score:
            5`.'
          format: int32
          title: SumScores
          type: integer
          x-stream-index: "002"
      required:
      - count
      - sum_scores
      - first_reaction_at
      - last_reaction_at
      title: ReactionGroupResponse
      type: object
    ReactionNewEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: reaction.new
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactionRemovalResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
      required:
      - duration
      title: Response
      type: object
    ReactionRequest:
      description: Represents user reaction to a message
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        score:
          description: Reaction score. If not specified reaction has score of 1
          format: int32
          title: Score
          type: integer
          x-stream-index: "002"
        type:
          description: The type of reaction (e.g. 'like', 'laugh', 'wow')
          maxLength: 30
          title: Type
          type: string
          x-stream-index: "001"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "004"
      required:
      - type
      title: Reaction
      type: object
      x-stream-docs-page-id: send_reaction
    ReactionResponse:
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        message_id:
          description: Message ID
          title: Message ID
          type: string
          x-stream-index: "001"
        score:
          description: Score of the reaction
          format: int32
          title: Score
          type: integer
          x-stream-index: "005"
        type:
          description: Type of reaction
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User
          title: UserResponse
          x-stream-index: "003"
        user_id:
          description: User ID
          title: User ID
          type: string
          x-stream-index: "002"
      required:
      - message_id
      - user_id
      - user
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: reaction.updated
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - message
      - reaction
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReadReceipts:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ReadReceiptsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ReadStateResponse:
      properties:
        last_read:
          format: date-time
          type: string
          x-stream-index: "002"
        last_read_message_id:
          type: string
          x-stream-index: "004"
        unread_messages:
          format: int32
          type: integer
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - user
      - last_read
      - unread_messages
      type: object
    Response:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    Response for Device:
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "004"
        disabled:
          description: Whether device is disabled or not
          title: Disabled
          type: boolean
          x-stream-index: "005"
        disabled_reason:
          description: Reason explaining why device had been disabled
          title: Reason
          type: string
          x-stream-index: "006"
        id:
          description: Device ID
          title: ID
          type: string
          x-stream-index: "003"
        push_provider:
          description: Push provider
          title: PushProvider
          type: string
          x-stream-index: "001"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "002"
        user_id:
          description: User ID
          title: UserID
          type: string
          x-stream-index: "008"
        voip:
          description: When true the token is for Apple VoIP push notifications
          title: Voip
          type: boolean
          x-stream-index: "007"
      required:
      - push_provider
      - id
      - created_at
      - user_id
      title: DeviceResponse
      type: object
    ReviewQueueItem:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ActionLog'
          type: array
          x-stream-index: "027"
        assigned_to:
          $ref: '#/components/schemas/User'
          x-stream-index: "024"
        bans:
          items:
            $ref: '#/components/schemas/Ban'
          type: array
          x-stream-index: "025"
        completed_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "016"
        content_changed:
          type: boolean
          x-stream-index: "028"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004"
        entity_creator:
          $ref: '#/components/schemas/EntityCreator'
          x-stream-index: "023"
        entity_id:
          type: string
          x-stream-index: "007"
        entity_type:
          type: string
          x-stream-index: "006"
        feeds_v2_activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "029"
        feeds_v2_reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "030"
        flags:
          items:
            $ref: '#/components/schemas/Flag2'
          type: array
          x-stream-index: "026"
        has_image:
          type: boolean
          x-stream-index: "011"
        has_text:
          type: boolean
          x-stream-index: "013"
        has_video:
          type: boolean
          x-stream-index: "012"
        id:
          type: string
          x-stream-index: "003"
        languages:
          items:
            type: string
          type: array
          x-stream-index: "017"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "022"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "009"
        moderation_payload_hash:
          type: string
          x-stream-index: "010"
        recommended_action:
          type: string
          x-stream-index: "015"
        reviewed_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "019"
        reviewed_by:
          type: string
          x-stream-index: "020"
        severity:
          format: int32
          type: integer
          x-stream-index: "018"
        status:
          type: string
          x-stream-index: "014"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "005"
      required:
      - id
      - created_at
      - updated_at
      - entity_type
      - entity_id
      - moderation_payload_hash
      - has_image
      - has_video
      - has_text
      - status
      - recommended_action
      - completed_at
      - languages
      - severity
      - reviewed_at
      - reviewed_by
      - bans
      - flags
      - actions
      - content_changed
      type: object
    SearchPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          description: Channel filter conditions
          maximum: 100
          minimum: 1
          title: Channel filter
          type: object
          x-stream-docs-page-id: query_channels
          x-stream-index: "002"
        limit:
          description: Number of messages to return
          format: int32
          title: Limit
          type: integer
          x-stream-index: "004"
        message_filter_conditions:
          additionalProperties: {}
          description: Message filter conditions
          title: Message filter
          type: object
          x-stream-index: "003"
        next:
          description: Pagination parameter. Cannot be used with non-zero offset.
          title: Next
          type: string
          x-stream-index: "007"
        offset:
          description: Pagination offset. Cannot be used with sort or next.
          format: int32
          title: Offset
          type: integer
          x-stream-index: "005"
        query:
          description: Search phrase
          title: Query
          type: string
          x-stream-index: "001"
        sort:
          description: Sort parameters. Cannot be used with non-zero offset
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "006"
      required:
      - filter_conditions
      type: object
    SearchResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "005.001"
        next:
          description: Value to pass to the next search query in order to paginate
          title: Next
          type: string
          x-stream-index: "003"
        previous:
          description: Value that points to the previous page. Pass as the next value
            in a search query to paginate backwards
          title: Previous
          type: string
          x-stream-index: "004"
        results:
          description: Search results
          items:
            $ref: '#/components/schemas/SearchResult'
          title: Results
          type: array
          x-stream-index: "001"
        results_warning:
          $ref: '#/components/schemas/SearchWarning'
          description: Warning about the search results
          title: Results Warning
          x-stream-index: "002"
      required:
      - results
      - duration
      type: object
    SearchResult:
      properties:
        message:
          $ref: '#/components/schemas/SearchResultMessage'
          description: Found message
          title: Message
          x-stream-index: "001"
      type: object
    SearchResultMessage:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "001.008"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel object
          title: Channel
          x-stream-index: "002"
        cid:
          type: string
          x-stream-index: "001.021"
        command:
          type: string
          x-stream-index: "001.004"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.022"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.025"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "001.024"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "001.017"
        html:
          type: string
          x-stream-index: "001.005"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.029"
        id:
          type: string
          x-stream-index: "001.001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "001.027"
        latest_reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001.009"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.028"
        message_text_updated_at:
          format: date-time
          type: string
          x-stream-index: "001.035"
        mml:
          type: string
          x-stream-index: "001.003"
        own_reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001.010"
        parent_id:
          type: string
          x-stream-index: "001.014"
        pin_expires:
          format: date-time
          type: string
          x-stream-index: "001.034"
        pinned:
          type: boolean
          x-stream-index: "001.031"
        pinned_at:
          format: date-time
          type: string
          x-stream-index: "001.032"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.033"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.037"
        poll_id:
          type: string
          x-stream-index: "001.036"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001.019"
        quoted_message_id:
          type: string
          x-stream-index: "001.018"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.011"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.013"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.012"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "001.016"
        shadowed:
          type: boolean
          x-stream-index: "001.026"
        show_in_channel:
          type: boolean
          x-stream-index: "001.015"
        silent:
          type: boolean
          x-stream-index: "001.030"
        text:
          type: string
          x-stream-index: "001.002"
        thread_participants:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.020"
        type:
          type: string
          x-stream-index: "001.006"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "001.023"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      type: object
    SearchWarning:
      properties:
        channel_search_cids:
          description: Channel CIDs for the searched channels
          items:
            type: string
          title: Channel Search CIDs
          type: array
          x-stream-index: "004"
        channel_search_count:
          description: Number of channels searched
          format: int32
          title: Channel Search Count
          type: integer
          x-stream-index: "003"
        warning_code:
          description: Code corresponding to the warning
          format: int32
          title: Warning Code
          type: integer
          x-stream-index: "002"
        warning_description:
          description: Description of the warning
          title: Warning Description
          type: string
          x-stream-index: "001"
      required:
      - warning_description
      - warning_code
      type: object
    Segment:
      nullable: true
      properties:
        all_sender_channels:
          type: boolean
          x-stream-index: "007"
        all_users:
          type: boolean
          x-stream-index: "006"
        created_at:
          format: date-time
          type: string
          x-stream-index: "010"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "012"
        description:
          type: string
          x-stream-index: "004"
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        name:
          type: string
          x-stream-index: "003"
        size:
          format: int32
          type: integer
          x-stream-index: "009"
        task_id:
          type: string
          x-stream-index: "008"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "011"
      required:
      - id
      - type
      - name
      - all_users
      - all_sender_channels
      - size
      - created_at
      - updated_at
      type: object
    SendEventRequest:
      nullable: true
      properties:
        event:
          $ref: '#/components/schemas/EventRequest'
          x-stream-index: "001"
      required:
      - event
      type: object
    SendMessageRequest:
      nullable: true
      properties:
        keep_channel_hidden:
          type: boolean
          x-stream-index: "008"
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "001"
        skip_enrich_url:
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "002"
      required:
      - message
      type: object
    SendMessageResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Message response
          title: Message
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          description: Pending message metadata
          title: Pending message metadata
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      type: object
    SendReactionRequest:
      nullable: true
      properties:
        enforce_unique:
          description: Whether to replace all existing user reactions
          title: Enforce unique
          type: boolean
          x-stream-index: "003"
        reaction:
          $ref: '#/components/schemas/ReactionRequest'
          x-stream-index: "002"
        skip_push:
          description: Skips any mobile push notifications
          title: Skip push
          type: boolean
          x-stream-index: "004"
      required:
      - reaction
      type: object
    SendReactionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          x-stream-index: "002"
      required:
      - message
      - reaction
      - duration
      title: Response
      type: object
    ShowChannelRequest:
      nullable: true
      type: object
    ShowChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    SortParamRequest:
      nullable: true
      properties:
        direction:
          description: Direction of sorting, 1 for Ascending, -1 for Descending, default
            is 1
          format: int32
          title: Direction
          type: integer
          x-stream-index: "002"
        field:
          description: Name of field to sort by
          title: Field
          type: string
          x-stream-index: "001"
      type: object
    SyncRequest:
      description: Sync request
      nullable: true
      properties:
        channel_cids:
          description: List of channel CIDs to sync
          items:
            type: string
          maximum: 255
          minimum: 1
          title: Channel CIDs
          type: array
          x-stream-index: "001"
        last_sync_at:
          description: Date from which synchronization should happen
          format: date-time
          title: Last sync at
          type: string
          x-stream-index: "002"
      required:
      - channel_cids
      - last_sync_at
      title: SyncRequest
      type: object
    SyncResponse:
      description: Sync response
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        events:
          description: List of events
          items:
            $ref: '#/components/schemas/WSEvent'
          title: Events
          type: array
          x-stream-index: "001"
        inaccessible_cids:
          description: List of CIDs that user can't access
          items:
            type: string
          title: Inaccessible CIDs
          type: array
          x-stream-index: "002"
      required:
      - events
      - duration
      title: SyncResponse
      type: object
    ThreadParticipant:
      description: Represents a user that is participating in a thread.
      nullable: true
      properties:
        app_pk:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "001"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        last_read_at:
          format: date-time
          type: string
          x-stream-index: "009"
        last_thread_message_at:
          format: date-time
          type: string
          x-stream-index: "003"
        left_thread_at:
          description: Left Thread At is the time when the user left the thread
          format: date-time
          title: Left Thread At
          type: string
          x-stream-index: "008"
        thread_id:
          description: Thead ID is unique string identifier of the thread
          title: ID
          type: string
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User is the user object
          title: User
          x-stream-index: "006"
        user_id:
          description: User ID is unique string identifier of the user
          title: User ID
          type: string
          x-stream-index: "005"
      required:
      - app_pk
      - channel_cid
      - created_at
      - last_read_at
      - custom
      title: ThreadParticipant
      type: object
    ThreadResponse:
      properties:
        active_participant_count:
          description: Active Participant Count
          format: int32
          title: Active Participant Count
          type: integer
          x-stream-index: "009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel
          title: ChannelResponse
          x-stream-index: "002"
        channel_cid:
          description: Channel CID
          title: Channel CID
          type: string
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Created By User
          title: User
          x-stream-index: "006"
        created_by_user_id:
          description: Created By User ID
          title: Created By User ID
          type: string
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "016"
        deleted_at:
          description: Deleted At
          format: date-time
          title: Deleted At
          type: string
          x-stream-index: "014"
        last_message_at:
          description: Last Message At
          format: date-time
          title: Last Message At
          type: string
          x-stream-index: "011"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Parent Message
          title: Message
          x-stream-index: "004"
        parent_message_id:
          description: Parent Message ID
          title: Parent Message ID
          type: string
          x-stream-index: "003"
        participant_count:
          description: Participant Count
          format: int32
          title: Participant Count
          type: integer
          x-stream-index: "008"
        reply_count:
          description: Reply Count
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "007"
        thread_participants:
          description: Thread Participants
          items:
            $ref: '#/components/schemas/ThreadParticipant'
          title: ThreadParticipants
          type: array
          x-stream-index: "010"
        title:
          description: Title
          title: Title
          type: string
          x-stream-index: "015"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "013"
      required:
      - channel_cid
      - parent_message_id
      - created_by_user_id
      - created_at
      - updated_at
      - title
      - custom
      type: object
    ThreadStateResponse:
      nullable: true
      properties:
        active_participant_count:
          description: Active Participant Count
          format: int32
          title: Active Participant Count
          type: integer
          x-stream-index: "001.009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel
          title: ChannelResponse
          x-stream-index: "001.002"
        channel_cid:
          description: Channel CID
          title: Channel CID
          type: string
          x-stream-index: "001.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "001.012"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Created By User
          title: User
          x-stream-index: "001.006"
        created_by_user_id:
          description: Created By User ID
          title: Created By User ID
          type: string
          x-stream-index: "001.005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.016"
        deleted_at:
          description: Deleted At
          format: date-time
          title: Deleted At
          type: string
          x-stream-index: "001.014"
        last_message_at:
          description: Last Message At
          format: date-time
          title: Last Message At
          type: string
          x-stream-index: "001.011"
        latest_replies:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "002"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Parent Message
          title: Message
          x-stream-index: "001.004"
        parent_message_id:
          description: Parent Message ID
          title: Parent Message ID
          type: string
          x-stream-index: "001.003"
        participant_count:
          description: Participant Count
          format: int32
          title: Participant Count
          type: integer
          x-stream-index: "001.008"
        read:
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          type: array
          x-stream-index: "003"
        reply_count:
          description: Reply Count
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "001.007"
        thread_participants:
          description: Thread Participants
          items:
            $ref: '#/components/schemas/ThreadParticipant'
          title: ThreadParticipants
          type: array
          x-stream-index: "001.010"
        title:
          description: Title
          title: Title
          type: string
          x-stream-index: "001.015"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "001.013"
      required:
      - channel_cid
      - parent_message_id
      - created_by_user_id
      - created_at
      - updated_at
      - title
      - custom
      - latest_replies
      type: object
    ThreadUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "003.001"
        type:
          default: thread.updated
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ThreadUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    Thresholds:
      description: Sets thresholds for AI moderation
      properties:
        explicit:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for explicit messages
          title: LabelThresholds
          x-stream-index: "001"
        spam:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for spam
          title: LabelThresholds
          x-stream-index: "002"
        toxic:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for toxic messages
          title: LabelThresholds
          x-stream-index: "003"
      title: Auto moderation thresholds
      type: object
    Time:
      type: object
    TranslateMessageRequest:
      nullable: true
      properties:
        language:
          description: Language to translate message to
          enum:
          - af
          - sq
          - am
          - ar
          - az
          - bn
          - bs
          - bg
          - zh
          - zh-TW
          - hr
          - cs
          - da
          - fa-AF
          - nl
          - en
          - et
          - fi
          - fr
          - fr-CA
          - ka
          - de
          - el
          - ha
          - he
          - hi
          - hu
          - id
          - it
          - ja
          - ko
          - lv
          - ms
          - "no"
          - fa
          - ps
          - pl
          - pt
          - ro
          - ru
          - sr
          - sk
          - sl
          - so
          - es
          - es-MX
          - sw
          - sv
          - tl
          - ta
          - th
          - tr
          - uk
          - ur
          - vi
          title: Language
          type: string
          x-stream-index: "002"
      required:
      - language
      type: object
    TruncateChannelRequest:
      nullable: true
      properties:
        hard_delete:
          description: Permanently delete channel data (messages, reactions, etc.)
          title: Hard delete
          type: boolean
          x-stream-index: "002"
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "004"
        skip_push:
          description: When `message` is set disables all push notifications for it
          title: Skip push
          type: boolean
          x-stream-index: "005"
        truncated_at:
          description: Truncate channel data up to `truncated_at`. The system message
            (if provided) creation time is always greater than `truncated_at`
          format: date-time
          title: Truncated at
          type: string
          x-stream-index: "006"
      type: object
    TruncateChannelResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Truncated channel object
          title: Channel
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Truncated message object
          title: Message
          x-stream-index: "003"
      required:
      - duration
      type: object
    TypingIndicators:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    TypingIndicatorsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    TypingStartEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        parent_id:
          type: string
          x-stream-index: "001"
        type:
          default: typing.start
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: TypingStartEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    TypingStopEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        parent_id:
          type: string
          x-stream-index: "001"
        type:
          default: typing.stop
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: TypingStopEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UnblockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          type: string
          x-stream-index: "001"
      required:
      - blocked_user_id
      type: object
    UnblockUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    UnmuteChannelRequest:
      nullable: true
      properties:
        channel_cids:
          description: Channel CIDs to mute (if multiple channels)
          items:
            type: string
          maximum: 25
          title: Channel CIDs
          type: array
          x-stream-index: "001.002"
        expiration:
          description: Duration of mute in milliseconds
          title: Expiration
          type: integer
          x-stream-index: "001.003"
      type: object
    UnmuteResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        non_existing_users:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    UnmuteUserRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to mute (if multiple users)
          items:
            type: string
          maximum: 1000
          title: Target IDs
          type: array
          x-stream-index: "001.002"
        timeout:
          description: Duration of mute in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "001.003"
      required:
      - timeout
      type: object
    UnreadCountsChannel:
      properties:
        channel_id:
          type: string
          x-stream-index: "001"
        last_read:
          format: date-time
          type: string
          x-stream-index: "003"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - channel_id
      - unread_count
      - last_read
      type: object
    UnreadCountsChannelType:
      properties:
        channel_count:
          format: int32
          type: integer
          x-stream-index: "002"
        channel_type:
          type: string
          x-stream-index: "001"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - channel_type
      - channel_count
      - unread_count
      type: object
    UnreadCountsThread:
      properties:
        last_read:
          format: date-time
          type: string
          x-stream-index: "002"
        last_read_message_id:
          type: string
          x-stream-index: "003"
        parent_message_id:
          type: string
          x-stream-index: "004"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - unread_count
      - last_read
      - last_read_message_id
      - parent_message_id
      type: object
    UpdateChannelPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      title: UpdateChannelPartialRequest
      type: object
    UpdateChannelPartialResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Updated channel object
          title: Channel
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        members:
          description: List of updated members
          items:
            $ref: '#/components/schemas/ChannelMemberResponse'
          title: ChannelMemberResponse
          type: array
          x-stream-index: "002"
      required:
      - members
      - duration
      type: object
    UpdateChannelRequest:
      nullable: true
      properties:
        accept_invite:
          description: Set to `true` to accept the invite
          title: Accept invite
          type: boolean
          x-stream-index: "008"
        add_members:
          description: List of user IDs to add to the channel
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Add members
          type: array
          x-stream-index: "001"
        add_moderators:
          description: List of user IDs to make channel moderators
          items:
            type: string
          maximum: 100
          title: Add moderators
          type: array
          x-stream-index: "003"
        assign_roles:
          description: List of channel member role assignments. If any specified user
            is not part of the channel, the request will fail
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Assign roles
          type: array
          x-stream-index: "006"
        cooldown:
          description: Sets cool down period for the channel in seconds
          format: int32
          maximum: 120
          minimum: 0
          title: Cool down
          type: integer
          x-stream-index: "007"
        data:
          $ref: '#/components/schemas/ChannelInput'
          x-stream-index: "013.001"
        demote_moderators:
          description: List of user IDs to take away moderators status from
          items:
            type: string
          maximum: 100
          title: Demote moderators
          type: array
          x-stream-index: "004"
        hide_history:
          description: Set to `true` to hide channel's history when adding new members
          title: Hide history
          type: boolean
          x-stream-index: "012"
        invites:
          description: List of user IDs to invite to the channel
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Invites
          type: array
          x-stream-index: "005"
        message:
          $ref: '#/components/schemas/MessageRequest'
          description: Message to send to the chat when channel is successfully updated
          title: Message
          x-stream-index: "010"
        reject_invite:
          description: Set to `true` to reject the invite
          title: Reject invite
          type: boolean
          x-stream-index: "009"
        remove_members:
          description: List of user IDs to remove from the channel
          items:
            type: string
          maximum: 100
          title: Remove members
          type: array
          x-stream-index: "002"
        skip_push:
          description: When `message` is set disables all push notifications for it
          title: Skip push
          type: boolean
          x-stream-index: "011"
      title: Channel update request
      type: object
      x-stream-docs-page-id: channel_update
    UpdateChannelResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Updated channel
          title: Channel
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        members:
          description: List of channel members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "003"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Message sent to the chat
          title: Message
          x-stream-index: "002"
      required:
      - members
      - duration
      type: object
    UpdateMemberPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      type: object
    UpdateMemberPartialResponse:
      nullable: true
      properties:
        channel_member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          description: Updated channel member
          title: Channel member
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    UpdateMessagePartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        skip_enrich_url:
          description: Skip enriching the URL in the message
          title: SkipEnrichURL
          type: boolean
          x-stream-index: "001"
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
      type: object
    UpdateMessagePartialResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Updated message
          title: Message
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          description: Pending message metadata
          title: PendingMessageMetadata
          type: object
          x-stream-index: "002"
      required:
      - duration
      type: object
    UpdateMessageRequest:
      nullable: true
      properties:
        message:
          $ref: '#/components/schemas/MessageRequest'
          description: Message
          title: MessageRequest
          x-stream-index: "001"
        skip_enrich_url:
          description: Skip enrich URL
          title: boolean
          type: boolean
          x-stream-index: "002"
      required:
      - message
      type: object
    UpdateMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      title: Response
      type: object
    UpdatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "004"
        id:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "003"
      required:
      - id
      - text
      type: object
    UpdatePollPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
      type: object
    UpdatePollRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Allow answers
          title: boolean
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          description: Allow user suggested options
          title: boolean
          type: boolean
          x-stream-index: "008"
        description:
          description: Poll description
          title: string
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Enforce unique vote
          title: boolean
          type: boolean
          x-stream-index: "005"
        id:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
        is_closed:
          description: Is closed
          title: boolean
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Max votes allowed
          format: int32
          maximum: 10
          title: integer
          type: integer
          x-stream-index: "007"
        name:
          description: Poll name
          title: string
          type: string
          x-stream-index: "002"
        options:
          description: Poll options
          items:
            $ref: '#/components/schemas/PollOptionRequest'
          maximum: 100
          title: PollOptions
          type: array
          x-stream-index: "004"
        voting_visibility:
          description: Voting visibility
          enum:
          - anonymous
          - public
          title: string
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      type: object
    UpdateThreadPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "004.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "004.002"
      type: object
    UpdateThreadPartialResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          description: Updated thread (not enriched)
          title: Thread
          x-stream-index: "001"
      required:
      - thread
      - duration
      type: object
    UpdateUserPartialRequest:
      properties:
        id:
          description: User ID to update
          title: ID
          type: string
          x-stream-index: "001"
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      required:
      - id
      type: object
    UpdateUsersPartialRequest:
      nullable: true
      properties:
        users:
          items:
            $ref: '#/components/schemas/UpdateUserPartialRequest'
          maximum: 100
          type: array
          x-stream-index: "001"
      required:
      - users
      type: object
    UpdateUsersRequest:
      nullable: true
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/UserRequest'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      type: object
    UpdateUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        membership_deletion_task_id:
          type: string
          x-stream-index: "002"
        users:
          additionalProperties:
            $ref: '#/components/schemas/FullUserResponse'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      - membership_deletion_task_id
      - duration
      type: object
    User:
      properties:
        ban_expires:
          format: date-time
          type: string
          x-stream-index: "016"
        banned:
          type: boolean
          x-stream-index: "015"
        created_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        deactivated_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "013"
        deleted_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "012"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "022"
        language:
          type: string
          x-stream-index: "033"
        last_active:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "010"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "011"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "021"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "025"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettings'
          x-stream-index: "024"
        revoke_tokens_issued_before:
          format: date-time
          type: string
          x-stream-index: "040"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "034"
        updated_at:
          format: date-time
          readOnly: true
          type: string
          x-stream-index: "008"
      required:
      - id
      - role
      - custom
      - banned
      - online
      type: object
    UserBannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "006.002"
        channel_type:
          type: string
          x-stream-index: "006.003"
        cid:
          type: string
          x-stream-index: "006.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "008.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        expiration:
          format: date-time
          type: string
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: user.banned
          type: string
          x-stream-index: "008.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007.001"
      required:
      - created_by
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserBannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserDeactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        type:
          default: user.deactivated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - created_by
      - type
      - created_at
      title: UserDeactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserDeletedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        delete_conversation_channels:
          type: boolean
          x-stream-index: "005"
        hard_delete:
          type: boolean
          x-stream-index: "003.001"
        mark_messages_deleted:
          type: boolean
          x-stream-index: "004"
        type:
          default: user.deleted
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - hard_delete
      - mark_messages_deleted
      - delete_conversation_channels
      title: UserDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserEventPayload:
      properties:
        banned:
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.016"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: string
          x-stream-index: "001.015"
        deleted_at:
          format: date-time
          type: string
          x-stream-index: "001.010"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "002"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: string
          x-stream-index: "001.013"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.012"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        revoke_tokens_issued_before:
          format: date-time
          type: string
          x-stream-index: "001.014"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      type: object
    UserFlaggedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "002"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "003"
        type:
          default: user.flagged
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserMute:
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "009"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: string
          x-stream-index: "008"
        target:
          $ref: '#/components/schemas/User'
          description: User who's muted
          title: Target
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/User'
          description: Owner of channel mute
          title: User
          x-stream-index: "005"
      required:
      - created_at
      - updated_at
      type: object
    UserMuteResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004"
        expires:
          format: date-time
          type: string
          x-stream-index: "003"
        target:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: string
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    UserMutedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "001"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "002"
        type:
          default: user.muted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: UserMutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserPresenceChangedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        type:
          default: user.presence.changed
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: UserPresenceChangedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserReactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        type:
          default: user.reactivated
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserReactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserRequest:
      description: User request object
      properties:
        custom:
          additionalProperties: {}
          title: Custom
          type: object
          x-stream-index: "004"
        id:
          description: User ID
          title: ID
          type: string
          x-stream-index: "001"
        image:
          title: Image
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "006"
        language:
          type: string
          x-stream-index: "005"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "002"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "007"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsInput'
          x-stream-index: "010"
      required:
      - id
      title: UserRequest
      type: object
    UserResponse:
      description: User response object
      properties:
        banned:
          description: Whether a user is banned or not
          title: Banned
          type: boolean
          x-stream-index: "001.011"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.016"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: string
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          description: Date of deactivation
          format: date-time
          title: Deactivated at
          type: string
          x-stream-index: "001.015"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: string
          x-stream-index: "001.010"
        id:
          description: Unique user identifier
          title: ID
          type: string
          x-stream-index: "001.001"
        image:
          title: Image
          type: string
          x-stream-index: "001.003"
        language:
          description: Preferred language of a user
          title: Language
          type: string
          x-stream-index: "001.005"
        last_active:
          description: Date of last activity
          format: date-time
          title: Last active
          type: string
          x-stream-index: "001.013"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "001.002"
        online:
          description: Whether a user online or not
          title: Online
          type: boolean
          x-stream-index: "001.012"
        revoke_tokens_issued_before:
          description: Revocation date for tokens
          format: date-time
          title: Revoke tokens issued before
          type: string
          x-stream-index: "001.014"
        role:
          description: Determines the set of user permissions
          title: Role
          type: string
          x-stream-index: "001.006"
        teams:
          description: List of teams user is a part of
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "001.007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: string
          x-stream-index: "001.009"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - devices
      - invisible
      title: UserResponse
      type: object
    UserUnbannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "005.002"
        shadow:
          type: boolean
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "004.001"
        type:
          default: user.unbanned
          type: string
          x-stream-index: "005.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserUnbannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUnmutedEvent:
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "002"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "003"
        type:
          default: user.unmuted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserUnmutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUnreadReminderEvent:
      properties:
        channels:
          additionalProperties:
            $ref: '#/components/schemas/ChannelMessages'
          type: object
          x-stream-index: "003"
        created_at:
          format: date-time
          type: string
          x-stream-index: "001.002"
        type:
          default: user.unread_message_reminder
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002"
      required:
      - type
      - created_at
      - channels
      title: UserUnreadReminderEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUpdatedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: string
          x-stream-index: "002.004"
        type:
          default: user.updated
          type: string
          x-stream-index: "002.002"
        user:
          $ref: '#/components/schemas/UserEventPayload'
          x-stream-index: "001"
      required:
      - user
      - type
      - created_at
      type: object
    UserWatchingStartEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "003.002"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: user.watching.start
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: UserWatchingStartEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserWatchingStopEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: string
          x-stream-index: "002.002"
        type:
          default: user.watching.stop
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: UserWatchingStopEvent
      type: object
      x-stream-event-client-type: true
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    VoteData:
      properties:
        Option:
          $ref: '#/components/schemas/PollOptionResponseData'
          x-stream-index: "003"
        answer_text:
          type: string
          x-stream-index: "002"
        option_id:
          maxLength: 255
          type: string
          x-stream-index: "001"
      type: object
    WSChannelEvent:
      description: The discriminator object for all websocket channel events, it maps
        events' payload to the final type
      discriminator:
        mapping:
          poll.closed: '#/components/schemas/PollClosedEvent'
          poll.deleted: '#/components/schemas/PollDeletedEvent'
          poll.updated: '#/components/schemas/PollUpdatedEvent'
          poll.vote_casted: '#/components/schemas/PollVoteCastedEvent'
          poll.vote_changed: '#/components/schemas/PollVoteChangedEvent'
          poll.vote_removed: '#/components/schemas/PollVoteRemovedEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/PollClosedEvent'
      - $ref: '#/components/schemas/PollDeletedEvent'
      - $ref: '#/components/schemas/PollUpdatedEvent'
      - $ref: '#/components/schemas/PollVoteCastedEvent'
      - $ref: '#/components/schemas/PollVoteChangedEvent'
      - $ref: '#/components/schemas/PollVoteRemovedEvent'
    WSClientEvent:
      description: The discriminator object for all websocket client events, it maps
        events' payload to the final type
      discriminator:
        mapping:
          health.check: '#/components/schemas/HealthCheckEvent'
          user.updated: '#/components/schemas/UserUpdatedEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/HealthCheckEvent'
      - $ref: '#/components/schemas/UserUpdatedEvent'
    WSEvent:
      description: The discriminator object for all websocket events, it maps events'
        payload to the final type
      discriminator:
        mapping:
          '*': '#/components/schemas/AnyEvent'
          channel.created: '#/components/schemas/ChannelCreatedEvent'
          channel.deleted: '#/components/schemas/ChannelDeletedEvent'
          channel.frozen: '#/components/schemas/ChannelFrozenEvent'
          channel.hidden: '#/components/schemas/ChannelHiddenEvent'
          channel.kicked: '#/components/schemas/ChannelKickedEvent'
          channel.truncated: '#/components/schemas/ChannelTruncatedEvent'
          channel.unfrozen: '#/components/schemas/ChannelUnFrozenEvent'
          channel.updated: '#/components/schemas/ChannelUpdatedEvent'
          channel.visible: '#/components/schemas/ChannelVisibleEvent'
          member.added: '#/components/schemas/MemberAddedEvent'
          member.removed: '#/components/schemas/MemberRemovedEvent'
          member.updated: '#/components/schemas/MemberUpdatedEvent'
          message.deleted: '#/components/schemas/MessageDeletedEvent'
          message.new: '#/components/schemas/MessageNewEvent'
          message.read: '#/components/schemas/MessageReadEvent'
          message.undeleted: '#/components/schemas/MessageUndeletedEvent'
          message.updated: '#/components/schemas/MessageUpdatedEvent'
          moderation.custom_action: '#/components/schemas/ModerationCustomActionEvent'
          moderation.flagged: '#/components/schemas/ModerationFlaggedEvent'
          moderation.mark_reviewed: '#/components/schemas/ModerationMarkReviewedEvent'
          notification.added_to_channel: '#/components/schemas/NotificationAddedToChannelEvent'
          notification.channel_deleted: '#/components/schemas/NotificationChannelDeletedEvent'
          notification.channel_mutes_updated: '#/components/schemas/NotificationChannelMutesUpdatedEvent'
          notification.channel_truncated: '#/components/schemas/NotificationChannelTruncatedEvent'
          notification.invite_accepted: '#/components/schemas/NotificationInviteAcceptedEvent'
          notification.invite_rejected: '#/components/schemas/NotificationInviteRejectedEvent'
          notification.invited: '#/components/schemas/NotificationInvitedEvent'
          notification.mark_read: '#/components/schemas/NotificationMarkReadEvent'
          notification.mark_unread: '#/components/schemas/NotificationMarkUnreadEvent'
          notification.message_new: '#/components/schemas/NotificationNewMessageEvent'
          notification.mutes_updated: '#/components/schemas/NotificationMutesUpdatedEvent'
          notification.removed_from_channel: '#/components/schemas/NotificationRemovedFromChannelEvent'
          notification.thread_message_new: '#/components/schemas/MessageNewEvent'
          reaction.deleted: '#/components/schemas/ReactionDeletedEvent'
          reaction.new: '#/components/schemas/ReactionNewEvent'
          reaction.updated: '#/components/schemas/ReactionUpdatedEvent'
          thread.updated: '#/components/schemas/ThreadUpdatedEvent'
          typing.start: '#/components/schemas/TypingStartEvent'
          typing.stop: '#/components/schemas/TypingStopEvent'
          user.banned: '#/components/schemas/UserBannedEvent'
          user.deactivated: '#/components/schemas/UserDeactivatedEvent'
          user.deleted: '#/components/schemas/UserDeletedEvent'
          user.muted: '#/components/schemas/UserMutedEvent'
          user.presence.changed: '#/components/schemas/UserPresenceChangedEvent'
          user.reactivated: '#/components/schemas/UserReactivatedEvent'
          user.unbanned: '#/components/schemas/UserUnbannedEvent'
          user.watching.start: '#/components/schemas/UserWatchingStartEvent'
          user.watching.stop: '#/components/schemas/UserWatchingStopEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AnyEvent'
      - $ref: '#/components/schemas/ChannelCreatedEvent'
      - $ref: '#/components/schemas/ChannelDeletedEvent'
      - $ref: '#/components/schemas/ChannelFrozenEvent'
      - $ref: '#/components/schemas/ChannelHiddenEvent'
      - $ref: '#/components/schemas/ChannelKickedEvent'
      - $ref: '#/components/schemas/ChannelTruncatedEvent'
      - $ref: '#/components/schemas/ChannelUnFrozenEvent'
      - $ref: '#/components/schemas/ChannelUpdatedEvent'
      - $ref: '#/components/schemas/ChannelVisibleEvent'
      - $ref: '#/components/schemas/MemberAddedEvent'
      - $ref: '#/components/schemas/MemberRemovedEvent'
      - $ref: '#/components/schemas/MemberUpdatedEvent'
      - $ref: '#/components/schemas/MessageDeletedEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageReadEvent'
      - $ref: '#/components/schemas/MessageUndeletedEvent'
      - $ref: '#/components/schemas/MessageUpdatedEvent'
      - $ref: '#/components/schemas/ModerationCustomActionEvent'
      - $ref: '#/components/schemas/ModerationFlaggedEvent'
      - $ref: '#/components/schemas/ModerationMarkReviewedEvent'
      - $ref: '#/components/schemas/NotificationAddedToChannelEvent'
      - $ref: '#/components/schemas/NotificationChannelDeletedEvent'
      - $ref: '#/components/schemas/NotificationChannelMutesUpdatedEvent'
      - $ref: '#/components/schemas/NotificationChannelTruncatedEvent'
      - $ref: '#/components/schemas/NotificationInviteAcceptedEvent'
      - $ref: '#/components/schemas/NotificationInviteRejectedEvent'
      - $ref: '#/components/schemas/NotificationInvitedEvent'
      - $ref: '#/components/schemas/NotificationMarkReadEvent'
      - $ref: '#/components/schemas/NotificationMarkUnreadEvent'
      - $ref: '#/components/schemas/NotificationMutesUpdatedEvent'
      - $ref: '#/components/schemas/NotificationNewMessageEvent'
      - $ref: '#/components/schemas/NotificationRemovedFromChannelEvent'
      - $ref: '#/components/schemas/ReactionDeletedEvent'
      - $ref: '#/components/schemas/ReactionNewEvent'
      - $ref: '#/components/schemas/ReactionUpdatedEvent'
      - $ref: '#/components/schemas/ThreadUpdatedEvent'
      - $ref: '#/components/schemas/TypingStartEvent'
      - $ref: '#/components/schemas/TypingStopEvent'
      - $ref: '#/components/schemas/UserBannedEvent'
      - $ref: '#/components/schemas/UserDeactivatedEvent'
      - $ref: '#/components/schemas/UserDeletedEvent'
      - $ref: '#/components/schemas/UserMutedEvent'
      - $ref: '#/components/schemas/UserPresenceChangedEvent'
      - $ref: '#/components/schemas/UserReactivatedEvent'
      - $ref: '#/components/schemas/UserUnbannedEvent'
      - $ref: '#/components/schemas/UserWatchingStartEvent'
      - $ref: '#/components/schemas/UserWatchingStopEvent'
    WebhookEvent:
      description: The discriminator object for all webhook events, it maps events'
        payload to the final type
      discriminator:
        mapping:
          '*': '#/components/schemas/AnyEvent'
          campaign.completed: '#/components/schemas/CampaignCompletedEvent'
          campaign.started: '#/components/schemas/CampaignStartedEvent'
          channel.created: '#/components/schemas/ChannelCreatedEvent'
          channel.deleted: '#/components/schemas/ChannelDeletedEvent'
          channel.frozen: '#/components/schemas/ChannelFrozenEvent'
          channel.hidden: '#/components/schemas/ChannelHiddenEvent'
          channel.muted: '#/components/schemas/ChannelMutedEvent'
          channel.truncated: '#/components/schemas/ChannelTruncatedEvent'
          channel.unfrozen: '#/components/schemas/ChannelUnFrozenEvent'
          channel.unmuted: '#/components/schemas/ChannelUnmutedEvent'
          channel.updated: '#/components/schemas/ChannelUpdatedEvent'
          channel.visible: '#/components/schemas/ChannelVisibleEvent'
          flag.updated: '#/components/schemas/FlagUpdatedEvent'
          member.added: '#/components/schemas/MemberAddedEvent'
          member.removed: '#/components/schemas/MemberRemovedEvent'
          member.updated: '#/components/schemas/MemberUpdatedEvent'
          message.deleted: '#/components/schemas/MessageDeletedEvent'
          message.flagged: '#/components/schemas/MessageFlaggedEvent'
          message.new: '#/components/schemas/MessageNewEvent'
          message.read: '#/components/schemas/MessageReadEvent'
          message.unblocked: '#/components/schemas/MessageUnblockedEvent'
          message.undeleted: '#/components/schemas/MessageUndeletedEvent'
          message.updated: '#/components/schemas/MessageUpdatedEvent'
          moderation.custom_action: '#/components/schemas/ModerationCustomActionEvent'
          moderation.flagged: '#/components/schemas/ModerationFlaggedEvent'
          moderation.mark_reviewed: '#/components/schemas/ModerationMarkReviewedEvent'
          notification.mark_unread: '#/components/schemas/NotificationMarkUnreadEvent'
          notification.thread_message_new: '#/components/schemas/MessageNewEvent'
          reaction.deleted: '#/components/schemas/ReactionDeletedEvent'
          reaction.new: '#/components/schemas/ReactionNewEvent'
          reaction.updated: '#/components/schemas/ReactionUpdatedEvent'
          thread.updated: '#/components/schemas/ThreadUpdatedEvent'
          user.banned: '#/components/schemas/UserBannedEvent'
          user.deactivated: '#/components/schemas/UserDeactivatedEvent'
          user.deleted: '#/components/schemas/UserDeletedEvent'
          user.flagged: '#/components/schemas/UserFlaggedEvent'
          user.muted: '#/components/schemas/UserMutedEvent'
          user.reactivated: '#/components/schemas/UserReactivatedEvent'
          user.unbanned: '#/components/schemas/UserUnbannedEvent'
          user.unmuted: '#/components/schemas/UserUnmutedEvent'
          user.unread_message_reminder: '#/components/schemas/UserUnreadReminderEvent'
          user.updated: '#/components/schemas/UserUpdatedEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AnyEvent'
      - $ref: '#/components/schemas/CampaignCompletedEvent'
      - $ref: '#/components/schemas/CampaignStartedEvent'
      - $ref: '#/components/schemas/ChannelCreatedEvent'
      - $ref: '#/components/schemas/ChannelDeletedEvent'
      - $ref: '#/components/schemas/ChannelFrozenEvent'
      - $ref: '#/components/schemas/ChannelHiddenEvent'
      - $ref: '#/components/schemas/ChannelMutedEvent'
      - $ref: '#/components/schemas/ChannelTruncatedEvent'
      - $ref: '#/components/schemas/ChannelUnFrozenEvent'
      - $ref: '#/components/schemas/ChannelUnmutedEvent'
      - $ref: '#/components/schemas/ChannelUpdatedEvent'
      - $ref: '#/components/schemas/ChannelVisibleEvent'
      - $ref: '#/components/schemas/FlagUpdatedEvent'
      - $ref: '#/components/schemas/MemberAddedEvent'
      - $ref: '#/components/schemas/MemberRemovedEvent'
      - $ref: '#/components/schemas/MemberUpdatedEvent'
      - $ref: '#/components/schemas/MessageDeletedEvent'
      - $ref: '#/components/schemas/MessageFlaggedEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageReadEvent'
      - $ref: '#/components/schemas/MessageUnblockedEvent'
      - $ref: '#/components/schemas/MessageUndeletedEvent'
      - $ref: '#/components/schemas/MessageUpdatedEvent'
      - $ref: '#/components/schemas/ModerationCustomActionEvent'
      - $ref: '#/components/schemas/ModerationFlaggedEvent'
      - $ref: '#/components/schemas/ModerationMarkReviewedEvent'
      - $ref: '#/components/schemas/NotificationMarkUnreadEvent'
      - $ref: '#/components/schemas/ReactionDeletedEvent'
      - $ref: '#/components/schemas/ReactionNewEvent'
      - $ref: '#/components/schemas/ReactionUpdatedEvent'
      - $ref: '#/components/schemas/ThreadUpdatedEvent'
      - $ref: '#/components/schemas/UserBannedEvent'
      - $ref: '#/components/schemas/UserDeactivatedEvent'
      - $ref: '#/components/schemas/UserDeletedEvent'
      - $ref: '#/components/schemas/UserFlaggedEvent'
      - $ref: '#/components/schemas/UserMutedEvent'
      - $ref: '#/components/schemas/UserReactivatedEvent'
      - $ref: '#/components/schemas/UserUnbannedEvent'
      - $ref: '#/components/schemas/UserUnmutedEvent'
      - $ref: '#/components/schemas/UserUnreadReminderEvent'
      - $ref: '#/components/schemas/UserUpdatedEvent'
    WrappedUnreadCountsResponse:
      description: Basic response information
      nullable: true
      properties:
        channel_type:
          items:
            $ref: '#/components/schemas/UnreadCountsChannelType'
          type: array
          x-stream-index: "001.004"
        channels:
          items:
            $ref: '#/components/schemas/UnreadCountsChannel'
          type: array
          x-stream-index: "001.003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        threads:
          items:
            $ref: '#/components/schemas/UnreadCountsThread'
          type: array
          x-stream-index: "001.005"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
        total_unread_threads_count:
          format: int32
          type: integer
          x-stream-index: "001.002"
      required:
      - total_unread_count
      - total_unread_threads_count
      - channels
      - channel_type
      - threads
      - duration
      title: Response
      type: object
    connectRequestQuery:
      nullable: true
      type: object
  securitySchemes:
    JWT:
      description: |
        JWT should be always provided when stream-auth-type=jwt.

        Using JWT auth request could be authenticated as user or as server-side.

        When using user authentication permission checking is going to be applied to requests based on the user that is
        performing a request.

        The `authorization` header should be a JWT string signed using the secret attached to the API key used to perform
        requests.

        **WARNING** all client-side official SDK do not ship with token generation; this is to make sure that the API secret is not
        shared with an untrusted party such as a browser or a iOS/Android application. Tokens **must** be generated server-side.
        If you wish, you can configure your application to ignore authentication (see `disable_auth_check`)
        The JWT string must include only the user_id claim and can include any built-in JWT claim such as iat, exp as well.
      in: header
      name: Authorization
      type: apiKey
    api_key:
      description: Application API key should be always set in order to authenticate
        the request.
      in: query
      name: api_key
      type: apiKey
    stream-auth-type:
      description: |-
        Stream-Auth-Type should be always set in order to authenticate the request. Possible
        values: `jwt` or `anonymous`.

        `jwt` allows you to authenticate as a user. With this auth type you should also provide valid JWT in Authorization
        header.

        `anonymous` allows you to authenticate as anonymous user. Please note that most advanced features are not available
        to anonymous users.
      in: header
      name: Stream-Auth-Type
      type: apiKey
info:
  title: Stream API
  version: v135.0.1
openapi: 3.0.3
paths:
  /app:
    get:
      description: |
        This Method returns the application settings
      operationId: GetApp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get App Settings
      tags:
      - product:chat
  /calls:
    post:
      description: |
        Retrieves the token to join a call

        Required permissions:
        - JoinCall
        - ReadChannel
      operationId: GetCallToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallTokenRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallTokenResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Call Token
      tags:
      - product:chat
  /calls/{call_id}:
    post:
      description: |
        Retrieves the token to join a call

        Required permissions:
        - JoinCall
        - ReadChannel
      operationId: GetCallToken
      parameters:
      - in: path
        name: call_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCallTokenRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallTokenResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Call Token
      tags:
      - product:chat
  /channels:
    post:
      description: |
        Query channels with filter query

        Required permissions:
        - ReadChannel
      operationId: QueryChannels
      parameters:
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "011.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryChannelsRequest'
        description: Query Channels Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryChannelsResponse'
          description: Channels list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query channels
      tags:
      - product:chat
  /channels/{type}/{id}:
    delete:
      description: |
        Deletes channel

        Sends events:
        - channel.deleted

        Required permissions:
        - DeleteChannel
      operationId: DeleteChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: hard_delete
        schema:
          type: boolean
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete channel
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the channel

        Sends events:
        - channel.updated

        Required permissions:
        - UpdateChannel
        - UpdateChannelCooldown
        - UpdateChannelFrozen
      operationId: UpdateChannelPartial
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelPartialRequest'
        description: UpdateChannelPartialRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update channel
      tags:
      - product:chat
    post:
      description: |
        Change channel data

        Sends events:
        - channel.updated
        - member.added
        - member.removed
        - member.updated
        - message.new

        Required permissions:
        - AddOwnChannelMembership
        - RemoveOwnChannelMembership
        - UpdateChannel
        - UpdateChannelCooldown
        - UpdateChannelFrozen
        - UpdateChannelMembers
      operationId: UpdateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 013.002.001
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 013.002.002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelRequest'
        description: Channel update request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update channel
      tags:
      - product:chat
  /channels/{type}/{id}/call:
    post:
      description: |
        Creates a call

        Required permissions:
        - CreateCall
        - ReadChannel
      operationId: CreateCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCallRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCallResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a call
      tags:
      - product:chat
  /channels/{type}/{id}/event:
    post:
      description: |
        Sends event to the channel

        Required permissions:
        - SendCustomEvent
      operationId: SendEvent
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEventRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send event
      tags:
      - product:chat
  /channels/{type}/{id}/file:
    delete:
      description: |
        Deletes previously uploaded file

        Required permissions:
        - DeleteAttachment
      operationId: DeleteFile
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of file
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: File ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete file
      tags:
      - product:chat
    post:
      description: |
        Uploads file

        Required permissions:
        - UploadAttachment
      operationId: UploadFile
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload file
      tags:
      - product:chat
  /channels/{type}/{id}/hide:
    post:
      description: |
        Marks channel as hidden for current user

        Sends events:
        - channel.hidden

        Required permissions:
        - ReadChannel
      operationId: HideChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HideChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HideChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Hide channel
      tags:
      - product:chat
  /channels/{type}/{id}/image:
    delete:
      description: |
        Deletes previously uploaded image

        Required permissions:
        - DeleteAttachment
      operationId: DeleteImage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of file
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: File ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete image
      tags:
      - product:chat
    post:
      description: |
        Uploads image

        Required permissions:
        - UploadAttachment
      operationId: UploadImage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 001.001.001
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 001.001.002
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload image
      tags:
      - product:chat
  /channels/{type}/{id}/member/{user_id}:
    patch:
      description: |2+

      operationId: UpdateMemberPartial
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMemberPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially channel member update
      tags:
      - product:chat
  /channels/{type}/{id}/message:
    post:
      description: |
        Sends new message to the specified channel

        Sends events:
        - message.new
        - message.updated

        Required permissions:
        - AddLinks
        - CreateMessage
        - PinMessage
        - SkipChannelCooldown
        - SkipMessageModeration
        - UseFrozenChannel
      operationId: SendMessage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "009.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "009.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send new message
      tags:
      - product:chat
  /channels/{type}/{id}/messages:
    get:
      description: |
        Returns list messages found by IDs

        Required permissions:
        - ReadChannel
      operationId: GetManyMessages
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: ids
        required: true
        schema:
          description: List of comma-separated IDs
          items:
            type: string
          maximum: 50
          minimum: 1
          title: IDs
          type: array
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyMessagesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get many messages
      tags:
      - product:chat
  /channels/{type}/{id}/query:
    post:
      description: |
        This Method creates a channel or returns an existing one with matching attributes

        Sends events:
        - channel.created
        - member.added
        - member.removed
        - member.updated
        - user.watching.start
      operationId: GetOrCreateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID (maximum length of 64 characters)
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "012.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelGetOrCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create channel
      tags:
      - product:chat
  /channels/{type}/{id}/read:
    post:
      description: |
        Marks channel as read up to the specific message

        Sends events:
        - message.read

        Required permissions:
        - ReadChannel
      operationId: MarkRead
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkReadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkReadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark read
      tags:
      - product:chat
  /channels/{type}/{id}/show:
    post:
      description: |
        Shows previously hidden channel

        Sends events:
        - channel.visible
      operationId: ShowChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Show channel
      tags:
      - product:chat
  /channels/{type}/{id}/stop-watching:
    post:
      description: |
        Call this Method to stop receiving channel events

        Sends events:
        - user.watching.stop
      operationId: StopWatchingChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "001.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelStopWatchingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop watching channel
      tags:
      - product:chat
  /channels/{type}/{id}/truncate:
    post:
      description: |
        Truncates channel

        Sends events:
        - channel.truncated

        Required permissions:
        - DeleteChannel
        - TruncateChannel
      operationId: TruncateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruncateChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncateChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Truncate channel
      tags:
      - product:chat
  /channels/{type}/{id}/unread:
    post:
      description: |
        Marks channel as unread from a specific message

        Required permissions:
        - ReadChannel
      operationId: MarkUnread
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnreadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark unread
      tags:
      - product:chat
  /channels/{type}/query:
    post:
      description: |
        This Method creates a channel or returns an existing one with matching attributes

        Sends events:
        - channel.created
        - member.added
        - member.removed
        - member.updated
        - user.watching.start
      operationId: GetOrCreateDistinctChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "012.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelGetOrCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create channel
      tags:
      - product:chat
  /channels/delete:
    post:
      description: |
        Allows to delete several channels at once asynchronously

        Sends events:
        - channel.deleted

        Required permissions:
        - DeleteChannel
      operationId: DeleteChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChannelsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deletes channels asynchronously
      tags:
      - product:chat
  /channels/read:
    post:
      description: |
        Marks channels as read up to the specific message. If no channels is given, mark all channel as read

        Sends events:
        - message.read

        Required permissions:
        - ReadChannel
      operationId: MarkChannelsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkChannelsReadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkReadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark channels as read
      tags:
      - product:chat
  /devices:
    delete:
      description: |
        Deletes one device
      operationId: DeleteDevice
      parameters:
      - in: query
        name: id
        required: true
        schema:
          description: Device ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete device
      tags:
      - product:chat
    get:
      description: |
        Returns all available devices
      operationId: ListDevices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: ListDevicesResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List devices
      tags:
      - product:chat
    post:
      description: |
        Adds a new device to a user, if the same device already exists the call will have no effect
      operationId: CreateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        description: CreateDeviceRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create device
      tags:
      - product:chat
  /guest:
    post:
      description: |2+

      operationId: CreateGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGuestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGuestResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create Guest
      tags:
      - product:chat
  /longpoll:
    get:
      description: |
        WebSocket fallback transport endpoint

        Sends events:
        - user.updated
      operationId: LongPoll
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConnectRequest'
              x-stream-index: "001"
        in: query
        name: json
      - in: query
        name: connection_id
        schema:
          maxLength: 36
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Long Poll (Transport)
      tags:
      - product:chat
  /members:
    get:
      description: |
        Find and filter channel members

        Required permissions:
        - ReadChannel
      operationId: QueryMembers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMembersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query members
      tags:
      - product:chat
  /messages/{id}:
    delete:
      description: |
        Deletes message

        Sends events:
        - message.deleted

        Required permissions:
        - DeleteMessage
      operationId: DeleteMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard
        schema:
          description: Delete all message reactions and replies as well
          title: Hard
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: deleted_by
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete message
      tags:
      - product:chat
    get:
      description: |
        Returns message by ID

        Required permissions:
        - ReadChannel
      operationId: GetMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: ID of the message
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get message
      tags:
      - product:chat
    post:
      description: |
        Updates message with new data

        Sends events:
        - message.updated

        Required permissions:
        - AddLinks
        - PinMessage
        - SkipMessageModeration
        - UpdateMessage
      operationId: UpdateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update message
      tags:
      - product:chat
    put:
      description: |
        Updates certain fields of the message

        Sends events:
        - message.updated

        Required permissions:
        - AddLinks
        - PinMessage
        - SkipMessageModeration
        - UpdateMessage
      operationId: UpdateMessagePartial
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessagePartialRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessagePartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially message update
      tags:
      - product:chat
  /messages/{id}/action:
    post:
      description: |
        Executes message command action with given parameters

        Sends events:
        - message.new

        Required permissions:
        - RunMessageAction
      operationId: RunMessageAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Run message command action
      tags:
      - product:chat
  /messages/{id}/reaction:
    post:
      description: |
        Sends reaction to specified message

        Sends events:
        - reaction.new
        - reaction.updated

        Required permissions:
        - CreateReaction
        - UseFrozenChannel
      operationId: SendReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to send reaction for
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendReactionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send reaction
      tags:
      - product:chat
  /messages/{id}/reaction/{type}:
    delete:
      description: |
        Removes user reaction from the message

        Sends events:
        - reaction.deleted

        Required permissions:
        - DeleteReaction
      operationId: DeleteReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to remove reaction from
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          description: Reaction type to remove
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactionRemovalResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete reaction
      tags:
      - product:chat
  /messages/{id}/reactions:
    get:
      description: |
        Returns list of reactions of specific message

        Required permissions:
        - ReadChannel
      operationId: GetReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: limit
        schema:
          description: Number of records to return
          format: int32
          title: Limit
          type: integer
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: offset
        schema:
          description: Number of records to offset
          format: int32
          title: Offset
          type: integer
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReactionsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get reactions
      tags:
      - product:chat
    post:
      description: |
        Get reactions on a message

        Required permissions:
        - ReadChannel
      operationId: QueryReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      tags:
      - product:chat
  /messages/{id}/translate:
    post:
      description: |
        Translates message to a given language using automated translation software

        Sends events:
        - message.updated

        Required permissions:
        - ReadChannel
      operationId: TranslateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Translate message
      tags:
      - product:chat
  /messages/{message_id}/polls/{poll_id}/vote:
    post:
      description: |
        Cast a vote on a poll

        Sends events:
        - poll.vote_casted

        Required permissions:
        - CastVote
      operationId: CastPollVote
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastPollVoteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Cast vote
      tags:
      - product:chat
  /messages/{message_id}/polls/{poll_id}/vote/{vote_id}:
    delete:
      description: |
        Delete a vote from a poll

        Sends events:
        - poll.vote_removed

        Required permissions:
        - CastVote
      operationId: RemovePollVote
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: path
        name: vote_id
        required: true
        schema:
          description: Vote ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "004"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete vote
      tags:
      - product:chat
  /messages/{parent_id}/replies:
    get:
      description: |
        Returns replies (thread) of the message

        Required permissions:
        - ReadChannel
      operationId: GetReplies
      parameters:
      - in: path
        name: parent_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: sort
        schema:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: limit
        schema:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "003.001"
      - in: query
        name: offset
        schema:
          format: int32
          type: integer
          x-stream-index: "003.002"
      - in: query
        name: id_gte
        schema:
          type: string
          x-stream-index: "003.003"
      - in: query
        name: id_gt
        schema:
          type: string
          x-stream-index: "003.004"
      - in: query
        name: id_lte
        schema:
          type: string
          x-stream-index: "003.005"
      - in: query
        name: id_lt
        schema:
          type: string
          x-stream-index: "003.006"
      - in: query
        name: created_at_after_or_equal
        schema:
          format: date-time
          type: string
          x-stream-index: "003.007"
      - in: query
        name: created_at_after
        schema:
          format: date-time
          type: string
          x-stream-index: "003.008"
      - in: query
        name: created_at_before_or_equal
        schema:
          format: date-time
          type: string
          x-stream-index: "003.009"
      - in: query
        name: created_at_before
        schema:
          format: date-time
          type: string
          x-stream-index: "003.010"
      - in: query
        name: id_around
        schema:
          type: string
          x-stream-index: "003.011"
      - in: query
        name: created_at_around
        schema:
          format: date-time
          type: string
          x-stream-index: "003.012"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepliesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get replies
      tags:
      - product:chat
  /moderation/ban:
    delete:
      description: |
        Removes previously applied ban

        Sends events:
        - user.unbanned

        Required permissions:
        - BanChannelMember
        - BanUser
      operationId: Unban
      parameters:
      - in: query
        name: target_user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: channel_cid
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: created_by
        schema:
          type: string
          writeOnly: true
          x-stream-index: "005"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unban user
      tags:
      - product:chat
    post:
      description: |
        Restricts user activity either in specific channel or globally

        Sends events:
        - user.banned

        Required permissions:
        - BanChannelMember
        - BanUser
      operationId: Ban
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BanRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Ban user
      tags:
      - product:chat
  /moderation/flag:
    post:
      description: |
        Reports message or user for review by moderators

        Sends events:
        - message.flagged
        - user.flagged

        Required permissions:
        - FlagMessage
        - FlagUser
      operationId: Flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Flag
      tags:
      - product:chat
  /moderation/flags/message:
    get:
      description: |
        Find and filter message flags

        Required permissions:
        - ReadMessageFlags
      operationId: QueryMessageFlags
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMessageFlagsPayload'
              description: JSON object with query message flags payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMessageFlagsResponse'
          description: QueryMessageFlagsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Message Flags
      tags:
      - product:chat
  /moderation/mute:
    post:
      description: |
        Mutes one or several users

        Sends events:
        - user.muted

        Required permissions:
        - MuteUser
      operationId: MuteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute user
      tags:
      - product:chat
  /moderation/mute/channel:
    post:
      description: |
        Mutes channel for user

        Sends events:
        - channel.muted

        Required permissions:
        - MuteChannel
      operationId: MuteChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute channel
      tags:
      - product:chat
  /moderation/unmute:
    post:
      description: |
        Unmutes previously muted user

        Sends events:
        - user.unmuted

        Required permissions:
        - MuteUser
      operationId: UnmuteUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmuteUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmuteResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unmute user
      tags:
      - product:chat
  /moderation/unmute/channel:
    post:
      description: |
        Unmutes channel for user

        Sends events:
        - channel.unmuted

        Required permissions:
        - MuteChannel
      operationId: UnmuteChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmuteChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmuteResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unmute channel
      tags:
      - product:chat
  /og:
    get:
      description: |
        Get an OpenGraph attachment for a link
      operationId: GetOG
      parameters:
      - in: query
        name: url
        required: true
        schema:
          description: URL to be scraped
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOGResponse'
          description: Get OG Attachment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get OG
      tags:
      - product:chat
  /polls:
    post:
      description: |
        Creates a new poll

        Required permissions:
        - CreatePoll
      operationId: CreatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollRequest'
        description: Create Poll Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll
      tags:
      - product:chat
    put:
      description: |
        Updates a poll

        Sends events:
        - poll.closed
        - poll.updated

        Required permissions:
        - UpdatePoll
      operationId: UpdatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll
      tags:
      - product:chat
  /polls/{poll_id}:
    delete:
      description: |
        Deletes a poll

        Sends events:
        - poll.deleted

        Required permissions:
        - DeletePoll
      operationId: DeletePoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll
      tags:
      - product:chat
    get:
      description: |
        Retrieves a poll
      operationId: GetPoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll
      tags:
      - product:chat
    patch:
      description: |
        Updates a poll partially

        Sends events:
        - poll.updated

        Required permissions:
        - UpdatePoll
      operationId: UpdatePollPartial
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partial update poll
      tags:
      - product:chat
  /polls/{poll_id}/options:
    post:
      description: |
        Creates a poll option

        Sends events:
        - poll.updated

        Required permissions:
        - CastVote
        - UpdatePoll
      operationId: CreatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll option
      tags:
      - product:chat
    put:
      description: |
        Updates a poll option

        Sends events:
        - poll.updated

        Required permissions:
        - UpdatePoll
      operationId: UpdatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll option
      tags:
      - product:chat
  /polls/{poll_id}/options/{option_id}:
    delete:
      description: |
        Deletes a poll option

        Sends events:
        - poll.updated

        Required permissions:
        - UpdatePoll
      operationId: DeletePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll option
      tags:
      - product:chat
    get:
      description: |
        Retrieves a poll option
      operationId: GetPollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll option
      tags:
      - product:chat
  /polls/{poll_id}/votes:
    post:
      description: |
        Queries votes
      operationId: QueryPollVotes
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollVotesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVotesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query votes
      tags:
      - product:chat
  /polls/query:
    post:
      description: |
        Queries polls
      operationId: QueryPolls
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPollsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query polls
      tags:
      - product:chat
  /query_banned_users:
    get:
      description: |
        Find and filter channel scoped or global user bans

        Required permissions:
        - ReadChannel
      operationId: QueryBannedUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBannedUsersPayload'
              description: JSON object with query user bans payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBannedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Banned Users
      tags:
      - product:chat
  /search:
    get:
      description: |
        Search messages across channels

        Required permissions:
        - ReadChannel
      operationId: Search
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPayload'
              description: JSON object with search payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Search messages
      tags:
      - product:chat
  /sync:
    post:
      description: |
        Returns all events happened since client disconnect in specified channels

        Required permissions:
        - ReadChannel
      operationId: Sync
      parameters:
      - in: query
        name: with_inaccessible_cids
        schema:
          description: If set to true this will add 'inaccessible_cids' to response
            type
          title: With inaccessible CIDs
          type: boolean
          x-stream-index: "003"
      - in: query
        name: watch
        schema:
          description: If set to true this will start watching requested and newly
            added channels that user has access to. If error occurred with this option
            enabled and it is not an input error - channels will still be watched.
          title: Watch synced channels
          type: boolean
          x-stream-index: "004"
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "006.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
        description: SyncRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
          description: SyncResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Sync
      tags:
      - product:chat
  /threads:
    post:
      description: |
        Returns the list of threads for specific user

        Required permissions:
        - ReadChannel
      operationId: QueryThreads
      parameters:
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryThreadsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryThreadsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Threads
      tags:
      - product:chat
  /threads/{message_id}:
    get:
      description: |
        Return a specific thread

        Required permissions:
        - ReadChannel
      operationId: GetThread
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: watch
        schema:
          description: Start watching the channel this thread belongs to
          title: Watch
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: connection_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: reply_limit
        schema:
          description: Limit the number of replies returned
          format: int32
          minimum: 0
          title: Reply limit
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: participant_limit
        schema:
          description: Limit the number of participants returned
          format: int32
          maximum: 100
          minimum: 0
          title: Participant limit
          type: integer
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: member_limit
        schema:
          description: Limit the number of members returned per thread channel
          format: int32
          maximum: 100
          minimum: 0
          title: Member limit
          type: integer
          writeOnly: true
          x-stream-index: "006"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThreadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Thread
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the thread

        Sends events:
        - thread.updated

        Required permissions:
        - ReadChannel
        - UpdateThread
      operationId: UpdateThreadPartial
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThreadPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update thread
      tags:
      - product:chat
  /unread:
    get:
      description: |
        Fetch unread counts for a single user
      operationId: UnreadCounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WrappedUnreadCountsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unread counts
      tags:
      - product:chat
  /users:
    get:
      description: |
        Find and filter users

        Required permissions:
        - SearchUser
      operationId: QueryUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUsersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query users
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the user

        Sends events:
        - user.updated
        - user.presence.changed
      operationId: UpdateUsersPartial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update user
      tags:
      - product:chat
    post:
      description: |
        Update or create users in bulk

        Sends events:
        - user.updated
      operationId: UpdateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert users
      tags:
      - product:chat
  /users/block:
    get:
      description: |
        Get list of blocked Users
      operationId: GetBlockedUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get list of blocked Users
      tags:
      - product:chat
    post:
      description: |
        Block users
      operationId: BlockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Block user
      tags:
      - product:chat
  /users/unblock:
    post:
      description: |
        Unblock users
      operationId: UnblockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unblock user
      tags:
      - product:chat
security:
- JWT: []
  api_key: []
  stream-auth-type: []
- api_key: []
  stream-auth-type: []
servers:
- description: Stream API
  url: https://stream-io-api.com
