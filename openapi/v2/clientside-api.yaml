components:
  schemas:
    AIImageConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        ocr_rules:
          items:
            $ref: '#/components/schemas/OCRRule'
          type: array
          x-stream-index: "004"
        rules:
          items:
            $ref: '#/components/schemas/AWSRekognitionRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      - ocr_rules
      type: object
    AIIndicatorClearEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: ai_indicator.clear
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: AIIndicatorClearEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AIIndicatorStopEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: ai_indicator.stop
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: AIIndicatorStopEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AIIndicatorUpdateEvent:
      properties:
        ai_message:
          type: string
          x-stream-index: "005"
        ai_state:
          type: string
          x-stream-index: "004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        message_id:
          type: string
          x-stream-index: "003"
        type:
          default: ai_indicator.update
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - message_id
      - ai_state
      title: AIIndicatorUpdateEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AITextConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        profile:
          type: string
          x-stream-index: "003"
        rules:
          items:
            $ref: '#/components/schemas/BodyguardRule'
          type: array
          x-stream-index: "004"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "005"
      required:
      - enabled
      - profile
      - rules
      - severity_rules
      type: object
    AIVideoConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AWSRekognitionRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    APIError:
      properties:
        StatusCode:
          description: Response HTTP status code
          format: int32
          title: Status code
          type: integer
          x-stream-index: "004"
        code:
          description: API error code
          format: int32
          title: Code
          type: integer
          x-stream-index: "001"
        details:
          description: Additional error-specific information
          items:
            type: integer
          title: Details
          type: array
          x-stream-index: "007"
        duration:
          description: Request duration
          title: Duration
          type: string
          x-stream-index: "005"
        exception_fields:
          additionalProperties:
            type: string
          description: Additional error info
          title: Exception fields
          type: object
          x-stream-index: "003"
        message:
          description: Message describing an error
          title: Message
          type: string
          x-stream-index: "002"
        more_info:
          description: URL with additional information
          title: More info
          type: string
          x-stream-index: "006"
        unrecoverable:
          description: Flag that indicates if the error is unrecoverable, requests
            that return unrecoverable errors should not be retried, this error only
            applies to the request that caused it
          title: Unrecoverable
          type: boolean
          x-stream-index: "008"
      required:
      - code
      - message
      - StatusCode
      - duration
      - more_info
      - details
      title: Error response
      type: object
    AWSRekognitionRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        min_confidence:
          format: float
          maximum: 100
          minimum: 0
          type: number
          x-stream-index: "003"
      required:
      - label
      - action
      - min_confidence
      type: object
    AcceptCallRequest:
      description: AcceptCallRequest is the payload for accepting a call.
      nullable: true
      title: AcceptCallRequest
      type: object
    AcceptCallResponse:
      description: AcceptCallResponse is the payload for accepting a call.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: AcceptCallResponse
      type: object
    AcceptFeedMemberInviteRequest:
      nullable: true
      title: Accept Feed Member Invite Request
      type: object
    AcceptFeedMemberInviteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The feed member after accepting the invite
          title: Feed Member
          x-stream-index: "001"
      required:
      - member
      - duration
      title: Accept Feed Member Invite Response
      type: object
    AcceptFollowRequest:
      nullable: true
      properties:
        follower_role:
          description: Optional role for the follower in the follow relationship
          title: Follower Role
          type: string
          x-stream-index: "003"
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed ID
          type: string
          x-stream-index: "001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed ID
          type: string
          x-stream-index: "002"
      required:
      - source
      - target
      title: Accept Follow Request
      type: object
    AcceptFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The accepted follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Accept Follow Response
      type: object
    Action:
      nullable: true
      properties:
        name:
          type: string
          x-stream-index: "001"
        style:
          type: string
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "004"
        value:
          type: string
          x-stream-index: "005"
      required:
      - name
      - text
      - type
      type: object
    ActionLogResponse:
      nullable: true
      properties:
        ai_providers:
          items:
            type: string
          type: array
          x-stream-index: "011"
        created_at:
          description: Timestamp when the action was taken
          format: date-time
          title: Created At
          type: number
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          description: Additional metadata about the action
          title: Custom
          type: object
          x-stream-index: "007"
        id:
          description: Unique identifier of the action log
          title: ID
          type: string
          x-stream-index: "001"
        reason:
          description: Reason for the moderation action
          title: Reason
          type: string
          x-stream-index: "006"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Associated review queue item
          title: Review Queue Item
          x-stream-index: "008"
        target_user:
          $ref: '#/components/schemas/UserResponse'
          description: User who was the target of the action
          title: Target User
          x-stream-index: "009"
        target_user_id:
          description: ID of the user who was the target of the action
          title: Target User ID
          type: string
          x-stream-index: "010"
        type:
          description: Type of moderation action
          title: Type
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who performed the action
          title: User
          x-stream-index: "004"
        user_id:
          description: ID of the user who performed the action
          title: User ID
          type: string
          x-stream-index: "005"
      required:
      - id
      - created_at
      - type
      - user_id
      - reason
      - custom
      - target_user_id
      - ai_providers
      type: object
    ActionSequence:
      properties:
        action:
          type: string
          x-stream-index: "001"
        blur:
          type: boolean
          x-stream-index: "005"
        cooldown_period:
          format: int32
          type: integer
          x-stream-index: "004"
        threshold:
          format: int32
          type: integer
          x-stream-index: "002"
        time_window:
          format: int32
          type: integer
          x-stream-index: "003"
        warning:
          type: boolean
          x-stream-index: "006"
        warning_text:
          type: string
          x-stream-index: "007"
      required:
      - action
      - threshold
      - time_window
      - cooldown_period
      - blur
      - warning
      - warning_text
      type: object
    ActivityAddedEvent:
      description: Emitted when an activity is added to a feed.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The activity that was added
          title: Activity
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.added
          description: 'The type of event: "feeds.activity.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the activity
          title: User
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityDeletedEvent:
      description: Emitted when an activity is deleted.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The activity that was updated
          title: Activity
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.deleted
          description: 'The type of event: "feeds.activity.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityFeedbackRequest:
      description: Request to provide feedback on an activity
      nullable: true
      properties:
        hide:
          description: Whether to hide this activity
          title: bool
          type: boolean
          x-stream-index: "003"
        mute_user:
          description: Whether to mute the user who created this activity
          title: bool
          type: boolean
          x-stream-index: "005"
        reason:
          description: Reason for the feedback (optional)
          maxLength: 1000
          title: string
          type: string
          x-stream-index: "006"
        report:
          description: Whether to report this activity
          title: bool
          type: boolean
          x-stream-index: "004"
        show_less:
          description: Whether to show less content like this
          title: bool
          type: boolean
          x-stream-index: "002"
      title: Activity Feedback Request
      type: object
    ActivityFeedbackResponse:
      description: Response for activity feedback submission
      nullable: true
      properties:
        activity_id:
          description: The ID of the activity that received feedback
          title: string
          type: string
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity_id
      - duration
      title: Activity Feedback Response
      type: object
    ActivityLocation:
      properties:
        lat:
          description: Latitude coordinate
          format: float
          title: Latitude
          type: number
          x-stream-index: "001"
        lng:
          description: Longitude coordinate
          format: float
          title: Longitude
          type: number
          x-stream-index: "002"
      required:
      - lat
      - lng
      title: Activity Location
      type: object
    ActivityMarkEvent:
      description: Emitted when activities are marked as read, seen, or watched.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 006.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 006.001.007
        feed_visibility:
          type: string
          x-stream-index: "006.003"
        fid:
          type: string
          x-stream-index: "006.002"
        mark_all_read:
          description: Whether all activities were marked as read
          title: Mark All Read
          type: boolean
          x-stream-index: "004"
        mark_all_seen:
          description: Whether all activities were marked as seen
          title: Mark All Seen
          type: boolean
          x-stream-index: "005"
        mark_read:
          description: The IDs of activities marked as read
          items:
            type: string
          title: Mark Read
          type: array
          x-stream-index: "001"
        mark_seen:
          description: The IDs of activities marked as seen
          items:
            type: string
          title: Mark Seen
          type: array
          x-stream-index: "002"
        mark_watched:
          description: The IDs of activities marked as watched
          items:
            type: string
          title: Mark Watched
          type: array
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: 006.001.004
        type:
          default: feeds.activity.marked
          description: 'The type of event: "feeds.activity.marked" in this case'
          title: Event Type
          type: string
          x-stream-index: 006.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who marked the activities
          title: User
          x-stream-index: "007.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: ActivityMarkEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityMarkedEvent:
      properties:
        all_read:
          type: boolean
          x-stream-index: "006"
        all_seen:
          type: boolean
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        feed_id:
          type: string
          x-stream-index: "003"
        marked_read:
          items:
            type: string
          type: array
          x-stream-index: "004"
        marked_watched:
          items:
            type: string
          type: array
          x-stream-index: "005"
        type:
          default: activity.marked
          type: string
          x-stream-index: "001.001"
        user_id:
          type: string
          x-stream-index: "002"
      required:
      - type
      - created_at
      - user_id
      - feed_id
      - all_read
      - all_seen
      title: ActivityMarkedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityPinResponse:
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The pinned activity
          title: Activity
          x-stream-index: "002"
        created_at:
          description: When the pin was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "004"
        feed:
          description: ID of the feed where activity is pinned
          title: Feed ID
          type: string
          x-stream-index: "003"
        updated_at:
          description: When the pin was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who pinned the activity
          title: User
          x-stream-index: "001"
      required:
      - user
      - activity
      - feed
      - created_at
      - updated_at
      title: Activity Pin
      type: object
    ActivityPinnedEvent:
      description: Emitted when an activity is pinned.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          description: The ID of the feed
          title: Feed ID
          type: string
          x-stream-index: "002.002"
        pinned_activity:
          $ref: '#/components/schemas/PinActivityResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.pinned
          description: 'The type of event: "feeds.activity.pinned" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who pinned the activity
          title: User
          x-stream-index: "003.001"
      required:
      - pinned_activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityPinnedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityProcessorConfig:
      nullable: true
      properties:
        config:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        openai_key:
          type: string
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    ActivityReactionAddedEvent:
      description: Emitted when a reaction is added to an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was added
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.activity.reaction.added
          description: 'The type of event: "feeds.activity.reaction.added" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the reaction
          title: User
          x-stream-index: "004.001"
      required:
      - activity
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: ActivityReactionAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityReactionDeletedEvent:
      description: Emitted when a reaction is deleted from an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.activity.reaction.deleted
          description: The type of the reaction that was removed
          title: Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the reaction
          title: User
          x-stream-index: "004.001"
      required:
      - activity
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: ActivityReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityReactionUpdatedEvent:
      description: Emitted when a reaction is updated on an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was updated
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.activity.reaction.updated
          description: 'The type of event: "feeds.activity.reaction.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the reaction
          title: User
          x-stream-index: "004.001"
      required:
      - activity
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: ActivityReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityRemovedFromFeedEvent:
      description: Emitted when an activity is removed from a feed.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.removed_from_feed
          description: 'The type of event: "feeds.activity.removed_from_feed" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the activity
          title: User
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityRemovedFromFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityRequest:
      properties:
        attachments:
          description: List of attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: Custom Data
          type: object
          x-stream-index: "017"
        expires_at:
          description: Expiration time for the activity
          title: Expires At
          type: string
          x-stream-index: "010"
        feeds:
          description: List of feed IDs to add the activity to
          items:
            type: string
          maximum: 255
          minimum: 1
          title: Feed IDs
          type: array
          x-stream-index: "004"
        filter_tags:
          description: Tags for filtering activities
          items:
            type: string
          maximum: 255
          title: Filter Tags
          type: array
          x-stream-index: "013"
        id:
          description: Optional ID for the activity
          maxLength: 255
          title: Activity ID
          type: string
          x-stream-index: "001"
        interest_tags:
          description: Tags for indicating user interests
          items:
            type: string
          maximum: 255
          title: Interest Tags
          type: array
          x-stream-index: "014"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location related to the activity
          title: Location
          x-stream-index: "009"
        mentioned_user_ids:
          description: List of users mentioned in the activity
          items:
            type: string
          maximum: 255
          title: Mentioned User IDs
          type: array
          x-stream-index: "011"
        parent_id:
          description: ID of parent activity for replies/comments
          maxLength: 255
          title: Parent ID
          type: string
          x-stream-index: "015"
        poll_id:
          description: ID of a poll to attach to activity
          title: Poll ID
          type: string
          x-stream-index: "016"
        search_data:
          additionalProperties: {}
          description: Additional data for search indexing
          title: Search Data
          type: object
          x-stream-index: "012"
        text:
          description: Text content of the activity
          title: Text
          type: string
          x-stream-index: "005"
        type:
          description: Type of activity
          maxLength: 255
          title: Activity Type
          type: string
          x-stream-index: "002"
        visibility:
          description: Visibility setting for the activity
          enum:
          - public
          - private
          - tag
          title: Visibility
          type: string
          x-stream-index: "007"
        visibility_tag:
          description: If visibility is 'tag', this is the tag name and is required
          maxLength: 32
          title: Visibility Tag
          type: string
          x-stream-index: "008"
      required:
      - type
      - feeds
      title: Activity Request
      type: object
    ActivityResponse:
      properties:
        attachments:
          description: Media attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "009"
        bookmark_count:
          description: Number of bookmarks on the activity
          format: int32
          title: Bookmark Count
          type: integer
          x-stream-index: "028"
        comment_count:
          description: Number of comments on the activity
          format: int32
          title: Comment Count
          type: integer
          x-stream-index: "027"
        comments:
          description: Comments on this activity
          items:
            $ref: '#/components/schemas/CommentResponse'
          title: Comments
          type: array
          x-stream-index: "015"
        created_at:
          description: When the activity was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "007"
        current_feed:
          $ref: '#/components/schemas/FeedResponse'
          description: Feed context for this activity view. If an activity is added
            only to one feed, it's always set. If an activity is added to multiple
            feeds, it's only set when calling the GetOrCreateFeed endpoint.
          title: Current Feed
          x-stream-index: "035"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: Custom Data
          type: object
          x-stream-index: "011"
        deleted_at:
          description: When the activity was deleted
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "021"
        edited_at:
          description: When the activity was last edited
          format: date-time
          title: Edited At
          type: number
          x-stream-index: "020"
        expires_at:
          description: When the activity will expire
          format: date-time
          title: Expires At
          type: number
          x-stream-index: "022"
        feeds:
          description: List of feed IDs containing this activity
          items:
            type: string
          title: Feeds
          type: array
          x-stream-index: "004"
        filter_tags:
          description: Tags for filtering
          items:
            type: string
          title: Filter Tags
          type: array
          x-stream-index: "024"
        hidden:
          description: If this activity is hidden for this user. For premium content
            where you want to show a preview
          title: Hidden
          type: boolean
          x-stream-index: "036"
        id:
          description: Unique identifier for the activity
          title: ID
          type: string
          x-stream-index: "001"
        interest_tags:
          description: Tags for user interests
          items:
            type: string
          title: Interest Tags
          type: array
          x-stream-index: "025"
        latest_reactions:
          description: Recent reactions to the activity
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Latest Reactions
          type: array
          x-stream-index: "031"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location related to the activity
          title: Location
          x-stream-index: "017"
        mentioned_users:
          description: Users mentioned in the activity
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "010"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          description: Moderation information
          title: Moderation
          x-stream-index: "026"
        notification_context:
          $ref: '#/components/schemas/NotificationContext'
          description: Notification context data for the activity (if this is a reaction,
            comment, follow, etc.)
          title: Notification Context
          x-stream-index: "012"
        own_bookmarks:
          description: Current user's bookmarks for this activity
          items:
            $ref: '#/components/schemas/BookmarkResponse'
          title: Own Bookmarks
          type: array
          x-stream-index: "034"
        own_reactions:
          description: Current user's reactions to this activity
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Own Reactions
          type: array
          x-stream-index: "033"
        parent:
          $ref: '#/components/schemas/ActivityResponse'
          description: Parent activity (if this is a reply/comment)
          title: Parent
          x-stream-index: "018"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: Poll attached to this activity
          title: Poll
          x-stream-index: "019"
        popularity:
          description: Popularity score of the activity
          format: int32
          title: Popularity
          type: integer
          x-stream-index: "013"
        reaction_count:
          description: Number of reactions to the activity
          format: int32
          title: Reaction Count
          type: integer
          x-stream-index: "030"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          description: Grouped reactions by type
          title: Reaction Groups
          type: object
          x-stream-index: "032"
        score:
          description: Ranking score for this activity
          format: float
          title: Score
          type: number
          x-stream-index: "014"
        search_data:
          additionalProperties: {}
          description: Data for search indexing
          title: Search Data
          type: object
          x-stream-index: "023"
        share_count:
          description: Number of times the activity was shared
          format: int32
          title: Share Count
          type: integer
          x-stream-index: "029"
        text:
          description: Text content of the activity
          title: Text
          type: string
          x-stream-index: "016"
        type:
          description: Type of activity
          title: Type
          type: string
          x-stream-index: "002"
        updated_at:
          description: When the activity was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "008"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the activity
          title: User
          x-stream-index: "003"
        visibility:
          description: Visibility setting for the activity
          enum:
          - public
          - private
          - tag
          title: Visibility
          type: string
          x-stream-index: "005"
        visibility_tag:
          description: If visibility is 'tag', this is the tag name
          title: Visibility Tag
          type: string
          x-stream-index: "006"
      required:
      - id
      - type
      - user
      - feeds
      - visibility
      - created_at
      - updated_at
      - attachments
      - mentioned_users
      - custom
      - popularity
      - score
      - comments
      - search_data
      - filter_tags
      - interest_tags
      - comment_count
      - bookmark_count
      - share_count
      - reaction_count
      - latest_reactions
      - reaction_groups
      - own_reactions
      - own_bookmarks
      title: Base Activity
      type: object
    ActivitySelectorConfig:
      nullable: true
      properties:
        cutoff_time:
          format: date-time
          type: number
          x-stream-index: "004"
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        min_popularity:
          format: int32
          type: integer
          x-stream-index: "005"
        sort:
          items:
            $ref: '#/components/schemas/SortParam'
          type: array
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
      required:
      - cutoff_time
      type: object
    ActivityUnpinnedEvent:
      description: Emitted when an activity is unpinned.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          description: The ID of the feed
          title: Feed ID
          type: string
          x-stream-index: "002.002"
        pinned_activity:
          $ref: '#/components/schemas/PinActivityResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.unpinned
          description: 'The type of event: "feeds.activity.unpinned" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who unpinned the activity
          title: User
          x-stream-index: "003.001"
      required:
      - pinned_activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityUnpinnedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityUpdatedEvent:
      description: Emitted when an activity is updated.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The activity that was updated
          title: Activity
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.updated
          description: The type of the event
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the activity
          title: User
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AddActivityRequest:
      nullable: true
      properties:
        attachments:
          description: List of attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "001.006"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: Custom Data
          type: object
          x-stream-index: "001.017"
        expires_at:
          description: Expiration time for the activity
          title: Expires At
          type: string
          x-stream-index: "001.010"
        feeds:
          description: List of feed IDs to add the activity to
          items:
            type: string
          maximum: 255
          minimum: 1
          title: Feed IDs
          type: array
          x-stream-index: "001.004"
        filter_tags:
          description: Tags for filtering activities
          items:
            type: string
          maximum: 255
          title: Filter Tags
          type: array
          x-stream-index: "001.013"
        id:
          description: Optional ID for the activity
          maxLength: 255
          title: Activity ID
          type: string
          x-stream-index: "001.001"
        interest_tags:
          description: Tags for indicating user interests
          items:
            type: string
          maximum: 255
          title: Interest Tags
          type: array
          x-stream-index: "001.014"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location related to the activity
          title: Location
          x-stream-index: "001.009"
        mentioned_user_ids:
          description: List of users mentioned in the activity
          items:
            type: string
          maximum: 255
          title: Mentioned User IDs
          type: array
          x-stream-index: "001.011"
        parent_id:
          description: ID of parent activity for replies/comments
          maxLength: 255
          title: Parent ID
          type: string
          x-stream-index: "001.015"
        poll_id:
          description: ID of a poll to attach to activity
          title: Poll ID
          type: string
          x-stream-index: "001.016"
        search_data:
          additionalProperties: {}
          description: Additional data for search indexing
          title: Search Data
          type: object
          x-stream-index: "001.012"
        text:
          description: Text content of the activity
          title: Text
          type: string
          x-stream-index: "001.005"
        type:
          description: Type of activity
          maxLength: 255
          title: Activity Type
          type: string
          x-stream-index: "001.002"
        visibility:
          description: Visibility setting for the activity
          enum:
          - public
          - private
          - tag
          title: Visibility
          type: string
          x-stream-index: "001.007"
        visibility_tag:
          description: If visibility is 'tag', this is the tag name and is required
          maxLength: 32
          title: Visibility Tag
          type: string
          x-stream-index: "001.008"
      required:
      - type
      - feeds
      title: Activity Request
      type: object
    AddActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The created activity
          title: Activity
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      title: Add Activity Response
      type: object
    AddBookmarkRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the bookmark
          title: Custom Data
          type: object
          x-stream-index: "004"
        folder_id:
          description: ID of the folder to add the bookmark to
          maxLength: 255
          title: Folder ID
          type: string
          x-stream-index: "002"
        new_folder:
          $ref: '#/components/schemas/AddFolderRequest'
          description: Create a new folder for this bookmark
          title: New Folder
          x-stream-index: "003"
      title: Add Bookmark Request
      type: object
    AddBookmarkResponse:
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The created bookmark
          title: Bookmark
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark
      - duration
      title: Add Bookmark Response
      type: object
    AddCommentReactionRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this reaction
          title: boolean
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Optional custom data to add to the reaction
          title: object
          type: object
          x-stream-index: "003"
        enforce_unique:
          description: Whether to enforce unique reactions per user (remove other
            reaction types from the user when adding this one)
          title: boolean
          type: boolean
          x-stream-index: "006"
        skip_push:
          type: boolean
          x-stream-index: "005"
        type:
          description: The type of reaction, eg upvote, like, ...
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      required:
      - type
      type: object
    AddCommentReactionResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment the reaction was added to
          title: object
          x-stream-index: "001"
        duration:
          description: Duration of the request
          title: string
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The created or updated reaction
          title: object
          x-stream-index: "002"
      required:
      - comment
      - reaction
      - duration
      type: object
    AddCommentRequest:
      nullable: true
      properties:
        attachments:
          description: Media attachments for the reply
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "004"
        comment:
          description: Text content of the comment
          title: Comment
          type: string
          x-stream-index: "003"
        create_notification_activity:
          description: Whether to create a notification activity for this comment
          title: Create Notification Activity
          type: boolean
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for the comment
          title: Custom Data
          type: object
          x-stream-index: "007"
        mentioned_user_ids:
          description: List of users mentioned in the reply
          items:
            type: string
          maximum: 255
          title: Mentioned User IDs
          type: array
          x-stream-index: "005"
        object_id:
          description: ID of the object to comment on
          title: Object ID
          type: string
          x-stream-index: "001"
        object_type:
          description: Type of the object to comment on
          title: Object Type
          type: string
          x-stream-index: "002"
        parent_id:
          description: ID of parent comment for replies
          title: Parent ID
          type: string
          x-stream-index: "006"
        skip_push:
          type: boolean
          x-stream-index: "009"
      required:
      - object_id
      - object_type
      - comment
      title: Add Comment Request
      type: object
    AddCommentResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The created comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comment
      - duration
      title: Add Comment Response
      type: object
    AddCommentsBatchRequest:
      nullable: true
      properties:
        comments:
          description: List of comments to add
          items:
            $ref: '#/components/schemas/AddCommentRequest'
          title: Comments
          type: array
          x-stream-index: "001"
      required:
      - comments
      title: Add Comments Batch Request
      type: object
    AddCommentsBatchResponse:
      nullable: true
      properties:
        comments:
          description: List of comments added
          items:
            $ref: '#/components/schemas/CommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comments
      - duration
      title: Add Comments Batch Response
      type: object
    AddFolderRequest:
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the folder
          title: Custom Data
          type: object
          x-stream-index: "002"
        name:
          description: Name of the folder
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      title: Add Folder Request
      type: object
    AddReactionRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this reaction
          title: Create Notification Activity
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Custom data for the reaction
          title: Custom Data
          type: object
          x-stream-index: "003"
        enforce_unique:
          description: Whether to enforce unique reactions per user (remove other
            reaction types from the user when adding this one)
          title: Enforce Unique
          type: boolean
          x-stream-index: "006"
        skip_push:
          type: boolean
          x-stream-index: "005"
        type:
          description: Type of reaction
          maxLength: 255
          title: Reaction Type
          type: string
          x-stream-index: "002"
      required:
      - type
      title: Add Reaction Request
      type: object
    AddReactionResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The created reaction
          title: Reaction
          x-stream-index: "002"
      required:
      - activity
      - reaction
      - duration
      title: Add Reaction Response
      type: object
    AggregatedActivityResponse:
      properties:
        activities:
          description: List of activities in this aggregation
          items:
            $ref: '#/components/schemas/ActivityResponse'
          title: Activities
          type: array
          x-stream-index: "001"
        activity_count:
          description: Number of activities in this aggregation
          format: int32
          title: Activity Count
          type: integer
          x-stream-index: "002"
        created_at:
          description: When the aggregation was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "007"
        group:
          description: Grouping identifier
          title: Group
          type: string
          x-stream-index: "005"
        score:
          description: Ranking score for this aggregation
          format: float
          title: Score
          type: number
          x-stream-index: "006"
        updated_at:
          description: When the aggregation was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "008"
        user_count:
          description: Number of unique users in this aggregation
          format: int32
          title: User Count
          type: integer
          x-stream-index: "003"
        user_count_truncated:
          description: Whether this activity group has been truncated due to exceeding
            the group size limit
          title: User Count Truncated
          type: boolean
          x-stream-index: "004"
      required:
      - activities
      - activity_count
      - user_count
      - user_count_truncated
      - group
      - score
      - created_at
      - updated_at
      title: Aggregated Activity
      type: object
    AggregationConfig:
      properties:
        format:
          type: string
          x-stream-index: "001"
        group_size:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    AnyEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: '*'
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: AnyEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AppEventResponse:
      properties:
        async_url_enrich_enabled:
          description: boolean
          title: Async URL Enrichment Enabled
          type: boolean
          x-stream-index: "002"
        auto_translation_enabled:
          description: boolean
          title: Auto Translation Enabled
          type: boolean
          x-stream-index: "003"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          description: file upload config
          title: File Upload Config
          x-stream-index: "004"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          description: file upload config
          title: Image Upload Config
          x-stream-index: "005"
        name:
          description: string
          title: App name
          type: string
          x-stream-index: "001"
      required:
      - name
      - auto_translation_enabled
      type: object
    AppResponseFields:
      properties:
        async_url_enrich_enabled:
          type: boolean
          x-stream-index: "017"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "020"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "030"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "031"
        name:
          type: string
          x-stream-index: "001"
      required:
      - name
      - organization
      - push_notifications
      - webhook_url
      - moderation_webhook_url
      - channel_configs
      - call_types
      - policies
      - suspended
      - suspended_explanation
      - disable_auth_checks
      - disable_permissions_checks
      - permission_version
      - user_search_disallowed_roles
      - multi_tenant_enabled
      - image_moderation_enabled
      - async_url_enrich_enabled
      - auto_translation_enabled
      - custom_action_handler_url
      - enforce_unique_usernames
      - sqs_url
      - sqs_key
      - sqs_secret
      - sns_topic_arn
      - sns_key
      - sns_secret
      - file_upload_config
      - image_upload_config
      - grants
      - campaign_enabled
      - webhook_events
      - reminders_interval
      - cdn_expiration_seconds
      - video_provider
      - moderation_enabled
      - moderation_multitenant_blocklist_enabled
      - guest_user_creation_disabled
      - event_hooks
      - use_hook_v2
      - user_response_time_enabled
      - moderation_bulk_submit_action_enabled
      - moderation_llm_configurability_enabled
      type: object
    AppUpdatedEvent:
      description: Emitted when app settings are updated
      nullable: true
      properties:
        app:
          $ref: '#/components/schemas/AppEventResponse'
          description: application configuration
          title: App settings
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        type:
          default: app.updated
          description: 'The type of event: "app.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.002"
      required:
      - type
      - created_at
      - custom
      - app
      title: AppUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    Attachment:
      description: An attachment is a message object that represents a file uploaded
        by a user.
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "015"
        asset_url:
          type: string
          x-stream-index: "017"
        author_icon:
          type: string
          x-stream-index: "007"
        author_link:
          type: string
          x-stream-index: "006"
        author_name:
          type: string
          x-stream-index: "005"
        color:
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "018"
        fallback:
          type: string
          x-stream-index: "002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "016"
        footer:
          type: string
          x-stream-index: "013"
        footer_icon:
          type: string
          x-stream-index: "014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "019"
        image_url:
          type: string
          x-stream-index: "011"
        og_scrape_url:
          type: string
          x-stream-index: "020"
        original_height:
          format: int32
          type: integer
          x-stream-index: "022"
        original_width:
          format: int32
          type: integer
          x-stream-index: "021"
        pretext:
          type: string
          x-stream-index: "004"
        text:
          type: string
          x-stream-index: "010"
        thumb_url:
          type: string
          x-stream-index: "012"
        title:
          type: string
          x-stream-index: "008"
        title_link:
          type: string
          x-stream-index: "009"
        type:
          description: Attachment type (e.g. image, video, url)
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - custom
      title: Attachment
      type: object
      x-stream-docs-page-id: file_uploads
    AudioSettingsRequest:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        hifi_audio_enabled:
          type: boolean
          x-stream-index: "008"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - default_device
      type: object
    AudioSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        hifi_audio_enabled:
          type: boolean
          x-stream-index: "008"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - access_request_enabled
      - opus_dtx_enabled
      - redundant_coding_enabled
      - mic_default_on
      - speaker_default_on
      - default_device
      type: object
    AutomodDetails:
      properties:
        action:
          type: string
          x-stream-index: "001"
        image_labels:
          items:
            type: string
          type: array
          x-stream-index: "005"
        message_details:
          $ref: '#/components/schemas/FlagMessageDetails'
          x-stream-index: "004"
        original_message_type:
          type: string
          x-stream-index: "002"
        result:
          $ref: '#/components/schemas/MessageModerationResult'
          x-stream-index: "003"
      type: object
    AutomodPlatformCircumventionConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    AutomodRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "003"
        label:
          type: string
          x-stream-index: "001"
        threshold:
          format: float
          maximum: 1
          minimum: 0
          type: number
          x-stream-index: "002"
      required:
      - label
      - threshold
      - action
      type: object
    AutomodSemanticFiltersConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodSemanticFiltersRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    AutomodSemanticFiltersRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        threshold:
          format: float
          maximum: 1
          minimum: 0
          type: number
          x-stream-index: "002"
      required:
      - name
      - threshold
      - action
      type: object
    AutomodToxicityConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    BackstageSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    BackstageSettingsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - enabled
      type: object
    Ban:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "011"
        expires:
          format: date-time
          type: number
          x-stream-index: "007"
        reason:
          type: string
          x-stream-index: "008"
        shadow:
          type: boolean
          x-stream-index: "009"
        target:
          $ref: '#/components/schemas/User'
          x-stream-index: "006"
      required:
      - shadow
      - created_at
      type: object
    BanActionRequest:
      properties:
        channel_ban_only:
          type: boolean
          x-stream-index: "003"
        delete_messages:
          enum:
          - soft
          - pruning
          - hard
          type: string
          x-stream-index: "005"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "002"
        shadow:
          type: boolean
          x-stream-index: "001"
        timeout:
          format: int32
          type: integer
          x-stream-index: "006"
      type: object
    BanOptions:
      properties:
        delete_messages:
          enum:
          - soft
          - pruning
          - hard
          type: string
          x-stream-index: "005"
        duration:
          format: int32
          type: integer
          x-stream-index: "001"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "002"
        shadow_ban:
          type: boolean
          x-stream-index: "003"
      type: object
    BanRequest:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserRequest'
          description: Details about the user performing the ban
          title: Banned By
          x-stream-index: "008"
        banned_by_id:
          description: ID of the user performing the ban
          title: Banned By ID
          type: string
          x-stream-index: "007"
        channel_cid:
          description: Channel where the ban applies
          title: Channel CID
          type: string
          x-stream-index: "004"
        delete_messages:
          enum:
          - soft
          - pruning
          - hard
          type: string
          x-stream-index: "009"
        ip_ban:
          description: Whether to ban the user's IP address
          title: IP Ban
          type: boolean
          x-stream-index: "006"
        reason:
          description: Optional explanation for the ban
          title: Reason
          type: string
          x-stream-index: "003"
        shadow:
          description: Whether this is a shadow ban
          title: Shadow
          type: boolean
          x-stream-index: "005"
        target_user_id:
          description: ID of the user to ban
          title: Target User ID
          type: string
          x-stream-index: "001"
        timeout:
          description: Duration of the ban in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "002"
      required:
      - target_user_id
      type: object
    BanResponse:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "006"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        expires:
          format: date-time
          type: number
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
      required:
      - created_at
      type: object
    BlockListConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/BlockListRule'
          maximum: 10
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      type: object
    BlockListOptions:
      properties:
        behavior:
          description: Blocklist behavior
          enum:
          - flag
          - block
          - shadow_block
          title: Behavior
          type: string
          x-stream-index: "002"
        blocklist:
          description: Blocklist name
          title: Blocklist
          type: string
          x-stream-index: "001"
      required:
      - blocklist
      - behavior
      type: object
    BlockListResponse:
      description: Block list contains restricted words
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001"
        id:
          type: string
          x-stream-index: "003"
        name:
          description: Block list name
          title: Name
          type: string
          x-stream-index: "004"
        team:
          type: string
          x-stream-index: "007"
        type:
          description: Block list type.
          title: Type
          type: string
          x-stream-index: "005"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "002"
        words:
          description: List of words to block
          items:
            type: string
          title: Words
          type: array
          x-stream-index: "006"
      required:
      - name
      - type
      - words
      title: Block list
      type: object
      x-stream-docs-page-id: block_lists
    BlockListRule:
      properties:
        action:
          enum:
          - flag
          - mask_flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002"
      required:
      - name
      - team
      - action
      type: object
    BlockUserRequest:
      description: BlockUserRequest is the payload for blocking a user.
      nullable: true
      properties:
        user_id:
          description: the user to block
          title: UserID
          type: string
          x-stream-index: "003"
      required:
      - user_id
      title: BlockUserRequest
      type: object
    BlockUserResponse:
      description: BlockUserResponse is the payload for blocking a user.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: BlockUserResponse
      type: object
    BlockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          description: User id to block
          title: BlockedUserID
          type: string
          x-stream-index: "001"
      required:
      - blocked_user_id
      type: object
    BlockUsersResponse:
      nullable: true
      properties:
        blocked_by_user_id:
          description: User id who blocked another user
          title: BlockedByUserID
          type: string
          x-stream-index: "002"
        blocked_user_id:
          description: User id who got blocked
          title: BlockedUserID
          type: string
          x-stream-index: "003"
        created_at:
          description: Timestamp when the user was blocked
          format: date-time
          title: CreatedAt
          type: number
          x-stream-index: "004"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      - blocked_by_user_id
      - blocked_user_id
      - created_at
      type: object
    BlockedUserEvent:
      description: |-
        This event is sent to call participants to notify when a user is blocked on a call, clients can use this event to show a notification.
        If the user is the current user, the client should leave the call screen as well
      properties:
        blocked_by_user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that blocked the user, null if the user was blocked
            by server-side
          title: Blocked by
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.blocked_user
          description: 'The type of event: "call.blocked_user" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that was blocked
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      title: BlockedUserEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BlockedUserResponse:
      nullable: true
      properties:
        blocked_user:
          $ref: '#/components/schemas/UserResponse'
          description: User who got blocked
          title: User
          x-stream-index: "003"
        blocked_user_id:
          description: ID of the user who got blocked
          title: UserID
          type: string
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who blocked another user
          title: User
          x-stream-index: "001"
        user_id:
          description: ID of the user who blocked another user
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_id
      - blocked_user
      - blocked_user_id
      - created_at
      type: object
    BodyguardRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "003"
      required:
      - label
      - action
      - severity_rules
      type: object
    BodyguardSeverityRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        severity:
          enum:
          - low
          - medium
          - high
          - critical
          type: string
          x-stream-index: "001"
      required:
      - severity
      - action
      type: object
    BookmarkAddedEvent:
      description: Emitted when a user bookmarks an activity.
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark.added
          description: 'The type of event: "feeds.bookmark.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the bookmark
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark
      - type
      - created_at
      - custom
      title: BookmarkAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkDeletedEvent:
      description: Emitted when a user deletes a bookmark from an activity.
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark.deleted
          description: 'The type of event: "feeds.bookmark.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the bookmark
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark
      - type
      - created_at
      - custom
      title: BookmarkDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkFolderDeletedEvent:
      description: Emitted when a bookmark folder is deleted.
      nullable: true
      properties:
        bookmark_folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: The bookmark folder that was deleted
          title: Bookmark Folder
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark_folder.deleted
          description: 'The type of event: "feeds.bookmark_folder.deleted" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who deleted the bookmark folder
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark_folder
      - type
      - created_at
      - custom
      title: BookmarkFolderDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkFolderResponse:
      properties:
        created_at:
          description: When the folder was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Custom data for the folder
          title: Custom Data
          type: object
          x-stream-index: "003"
        id:
          description: Unique identifier for the folder
          title: ID
          type: string
          x-stream-index: "001"
        name:
          description: Name of the folder
          title: Name
          type: string
          x-stream-index: "002"
        updated_at:
          description: When the folder was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "005"
      required:
      - id
      - name
      - created_at
      - updated_at
      title: Bookmark Folder
      type: object
    BookmarkFolderUpdatedEvent:
      description: Emitted when a bookmark folder is updated.
      nullable: true
      properties:
        bookmark_folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: The bookmark folder that was updated
          title: Bookmark Folder
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark_folder.updated
          description: 'The type of event: "feeds.bookmark_folder.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the bookmark folder
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark_folder
      - type
      - created_at
      - custom
      title: BookmarkFolderUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkResponse:
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The bookmarked activity
          title: Activity
          x-stream-index: "002"
        created_at:
          description: When the bookmark was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for the bookmark
          title: Custom Data
          type: object
          x-stream-index: "004"
        folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: Folder containing this bookmark
          title: Folder
          x-stream-index: "003"
        updated_at:
          description: When the bookmark was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the bookmark
          title: User
          x-stream-index: "001"
      required:
      - user
      - activity
      - created_at
      - updated_at
      title: Bookmark
      type: object
    BookmarkUpdatedEvent:
      description: Emitted when a user updates a bookmark.
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The updated bookmark
          title: Bookmark
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark.updated
          description: 'The type of event: "feeds.bookmark.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the bookmark
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark
      - type
      - created_at
      - custom
      title: BookmarkUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    Bound:
      properties:
        inclusive:
          type: boolean
          x-stream-index: "002"
        value:
          format: float
          type: number
          x-stream-index: "001"
      required:
      - value
      - inclusive
      type: object
    BroadcastSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettingsRequest'
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettingsRequest'
          x-stream-index: "003"
      type: object
    BroadcastSettingsResponse:
      description: BroadcastSettingsResponse is the payload for broadcasting settings
      properties:
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettingsResponse'
          title: HLS
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettingsResponse'
          title: RTMP
          x-stream-index: "003"
      required:
      - enabled
      - hls
      - rtmp
      title: BroadcastSettingsResponse
      type: object
    CallAcceptedEvent:
      description: This event is sent when a user accepts a notification to join a
        call.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.accepted
          description: 'The type of event: "call.accepted" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who accepted the call
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - call
      - user
      title: CallAcceptedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallClosedCaption:
      description: CallClosedCaption represents a closed caption of a call.
      properties:
        end_time:
          format: date-time
          title: The end time of the closed caption.
          type: number
          x-stream-index: "004"
        id:
          title: The ID of the closed caption.
          type: string
          x-stream-index: "001"
        language:
          title: The language of the closed caption.
          type: string
          x-stream-index: "007"
        service:
          title: The service that generated the closed caption. By default stream
          type: string
          x-stream-index: "008"
        speaker_id:
          title: The speaker ID of the closed caption.
          type: string
          x-stream-index: "005"
        start_time:
          format: date-time
          title: The start time of the closed caption.
          type: number
          x-stream-index: "003"
        text:
          title: The text of the closed caption.
          type: string
          x-stream-index: "002"
        translated:
          title: Whether the closed caption is translated.
          type: boolean
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          title: The user who spoke the closed caption.
          x-stream-index: "006"
      required:
      - id
      - text
      - start_time
      - end_time
      - speaker_id
      - user
      - language
      - translated
      title: CallClosedCaption
      type: object
    CallClosedCaptionsFailedEvent:
      description: This event is sent when call closed captions has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_captions_failed
          description: 'The type of event: "call.closed_captions_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallClosedCaptionsFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallClosedCaptionsStartedEvent:
      description: This event is sent when call closed caption has started
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_captions_started
          description: 'The type of event: "call.closed_captions_started" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallClosedCaptionsStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallClosedCaptionsStoppedEvent:
      description: This event is sent when call closed captions has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_captions_stopped
          description: 'The type of event: "call.transcription_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallClosedCaptionsStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallCreatedEvent:
      description: |-
        This event is sent when a call is created. Clients receiving this event should check if the ringing
        field is set to true and if so, show the call screen
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: the members added to this call
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.created
          description: 'The type of event: "call.created" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallCreatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallDeletedEvent:
      description: This event is sent when a call is deleted. Clients receiving this
        event should leave the call screen
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.deleted
          description: 'The type of event: "call.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      title: CallDeletedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallDurationReport:
      properties:
        histogram:
          items:
            $ref: '#/components/schemas/ReportByHistogramBucket'
          type: array
          x-stream-index: "001"
      required:
      - histogram
      type: object
    CallDurationReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateCallDurationReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    CallEndedEvent:
      description: This event is sent when a call is mark as ended for all its participants.
        Clients receiving this event should leave the call screen
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        reason:
          description: The reason why the call ended, if available
          title: CallEndedReason
          type: string
          x-stream-index: "005"
        type:
          default: call.ended
          description: 'The type of event: "call.ended" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who ended the call, null if the call was ended by
            the server
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - call
      title: CallEndedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallFrameRecordingFailedEvent:
      description: This event is sent when frame recording has failed
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "004"
        type:
          default: call.frame_recording_failed
          description: 'The type of event: "call.frame_recording_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - egress_id
      title: CallFrameRecordingFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallFrameRecordingFrameReadyEvent:
      description: This event is sent when a frame is captured from a call
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        captured_at:
          description: The time the frame was captured
          format: date-time
          title: CapturedAt
          type: number
          x-stream-index: "006"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "008"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        track_type:
          description: The type of the track frame was captured from (TRACK_TYPE_VIDEO|TRACK_TYPE_SCREEN_SHARE)
          title: TrackType
          type: string
          x-stream-index: "004"
        type:
          default: call.frame_recording_ready
          description: 'The type of event: "call.frame_recording_ready" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        url:
          description: The URL of the frame
          title: URL
          type: string
          x-stream-index: "005"
        users:
          additionalProperties:
            $ref: '#/components/schemas/UserResponse'
          description: The users in the frame
          title: Users
          type: object
          x-stream-index: "007"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - track_type
      - url
      - captured_at
      - users
      - egress_id
      title: CallFrameRecordingFrameReadyEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallFrameRecordingStartedEvent:
      description: This event is sent when frame recording has started
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "004"
        type:
          default: call.frame_recording_started
          description: 'The type of event: "call.frame_recording_started" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - egress_id
      title: CallFrameRecordingStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallFrameRecordingStoppedEvent:
      description: This event is sent when frame recording has stopped
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "004"
        type:
          default: call.frame_recording_stopped
          description: 'The type of event: "call.frame_recording_stopped" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - egress_id
      title: CallFrameRecordingStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallHLSBroadcastingFailedEvent:
      description: This event is sent when HLS broadcasting has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.hls_broadcasting_failed
          description: 'The type of event: "call.hls_broadcasting_failed" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallHLSBroadcastingFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallHLSBroadcastingStartedEvent:
      description: This event is sent when HLS broadcasting has started
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        hls_playlist_url:
          type: string
          x-stream-index: "004"
        type:
          default: call.hls_broadcasting_started
          description: 'The type of event: "call.hls_broadcasting_started" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - hls_playlist_url
      title: CallHLSBroadcastingStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallHLSBroadcastingStoppedEvent:
      description: This event is sent when HLS broadcasting has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.hls_broadcasting_stopped
          description: 'The type of event: "call.hls_broadcasting_stopped" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      title: CallHLSBroadcastingStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallIngressResponse:
      description: CallIngressResponse is the payload for ingress settings
      properties:
        rtmp:
          $ref: '#/components/schemas/RTMPIngress'
          title: RTMP
          x-stream-index: "001"
        srt:
          $ref: '#/components/schemas/SRTIngress'
          x-stream-index: "003"
        whip:
          $ref: '#/components/schemas/WHIPIngress'
          title: WHIP
          x-stream-index: "002"
      required:
      - rtmp
      - whip
      - srt
      title: CallIngressResponse
      type: object
    CallLiveStartedEvent:
      description: This event is sent when a call is started. Clients receiving this
        event should start the call.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.live_started
          description: 'The type of event: "call.live_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      title: CallLiveStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberAddedEvent:
      description: This event is sent when one or more members are added to a call
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: the members added to this call
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.member_added
          description: 'The type of event: "call.member_added" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallMemberAddedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberRemovedEvent:
      description: This event is sent when one or more members are removed from a
        call
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: the list of member IDs removed from the call
          items:
            type: string
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.member_removed
          description: 'The type of event: "call.member_removed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallMemberRemovedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberUpdatedEvent:
      description: This event is sent when one or more members are updated
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: The list of members that were updated
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "004"
        type:
          default: call.member_updated
          description: 'The type of event: "call.member_updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - members
      title: CallMemberUpdatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMemberUpdatedPermissionEvent:
      description: This event is sent when one or more members get its role updated
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        capabilities_by_role:
          additionalProperties:
            items:
              type: string
            type: array
          description: The capabilities by role for this call
          title: CapabilitiesByRole
          type: object
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: The list of members that were updated
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "005"
        type:
          default: call.member_updated_permission
          description: 'The type of event: "call.member_added" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - capabilities_by_role
      - members
      title: CallMemberUpdatedPermissionEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallMissedEvent:
      description: This event is sent to call members who did not accept/reject/join
        the call to notify they missed the call
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: List of members who missed the call
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "005"
        notify_user:
          type: boolean
          x-stream-index: "007"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.missed
          description: 'The type of event: "call.notification" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The caller from whom the call was missed
          title: User
          x-stream-index: "006"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      - members
      - user
      - notify_user
      title: CallMissedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallModerationBlurEvent:
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        type:
          default: call.moderation_blur
          type: string
          x-stream-index: "001.001"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user_id
      - custom
      title: CallModerationBlurEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallModerationWarningEvent:
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        message:
          type: string
          x-stream-index: "004"
        type:
          default: call.moderation_warning
          type: string
          x-stream-index: "001.001"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user_id
      - message
      - custom
      title: CallModerationWarningEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallNotificationEvent:
      description: This event is sent to all call members to notify they are getting
        called
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: Call members
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "005"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.notification
          description: 'The type of event: "call.notification" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that sent the call notification
          title: User
          x-stream-index: "006"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      - members
      - user
      title: CallNotificationEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallParticipantCountReport:
      properties:
        histogram:
          items:
            $ref: '#/components/schemas/ReportByHistogramBucket'
          type: array
          x-stream-index: "001"
      required:
      - histogram
      type: object
    CallParticipantCountReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateCallParticipantCountReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    CallParticipantResponse:
      properties:
        joined_at:
          format: date-time
          type: number
          x-stream-index: "004"
        role:
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
        user_session_id:
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_session_id
      - role
      - joined_at
      type: object
    CallReactionEvent:
      description: This event is sent when a reaction is sent in a call, clients should
        use this to show the reaction in the call screen
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          description: the reaction object sent by the user on the call
          title: reaction
          x-stream-index: "003"
        type:
          default: call.reaction_new
          description: 'The type of event: "call.reaction_new" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - reaction
      title: CallReactionEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecording:
      description: CallRecording represents a recording of a call.
      properties:
        end_time:
          format: date-time
          title: The end time of the recording.
          type: number
          x-stream-index: "004"
        filename:
          title: The filename of the recording.
          type: string
          x-stream-index: "001"
        session_id:
          title: The session ID of the recording.
          type: string
          x-stream-index: "005"
        start_time:
          format: date-time
          title: The start time of the recording.
          type: number
          x-stream-index: "003"
        url:
          title: The URL of the recording.
          type: string
          x-stream-index: "002"
      required:
      - filename
      - url
      - start_time
      - end_time
      - session_id
      title: CallRecording
      type: object
    CallRecordingFailedEvent:
      description: This event is sent when call recording has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "003"
        type:
          default: call.recording_failed
          description: 'The type of event: "call.recording_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - egress_id
      title: CallRecordingFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecordingReadyEvent:
      description: This event is sent when call recording is ready
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        call_recording:
          $ref: '#/components/schemas/CallRecording'
          description: The call recording object
          title: CallRecording
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "004"
        type:
          default: call.recording_ready
          description: 'The type of event: "call.recording_ready" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call_recording
      - egress_id
      title: CallRecordingReadyEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecordingStartedEvent:
      description: This event is sent when call recording has started
      properties:
        call_cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        egress_id:
          type: string
          x-stream-index: "001"
        type:
          default: call.recording_started
          description: 'The type of event: "call.recording_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "002.001"
      required:
      - egress_id
      - type
      - created_at
      - call_cid
      title: CallRecordingStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRecordingStoppedEvent:
      description: This event is sent when call recording has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        egress_id:
          type: string
          x-stream-index: "001"
        type:
          default: call.recording_stopped
          description: 'The type of event: "call.recording_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "002.001"
      required:
      - egress_id
      - type
      - created_at
      - call_cid
      title: CallRecordingStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: recording
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRejectedEvent:
      description: This event is sent when a user rejects a notification to join a
        call.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        reason:
          description: 'Provides information about why the call was rejected. You
            can provide any value, but the Stream API and SDKs use these default values:
            rejected, cancel, timeout and busy'
          title: Reason
          type: string
          x-stream-index: "005"
        type:
          default: call.rejected
          description: 'The type of event: "call.rejected" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who rejected the call
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - call
      - user
      title: CallRejectedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallReportResponse:
      properties:
        ended_at:
          format: date-time
          type: number
          x-stream-index: "003"
        score:
          format: float
          type: number
          x-stream-index: "001"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002"
      required:
      - score
      type: object
    CallRequest:
      description: CallRequest is the payload for creating a call.
      properties:
        channel_cid:
          type: string
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        members:
          items:
            $ref: '#/components/schemas/MemberRequest'
          maximum: 100
          type: array
          x-stream-index: "005"
        settings_override:
          $ref: '#/components/schemas/CallSettingsRequest'
          x-stream-index: "006"
        starts_at:
          format: date-time
          type: number
          x-stream-index: "007"
        team:
          type: string
          x-stream-index: "001"
        video:
          type: boolean
          x-stream-index: "008"
      title: CallRequest
      type: object
    CallResponse:
      description: Represents a call
      properties:
        backstage:
          type: boolean
          x-stream-index: "017"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "019"
        captioning:
          type: boolean
          x-stream-index: "013"
        channel_cid:
          type: string
          x-stream-index: "025"
        cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: The user that created the call
          title: Created By
          x-stream-index: "007"
        current_session_id:
          type: string
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        egress:
          $ref: '#/components/schemas/EgressResponse'
          x-stream-index: "022"
        ended_at:
          description: Date/time when the call ended
          format: date-time
          title: Ended At
          type: number
          x-stream-index: "015"
        id:
          description: Call ID
          title: ID
          type: string
          x-stream-index: "003"
        ingress:
          $ref: '#/components/schemas/CallIngressResponse'
          x-stream-index: "020"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "024"
        recording:
          type: boolean
          x-stream-index: "011"
        session:
          $ref: '#/components/schemas/CallSessionResponse'
          x-stream-index: "021"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          x-stream-index: "018"
        starts_at:
          description: Date/time when the call will start
          format: date-time
          title: Starts At
          type: number
          x-stream-index: "016"
        team:
          type: string
          x-stream-index: "006"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailResponse'
          x-stream-index: "023"
        transcribing:
          type: boolean
          x-stream-index: "012"
        translating:
          type: boolean
          x-stream-index: "014"
        type:
          description: The type of call
          title: Type
          type: string
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
      required:
      - type
      - id
      - cid
      - current_session_id
      - created_by
      - custom
      - created_at
      - updated_at
      - recording
      - transcribing
      - captioning
      - translating
      - backstage
      - settings
      - blocked_user_ids
      - ingress
      - egress
      title: CallResponse
      type: object
    CallRingEvent:
      description: This event is sent to all call members to notify they are getting
        called
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "005"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        members:
          description: Call members
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "006"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.ring
          description: 'The type of event: "call.notification" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that sent the call notification
          title: User
          x-stream-index: "007"
        video:
          type: boolean
          x-stream-index: "008"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      - members
      - user
      - video
      title: CallRingEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: ring
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRtmpBroadcastFailedEvent:
      description: This event is sent when a call RTMP broadcast has failed
      properties:
        call_cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "002.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.002"
        name:
          description: Name of the given RTMP broadcast
          title: Name
          type: string
          x-stream-index: "003"
        type:
          default: call.rtmp_broadcast_failed
          description: 'The type of event: "call.rtmp_broadcast_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - name
      title: CallRtmpBroadcastFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRtmpBroadcastStartedEvent:
      description: This event is sent when RTMP broadcast has started
      properties:
        call_cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "002.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.002"
        name:
          description: Name of the given RTMP broadcast
          title: Name
          type: string
          x-stream-index: "003"
        type:
          default: call.rtmp_broadcast_started
          description: 'The type of event: "call.rtmp_broadcast_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - name
      title: CallRtmpBroadcastStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallRtmpBroadcastStoppedEvent:
      description: This event is sent when RTMP broadcast has stopped
      properties:
        call_cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "002.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.002"
        name:
          description: Name of the given RTMP broadcast
          title: Name
          type: string
          x-stream-index: "003"
        type:
          default: call.rtmp_broadcast_stopped
          description: 'The type of event: "call.rtmp_broadcast_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - name
      title: CallRtmpBroadcastStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: streaming
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionEndedEvent:
      description: This event is sent when a call session ends
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_ended
          description: 'The type of event: "call.session_ended" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      title: CallSessionEndedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionParticipantCountsUpdatedEvent:
      description: This event is sent when the participant counts in a call session
        are updated
      properties:
        anonymous_participant_count:
          format: int32
          type: integer
          x-stream-index: "005"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        participants_count_by_role:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "004"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_participant_count_updated
          description: 'The type of event: "call.session_participant_count_updated"
            in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - participants_count_by_role
      - anonymous_participant_count
      title: CallSessionParticipantCountsUpdatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionParticipantJoinedEvent:
      description: This event is sent when a participant joins a call session
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        participant:
          $ref: '#/components/schemas/CallParticipantResponse'
          description: The participant that joined the session
          title: Participant
          x-stream-index: "004"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_participant_joined
          description: 'The type of event: "call.session_participant_joined" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - participant
      title: CallSessionParticipantJoinedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionParticipantLeftEvent:
      description: This event is sent when a participant leaves a call session
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        duration_seconds:
          description: The duration participant was in the session in seconds
          format: int32
          title: Duration
          type: integer
          x-stream-index: "005"
        participant:
          $ref: '#/components/schemas/CallParticipantResponse'
          description: The participant that left the session
          title: Participant
          x-stream-index: "004"
        reason:
          description: The reason why the participant left the session
          title: Reason
          type: string
          x-stream-index: "006"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_participant_left
          description: 'The type of event: "call.session_participant_left" in this
            case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - participant
      - duration_seconds
      title: CallSessionParticipantLeftEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSessionResponse:
      properties:
        accepted_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "008"
        anonymous_participant_count:
          format: int32
          type: integer
          x-stream-index: "006"
        ended_at:
          format: date-time
          type: number
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        live_ended_at:
          format: date-time
          type: number
          x-stream-index: "011"
        live_started_at:
          format: date-time
          type: number
          x-stream-index: "010"
        missed_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "009"
        participants:
          items:
            $ref: '#/components/schemas/CallParticipantResponse'
          type: array
          x-stream-index: "004"
        participants_count_by_role:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "005"
        rejected_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "007"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002"
        timer_ends_at:
          format: date-time
          type: number
          x-stream-index: "012"
      required:
      - id
      - participants
      - participants_count_by_role
      - anonymous_participant_count
      - rejected_by
      - accepted_by
      - missed_by
      type: object
    CallSessionStartedEvent:
      description: This event is sent when a call session starts
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "004"
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.session_started
          description: 'The type of event: "call.session_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - call
      title: CallSessionStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: session
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallSettingsRequest:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettingsRequest'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettingsRequest'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettingsRequest'
          x-stream-index: "010"
        frame_recording:
          $ref: '#/components/schemas/FrameRecordingSettingsRequest'
          x-stream-index: "006"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettingsRequest'
          x-stream-index: "003"
        ingress:
          $ref: '#/components/schemas/IngressSettingsRequest'
          x-stream-index: "014"
        limits:
          $ref: '#/components/schemas/LimitsSettingsRequest'
          x-stream-index: "012"
        recording:
          $ref: '#/components/schemas/RecordSettingsRequest'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettingsRequest'
          x-stream-index: "007"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettingsRequest'
          x-stream-index: "008"
        session:
          $ref: '#/components/schemas/SessionSettingsRequest'
          x-stream-index: "013"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettingsRequest'
          x-stream-index: "011"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettingsRequest'
          x-stream-index: "009"
        video:
          $ref: '#/components/schemas/VideoSettingsRequest'
          x-stream-index: "004"
      type: object
    CallSettingsResponse:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettingsResponse'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettingsResponse'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettingsResponse'
          x-stream-index: "003"
        frame_recording:
          $ref: '#/components/schemas/FrameRecordingSettingsResponse'
          x-stream-index: "006"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettingsResponse'
          x-stream-index: "004"
        ingress:
          $ref: '#/components/schemas/IngressSettingsResponse'
          x-stream-index: "014"
        limits:
          $ref: '#/components/schemas/LimitsSettingsResponse'
          x-stream-index: "012"
        recording:
          $ref: '#/components/schemas/RecordSettingsResponse'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettingsResponse'
          x-stream-index: "007"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettingsResponse'
          x-stream-index: "008"
        session:
          $ref: '#/components/schemas/SessionSettingsResponse'
          x-stream-index: "013"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettingsResponse'
          x-stream-index: "011"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettingsResponse'
          x-stream-index: "009"
        video:
          $ref: '#/components/schemas/VideoSettingsResponse'
          x-stream-index: "010"
      required:
      - audio
      - backstage
      - broadcasting
      - geofencing
      - recording
      - frame_recording
      - ring
      - screensharing
      - transcription
      - video
      - thumbnails
      - limits
      - session
      type: object
    CallStateResponseFields:
      description: CallStateResponseFields is the payload for call state response
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001"
        members:
          description: List of call members
          items:
            $ref: '#/components/schemas/MemberResponse'
          title: Members
          type: array
          x-stream-index: "002"
        membership:
          $ref: '#/components/schemas/MemberResponse'
          description: Current user membership object
          title: Membership
          x-stream-index: "003"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      title: CallStateResponseFields
      type: object
    CallStatsParticipant:
      properties:
        latest_activity_at:
          format: date-time
          type: number
          x-stream-index: "005"
        name:
          type: string
          x-stream-index: "002"
        roles:
          items:
            type: string
          type: array
          x-stream-index: "003"
        sessions:
          items:
            $ref: '#/components/schemas/CallStatsParticipantSession'
          type: array
          x-stream-index: "004"
        user_id:
          type: string
          x-stream-index: "001"
      required:
      - user_id
      - sessions
      type: object
    CallStatsParticipantCounts:
      properties:
        live_sessions:
          format: int32
          type: integer
          x-stream-index: "003"
        participants:
          format: int32
          type: integer
          x-stream-index: "001"
        publishers:
          format: int32
          type: integer
          x-stream-index: "004"
        sessions:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - participants
      - sessions
      - live_sessions
      - publishers
      type: object
    CallStatsParticipantSession:
      properties:
        cq_score:
          format: int32
          type: integer
          x-stream-index: "008"
        ended_at:
          format: date-time
          type: number
          x-stream-index: "004"
        is_live:
          type: boolean
          x-stream-index: "005"
        published_tracks:
          $ref: '#/components/schemas/PublishedTrackFlags'
          x-stream-index: "007"
        publisher_type:
          type: string
          x-stream-index: "006"
        started_at:
          format: date-time
          type: number
          x-stream-index: "003"
        unified_session_id:
          type: string
          x-stream-index: "002"
        user_session_id:
          type: string
          x-stream-index: "001"
      required:
      - user_session_id
      - is_live
      - published_tracks
      type: object
    CallStatsReportReadyEvent:
      description: This event is sent when the insights report is ready
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.stats_report_ready
          description: The type of event, "call.report_ready" in this case
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      title: CallStatsReportReadyEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallStatsReportSummaryResponse:
      properties:
        call_cid:
          type: string
          x-stream-index: "001"
        call_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "008"
        call_session_id:
          type: string
          x-stream-index: "002"
        call_status:
          type: string
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        first_stats_time:
          format: date-time
          type: number
          x-stream-index: "003"
        min_user_rating:
          format: int32
          type: integer
          x-stream-index: "006"
        quality_score:
          format: int32
          type: integer
          x-stream-index: "005"
      required:
      - call_cid
      - call_session_id
      - first_stats_time
      - call_status
      - call_duration_seconds
      type: object
    CallTranscription:
      description: CallTranscription represents a transcription of a call.
      properties:
        end_time:
          format: date-time
          title: The end time of the transcription.
          type: number
          x-stream-index: "004"
        filename:
          title: The filename of the transcription.
          type: string
          x-stream-index: "001"
        session_id:
          title: The session ID of the transcription.
          type: string
          x-stream-index: "005"
        start_time:
          format: date-time
          title: The start time of the transcription.
          type: number
          x-stream-index: "003"
        url:
          title: The URL of the transcription.
          type: string
          x-stream-index: "002"
      required:
      - filename
      - url
      - start_time
      - end_time
      - session_id
      title: CallTranscription
      type: object
    CallTranscriptionFailedEvent:
      description: This event is sent when call transcription has failed
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "003"
        error:
          description: The error message detailing why transcription failed.
          title: string
          type: string
          x-stream-index: "004"
        type:
          default: call.transcription_failed
          description: 'The type of event: "call.transcription_failed" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - egress_id
      title: CallTranscriptionFailedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallTranscriptionReadyEvent:
      description: This event is sent when call transcription is ready
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        call_transcription:
          $ref: '#/components/schemas/CallTranscription'
          description: The call transcription object
          title: CallTranscription
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "004"
        type:
          default: call.transcription_ready
          description: 'The type of event: "call.transcription_ready" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call_transcription
      - egress_id
      title: CallTranscriptionReadyEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallTranscriptionStartedEvent:
      description: This event is sent when call transcription has started
      properties:
        call_cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        egress_id:
          type: string
          x-stream-index: "001"
        type:
          default: call.transcription_started
          description: 'The type of event: "call.transcription_started" in this case'
          title: Event Type
          type: string
          x-stream-index: "002.001"
      required:
      - egress_id
      - type
      - created_at
      - call_cid
      title: CallTranscriptionStartedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallTranscriptionStoppedEvent:
      description: This event is sent when call transcription has stopped
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        egress_id:
          type: string
          x-stream-index: "003"
        type:
          default: call.transcription_stopped
          description: 'The type of event: "call.transcription_stopped" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - egress_id
      title: CallTranscriptionStoppedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallUpdatedEvent:
      description: |-
        This event is sent when a call is updated, clients should use this update the local state of the call.
        This event also contains the capabilities by role for the call, clients should update the own_capability for the current.
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: Call object
          title: Call
          x-stream-index: "003"
        call_cid:
          type: string
          x-stream-index: "002.001"
        capabilities_by_role:
          additionalProperties:
            items:
              type: string
            type: array
          description: The capabilities by role for this call
          title: CapabilitiesByRole
          type: object
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.updated
          description: 'The type of event: "call.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - call
      - capabilities_by_role
      title: CallUpdatedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallUserFeedbackSubmittedEvent:
      description: This event is sent when a user submits feedback for a call.
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        custom:
          additionalProperties: {}
          description: Custom data provided by the user
          title: Custom
          type: object
          x-stream-index: "007"
        rating:
          description: The rating given by the user (1-5)
          format: int32
          title: Rating
          type: integer
          x-stream-index: "005"
        reason:
          description: The reason provided by the user for the rating
          title: Reason
          type: string
          x-stream-index: "006"
        sdk:
          type: string
          x-stream-index: "008"
        sdk_version:
          type: string
          x-stream-index: "009"
        session_id:
          description: Call session ID
          title: Session ID
          type: string
          x-stream-index: "003.001"
        type:
          default: call.user_feedback_submitted
          description: The type of event, "call.user_feedback" in this case
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who submitted the feedback
          title: User
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - session_id
      - user
      - rating
      title: CallUserFeedbackSubmittedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallUserMutedEvent:
      description: This event is sent when a call member is muted
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        from_user_id:
          type: string
          x-stream-index: "003"
        muted_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "005"
        type:
          default: call.user_muted
          description: 'The type of event: "call.user_muted" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - from_user_id
      - muted_user_ids
      - reason
      title: CallUserMutedEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CallsPerDayReport:
      properties:
        count:
          format: int64
          type: integer
          x-stream-index: "001"
      required:
      - count
      type: object
    CallsPerDayReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateCallsPerDayReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    CastPollVoteRequest:
      nullable: true
      properties:
        vote:
          $ref: '#/components/schemas/VoteData'
          description: Vote data
          title: VoteData
          x-stream-index: "004"
      type: object
    Channel:
      properties:
        active_live_locations:
          items:
            $ref: '#/components/schemas/SharedLocation'
          type: array
          x-stream-index: "035"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "030"
        auto_translation_language:
          type: string
          x-stream-index: "031"
        cid:
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "027"
        config_overrides:
          $ref: '#/components/schemas/ConfigOverrides'
          x-stream-index: "028"
        cooldown:
          format: int32
          type: integer
          x-stream-index: "032"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "019"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        disabled:
          type: boolean
          x-stream-index: "017"
        frozen:
          type: boolean
          x-stream-index: "016"
        id:
          type: string
          x-stream-index: "004"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "023"
        last_campaigns:
          type: string
          x-stream-index: "033"
        last_message_at:
          format: date-time
          type: number
          x-stream-index: "006"
        member_count:
          format: int32
          type: integer
          x-stream-index: "021"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "020"
        members_lookup:
          additionalProperties:
            $ref: '#/components/schemas/ChannelMemberLookup'
          type: object
          x-stream-index: "022"
        message_count:
          format: int64
          type: integer
          x-stream-index: "036"
        message_count_updated_at:
          format: date-time
          type: number
          x-stream-index: "037"
        team:
          type: string
          x-stream-index: "029"
        truncated_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "015"
        type:
          type: string
          x-stream-index: "005"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
      required:
      - cid
      - id
      - type
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      - auto_translation_language
      type: object
    ChannelConfig:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "001.027"
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: "001.022"
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: "001.023"
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: "001.028"
        blocklist:
          type: string
          x-stream-index: "001.024"
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: "001.025"
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: "001.026"
        commands:
          items:
            type: string
          type: array
          x-stream-index: "003"
        connect_events:
          type: boolean
          x-stream-index: "001.004"
        count_messages:
          type: boolean
          x-stream-index: "001.019"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        custom_events:
          type: boolean
          x-stream-index: "001.012"
        mark_messages_pending:
          type: boolean
          x-stream-index: "001.015"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "001.021"
        mutes:
          type: boolean
          x-stream-index: "001.009"
        name:
          type: string
          x-stream-index: "001.001"
        partition_size:
          format: int32
          type: integer
          x-stream-index: "001.029"
        partition_ttl:
          type: integer
          x-stream-index: "001.030"
        polls:
          type: boolean
          x-stream-index: "001.016"
        push_notifications:
          type: boolean
          x-stream-index: "001.013"
        quotes:
          type: boolean
          x-stream-index: "001.008"
        reactions:
          type: boolean
          x-stream-index: "001.006"
        read_events:
          type: boolean
          x-stream-index: "001.003"
        reminders:
          type: boolean
          x-stream-index: "001.014"
        replies:
          type: boolean
          x-stream-index: "001.007"
        search:
          type: boolean
          x-stream-index: "001.005"
        shared_locations:
          type: boolean
          x-stream-index: "001.018"
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: "001.031"
        typing_events:
          type: boolean
          x-stream-index: "001.002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        uploads:
          type: boolean
          x-stream-index: "001.010"
        url_enrichment:
          type: boolean
          x-stream-index: "001.011"
        user_message_reminders:
          type: boolean
          x-stream-index: "001.017"
      required:
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - user_message_reminders
      - shared_locations
      - count_messages
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - created_at
      - updated_at
      - commands
      type: object
    ChannelConfigWithInfo:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 001.002.027
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 001.002.022
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.023
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 001.002.028
        blocklist:
          type: string
          x-stream-index: 001.002.024
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.025
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 001.002.026
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
          x-stream-index: "001.003"
        connect_events:
          type: boolean
          x-stream-index: 001.002.004
        count_messages:
          type: boolean
          x-stream-index: 001.002.019
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.003
        custom_events:
          type: boolean
          x-stream-index: 001.002.012
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 001.002.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 001.002.021
        mutes:
          type: boolean
          x-stream-index: 001.002.009
        name:
          type: string
          x-stream-index: 001.002.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 001.002.029
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 001.002.030
        polls:
          type: boolean
          x-stream-index: 001.002.016
        push_notifications:
          type: boolean
          x-stream-index: 001.002.013
        quotes:
          type: boolean
          x-stream-index: 001.002.008
        reactions:
          type: boolean
          x-stream-index: 001.002.006
        read_events:
          type: boolean
          x-stream-index: 001.002.003
        reminders:
          type: boolean
          x-stream-index: 001.002.014
        replies:
          type: boolean
          x-stream-index: 001.002.007
        search:
          type: boolean
          x-stream-index: 001.002.005
        shared_locations:
          type: boolean
          x-stream-index: 001.002.018
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 001.002.031
        typing_events:
          type: boolean
          x-stream-index: 001.002.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        uploads:
          type: boolean
          x-stream-index: 001.002.010
        url_enrichment:
          type: boolean
          x-stream-index: 001.002.011
        user_message_reminders:
          type: boolean
          x-stream-index: 001.002.017
      required:
      - created_at
      - updated_at
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - user_message_reminders
      - shared_locations
      - count_messages
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - commands
      type: object
    ChannelCreatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.created
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: ChannelCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelDeletedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        team:
          type: string
          x-stream-index: "001.001"
        type:
          default: channel.deleted
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelFrozenEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.frozen
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: ChannelFrozenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelGetOrCreateRequest:
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/ChannelInput'
          x-stream-index: "003"
        hide_for_creator:
          description: Whether this channel will be hidden for the user who created
            the channel or not
          title: Hide for creator
          type: boolean
          x-stream-index: "007"
        members:
          $ref: '#/components/schemas/PaginationParams'
          x-stream-index: "010"
        messages:
          $ref: '#/components/schemas/MessagePaginationParams'
          x-stream-index: "009"
        presence:
          description: Fetch user presence info
          title: Presence
          type: boolean
          x-stream-index: "006"
        state:
          description: Refresh channel state
          title: State
          type: boolean
          x-stream-index: "005"
        thread_unread_counts:
          type: boolean
          x-stream-index: "008"
        watch:
          description: Start watching the channel
          title: Watch
          type: boolean
          x-stream-index: "004"
        watchers:
          $ref: '#/components/schemas/PaginationParams'
          x-stream-index: "011"
      type: object
    ChannelHiddenEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        clear_history:
          type: boolean
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        type:
          default: channel.hidden
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - clear_history
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - type
      - created_at
      title: ChannelHiddenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelInput:
      properties:
        auto_translation_enabled:
          description: Enable or disable auto translation
          title: Auto translation
          type: boolean
          x-stream-index: "005"
        auto_translation_language:
          description: Switch auto translation language
          title: Auto translation language
          type: string
          x-stream-index: "006"
        config_overrides:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "024"
        created_by:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "009"
        created_by_id:
          type: string
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "015"
        disabled:
          type: boolean
          x-stream-index: "014"
        frozen:
          description: Freeze or unfreeze the channel
          title: Frozen
          type: boolean
          x-stream-index: "013"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "016"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "018"
        team:
          description: Team the channel belongs to (if multi-tenant mode is enabled)
          title: Team
          type: string
          x-stream-index: "004"
        truncated_by_id:
          type: string
          x-stream-index: "010"
      type: object
    ChannelKickedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.kicked
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelKickedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelMember:
      nullable: true
      properties:
        archived_at:
          format: date-time
          type: number
          x-stream-index: "015"
        ban_expires:
          description: Expiration date of the ban
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "013"
        banned:
          description: Whether member is banned this channel or not
          title: Banned
          type: boolean
          x-stream-index: "012"
        channel_role:
          description: Role of the member in the channel
          title: Channel Role
          type: string
          x-stream-index: "018"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        deleted_messages:
          items:
            type: string
          type: array
          x-stream-index: "020"
        invite_accepted_at:
          description: Date when invite was accepted
          format: date-time
          title: Invited accepted at
          type: number
          x-stream-index: "006"
        invite_rejected_at:
          description: Date when invite was rejected
          format: date-time
          title: Invited rejected at
          type: number
          x-stream-index: "007"
        invited:
          description: Whether member was invited or not
          title: Invited
          type: boolean
          x-stream-index: "005"
        is_moderator:
          description: Whether member is channel moderator or not
          title: Is moderator
          type: boolean
          x-stream-index: "003"
        notifications_muted:
          type: boolean
          x-stream-index: "019"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "016"
        role:
          description: 'Permission level of the member in the channel (DEPRECATED:
            use channel_role instead)'
          enum:
          - member
          - moderator
          - admin
          - owner
          title: Role
          type: string
          x-stream-index: "017"
        shadow_banned:
          description: Whether member is shadow banned in this channel or not
          title: Shadow banned
          type: boolean
          x-stream-index: "014"
        status:
          type: string
          x-stream-index: "008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        user_id:
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - custom
      - created_at
      - updated_at
      - banned
      - shadow_banned
      - channel_role
      - notifications_muted
      title: Channel member
      type: object
    ChannelMemberLookup:
      nullable: true
      properties:
        archived:
          type: boolean
          x-stream-index: "003"
        archived_at:
          format: date-time
          type: number
          x-stream-index: "006"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "007"
        banned:
          type: boolean
          x-stream-index: "004"
        hidden:
          type: boolean
          x-stream-index: "001"
        pinned:
          type: boolean
          x-stream-index: "002"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "005"
      required:
      - hidden
      - pinned
      - archived
      - banned
      type: object
    ChannelMemberResponse:
      properties:
        channel_role:
          type: string
          x-stream-index: "001"
      required:
      - channel_role
      type: object
    ChannelMute:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel that is muted
          title: Channel
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: number
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Owner of channel mute
          title: User
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    ChannelOwnCapability:
      description: All possibility of string to use
      enum:
      - ban-channel-members
      - cast-poll-vote
      - connect-events
      - create-attachment
      - delete-any-message
      - delete-channel
      - delete-own-message
      - flag-message
      - freeze-channel
      - join-channel
      - leave-channel
      - mute-channel
      - pin-message
      - query-poll-votes
      - quote-message
      - read-events
      - search-messages
      - send-custom-events
      - send-links
      - send-message
      - send-poll
      - send-reaction
      - send-reply
      - send-restricted-visibility-message
      - send-typing-events
      - set-channel-cooldown
      - share-location
      - skip-slow-mode
      - slow-mode
      - typing-events
      - update-any-message
      - update-channel
      - update-channel-members
      - update-own-message
      - update-thread
      - upload-file
      title: ChannelOwnCapability
      type: string
    ChannelPushPreferences:
      nullable: true
      properties:
        chat_level:
          type: string
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "002"
      type: object
    ChannelResponse:
      description: Represents channel in chat
      properties:
        auto_translation_enabled:
          description: Whether auto translation is enabled or not
          title: Auto translation
          type: boolean
          x-stream-index: "017"
        auto_translation_language:
          description: Language to translate to when auto translation is active
          title: Auto translation language
          type: string
          x-stream-index: "018"
        blocked:
          description: Whether this channel is blocked by current user or not
          title: Blocked
          type: boolean
          x-stream-index: "023"
        cid:
          description: Channel CID (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfigWithInfo'
          description: Channel configuration
          title: ChannelConfigWithInfo
          x-stream-index: "013"
        cooldown:
          description: Cooldown period after sending each message
          format: int32
          title: Cooldown
          type: integer
          x-stream-index: "020"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "005"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Creator of the channel
          title: UserResponse
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "026"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "007"
        disabled:
          type: boolean
          x-stream-index: "010"
        frozen:
          description: Whether channel is frozen or not
          title: Frozen
          type: boolean
          x-stream-index: "009"
        hidden:
          description: Whether this channel is hidden by current user or not
          title: Hidden
          type: boolean
          x-stream-index: "022"
        hide_messages_before:
          description: Date since when the message history is accessible
          format: date-time
          title: Hide messages before
          type: number
          x-stream-index: "019"
        id:
          description: Channel unique ID
          title: ID
          type: string
          x-stream-index: "001"
        last_message_at:
          description: Date of the last message sent
          format: date-time
          title: Last message at
          type: number
          x-stream-index: "004"
        member_count:
          description: Number of members in the channel
          format: int32
          title: Member count
          type: integer
          x-stream-index: "012"
        members:
          description: List of channel members (max 100)
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: ChannelMembers
          type: array
          x-stream-index: "011"
        message_count:
          description: Number of messages in the channel
          format: int64
          title: Message count
          type: integer
          x-stream-index: "027"
        mute_expires_at:
          description: Date of mute expiration
          format: date-time
          title: Mute expires at
          type: number
          x-stream-index: "015"
        muted:
          description: Whether this channel is muted or not
          title: Muted
          type: boolean
          x-stream-index: "014"
        own_capabilities:
          description: List of channel capabilities of authenticated user
          items:
            $ref: '#/components/schemas/ChannelOwnCapability'
          title: ChannelOwnCapability
          type: array
          x-stream-index: "021"
        team:
          description: Team the channel belongs to (multi-tenant only)
          title: Team
          type: string
          x-stream-index: "016"
        truncated_at:
          description: Date of the latest truncation of the channel
          format: date-time
          title: UserResponse
          type: number
          x-stream-index: "024"
        truncated_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "025"
        type:
          description: Type of the channel
          title: Type
          type: string
          x-stream-docs-page-id: channel_features
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "006"
      required:
      - id
      - type
      - cid
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      title: Channel
      type: object
    ChannelStateResponse:
      nullable: true
      properties:
        active_live_locations:
          items:
            $ref: '#/components/schemas/SharedLocationResponseData'
          type: array
          x-stream-index: "001.015"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.001"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "001.014"
        duration:
          type: string
          x-stream-index: "002.001"
        hidden:
          type: boolean
          x-stream-index: "001.011"
        hide_messages_before:
          format: date-time
          type: number
          x-stream-index: "001.012"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "001.007"
        membership:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.008"
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001.002"
        pending_messages:
          items:
            $ref: '#/components/schemas/PendingMessageResponse'
          type: array
          x-stream-index: "001.013"
        pinned_messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001.003"
        push_preferences:
          $ref: '#/components/schemas/ChannelPushPreferences'
          x-stream-index: "001.009"
        read:
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          type: array
          x-stream-index: "001.006"
        threads:
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          type: array
          x-stream-index: "001.010"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.004"
        watchers:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.005"
      required:
      - messages
      - pinned_messages
      - members
      - threads
      - duration
      type: object
    ChannelStateResponseFields:
      properties:
        active_live_locations:
          description: Active live locations in the channel
          items:
            $ref: '#/components/schemas/SharedLocationResponseData'
          title: Active Live Locations
          type: array
          x-stream-index: "015"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "014"
        hidden:
          description: Whether this channel is hidden or not
          title: Hidden
          type: boolean
          x-stream-index: "011"
        hide_messages_before:
          description: Messages before this date are hidden from the user
          format: date-time
          title: Hide messages before
          type: number
          x-stream-index: "012"
        members:
          description: List of channel members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "007"
        membership:
          $ref: '#/components/schemas/ChannelMember'
          description: Current user membership object
          title: Membership
          x-stream-index: "008"
        messages:
          description: List of channel messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Message
          type: array
          x-stream-index: "002"
        pending_messages:
          description: Pending messages that this user has sent
          items:
            $ref: '#/components/schemas/PendingMessageResponse'
          title: Pending messages
          type: array
          x-stream-index: "013"
        pinned_messages:
          description: List of pinned messages in the channel
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Pinned messages
          type: array
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "003"
        push_preferences:
          $ref: '#/components/schemas/ChannelPushPreferences'
          x-stream-index: "009"
        read:
          description: List of read states
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          title: Read
          type: array
          x-stream-index: "006"
        threads:
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          type: array
          x-stream-index: "010"
        watcher_count:
          description: Number of channel watchers
          format: int32
          title: Watcher count
          type: integer
          x-stream-index: "004"
        watchers:
          description: List of user who is watching the channel
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Watchers
          type: array
          x-stream-index: "005"
      required:
      - messages
      - pinned_messages
      - members
      - threads
      type: object
    ChannelStopWatchingRequest:
      nullable: true
      type: object
    ChannelTruncatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.004"
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "001.005"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: channel.truncated
          type: string
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - type
      - created_at
      title: ChannelTruncatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUnFrozenEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: channel.unfrozen
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: ChannelUnFrozenEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelUpdatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "004.004"
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "004.005"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: channel.updated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: ChannelUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChannelVisibleEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        type:
          default: channel.visible
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ChannelVisibleEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ChatActivityStatsResponse:
      properties:
        Messages:
          $ref: '#/components/schemas/MessageStatsResponse'
          x-stream-index: "001"
      type: object
    ClosedCaptionEvent:
      description: This event is sent when closed captions are being sent in a call,
        clients should use this to show the closed captions in the call screen
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        closed_caption:
          $ref: '#/components/schemas/CallClosedCaption'
          description: The closed caption object
          title: CallClosedCaption
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.closed_caption
          description: 'The type of event: "call.closed_caption" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - call_cid
      - closed_caption
      title: ClosedCaptionEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: transcription
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CollectUserFeedbackRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        rating:
          format: int32
          maximum: 5
          minimum: 1
          type: integer
          x-stream-index: "007"
        reason:
          maxLength: 1000
          type: string
          x-stream-index: "008"
        sdk:
          maxLength: 50
          type: string
          x-stream-index: "005"
        sdk_version:
          maxLength: 50
          type: string
          x-stream-index: "006"
        user_session_id:
          maxLength: 50
          type: string
          x-stream-index: "004"
      required:
      - sdk
      - sdk_version
      - rating
      type: object
    CollectUserFeedbackResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    Command:
      description: Represents custom chat command
      nullable: true
      properties:
        args:
          description: Arguments help text, shown in commands auto-completion
          title: Arguments
          type: string
          x-stream-index: "006"
        created_at:
          description: Date/time of creation
          format: date-time
          readOnly: true
          title: Created at
          type: number
          x-stream-index: "001"
        description:
          description: Description, shown in commands auto-completion
          title: Description
          type: string
          x-stream-index: "005"
        name:
          description: Unique command name
          title: Name
          type: string
          x-stream-index: "004"
        set:
          description: Set name used for grouping commands
          title: Set
          type: string
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          readOnly: true
          title: Updated at
          type: number
          x-stream-index: "002"
      required:
      - name
      - description
      - args
      - set
      title: Command
      type: object
    CommentAddedEvent:
      description: Emitted when a comment is added to an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "002"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment that was added
          title: Text
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.comment.added
          description: 'The type of event: "feeds.comment.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the comment
          title: User
          x-stream-index: "004.001"
      required:
      - comment
      - activity
      - type
      - created_at
      - custom
      - fid
      title: CommentAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentDeletedEvent:
      description: Emitted when a comment is deleted.
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.comment.deleted
          description: 'The type of event: "feeds.comment.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who deleted the comment
          title: User
          x-stream-index: "003.001"
      required:
      - comment
      - type
      - created_at
      - custom
      - fid
      title: CommentDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentReactionAddedEvent:
      description: Emitted when a reaction is added to a comment.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "003"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 004.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 004.001.007
        feed_visibility:
          type: string
          x-stream-index: "004.003"
        fid:
          type: string
          x-stream-index: "004.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was added
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 004.001.004
        type:
          default: feeds.comment.reaction.added
          description: 'The type of event: "feeds.comment.reaction.added" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 004.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the reaction
          title: User
          x-stream-index: "005.001"
      required:
      - comment
      - reaction
      - activity
      - type
      - created_at
      - custom
      - fid
      title: CommentReactionAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentReactionDeletedEvent:
      description: Emitted when a reaction is deleted from a comment.
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.comment.reaction.deleted
          description: The type of reaction that was removed
          title: Type
          type: string
          x-stream-index: 003.001.002
      required:
      - comment
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: CommentReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentReactionUpdatedEvent:
      description: Emitted when a reaction is updated on a comment.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "003"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 004.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 004.001.007
        feed_visibility:
          type: string
          x-stream-index: "004.003"
        fid:
          type: string
          x-stream-index: "004.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was updated
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 004.001.004
        type:
          default: feeds.comment.reaction.updated
          description: 'The type of event: "feeds.comment.reaction.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 004.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the reaction
          title: User
          x-stream-index: "005.001"
      required:
      - comment
      - reaction
      - activity
      - type
      - created_at
      - custom
      - fid
      title: CommentReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentResponse:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "011"
        confidence_score:
          description: Confidence score of the comment
          format: float
          title: Confidence Score
          type: number
          x-stream-index: "022"
        controversy_score:
          description: Controversy score of the comment
          format: float
          title: Controversy Score
          type: number
          x-stream-index: "023"
        created_at:
          description: When the comment was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "014"
        custom:
          additionalProperties: {}
          description: Custom data for the comment
          title: Custom Data
          type: object
          x-stream-index: "006"
        deleted_at:
          description: When the comment was deleted
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "016"
        downvote_count:
          description: Number of downvotes for this comment
          format: int32
          title: Downvote Count
          type: integer
          x-stream-index: "020"
        id:
          description: Unique identifier for the comment
          title: ID
          type: string
          x-stream-index: "001"
        latest_reactions:
          description: Recent reactions to the comment
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Latest Reactions
          type: array
          x-stream-index: "009"
        mentioned_users:
          description: Users mentioned in the comment
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mention Users
          type: array
          x-stream-index: "012"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "017"
        object_id:
          description: ID of the object this comment is associated with
          title: Object ID
          type: string
          x-stream-index: "002"
        object_type:
          description: Type of the object this comment is associated with
          title: Object Type
          type: string
          x-stream-index: "003"
        own_reactions:
          description: Current user's reactions to this activity
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Own Reactions
          type: array
          x-stream-index: "024"
        parent_id:
          description: ID of parent comment for nested replies
          title: Parent ID
          type: string
          x-stream-index: "007"
        reaction_count:
          description: Number of reactions to this comment
          format: int32
          title: Reaction Count
          type: integer
          x-stream-index: "008"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          description: Grouped reactions by type
          title: Reaction Groups
          type: object
          x-stream-index: "010"
        reply_count:
          description: Number of replies to this comment
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "018"
        score:
          description: Score of the comment based on reactions
          format: int32
          title: Score
          type: integer
          x-stream-index: "021"
        status:
          description: Status of the comment (e.g., active, deleted)
          title: Status
          type: string
          x-stream-index: "013"
        text:
          description: Text content of the comment
          title: Text
          type: string
          x-stream-index: "005"
        updated_at:
          description: When the comment was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "015"
        upvote_count:
          description: Number of upvotes for this comment
          format: int32
          title: Upvote Count
          type: integer
          x-stream-index: "019"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the comment
          title: User
          x-stream-index: "004"
      required:
      - id
      - object_id
      - object_type
      - user
      - reaction_count
      - mentioned_users
      - status
      - created_at
      - updated_at
      - reply_count
      - upvote_count
      - downvote_count
      - score
      - confidence_score
      - own_reactions
      title: Comment
      type: object
    CommentUpdatedEvent:
      description: Emitted when a comment is updated.
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment that was updated
          title: Text
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.comment.updated
          description: 'The type of event: "feeds.comment.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the comment
          title: User
          x-stream-index: "003.001"
      required:
      - comment
      - type
      - created_at
      - custom
      - fid
      title: CommentUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ConfigOverrides:
      properties:
        blocklist:
          type: string
          x-stream-index: "008"
        blocklist_behavior:
          enum:
          - flag
          - block
          type: string
          x-stream-index: "009"
        commands:
          items:
            type: string
          type: array
          x-stream-index: "011"
        count_messages:
          type: boolean
          x-stream-index: "014"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "010"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "007"
        quotes:
          type: boolean
          x-stream-index: "004"
        reactions:
          type: boolean
          x-stream-index: "002"
        replies:
          type: boolean
          x-stream-index: "003"
        shared_locations:
          type: boolean
          x-stream-index: "013"
        typing_events:
          type: boolean
          x-stream-index: "001"
        uploads:
          type: boolean
          x-stream-index: "005"
        url_enrichment:
          type: boolean
          x-stream-index: "006"
        user_message_reminders:
          type: boolean
          x-stream-index: "012"
      required:
      - grants
      - commands
      type: object
    ConfigResponse:
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          description: Configuration for AI image analysis
          title: AI Image Config
          x-stream-index: "010"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          description: Configuration for AI text analysis
          title: AI Text Config
          x-stream-index: "008"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          description: Configuration for AI video analysis
          title: AI Video Config
          x-stream-index: "011"
        async:
          description: Whether moderation should be performed asynchronously
          title: Async
          type: boolean
          x-stream-index: "003"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          description: Configuration for platform circumvention detection
          title: Automod Platform Circumvention Config
          x-stream-index: "005"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          description: Configuration for semantic filtering
          title: Automod Semantic Filters Config
          x-stream-index: "006"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          description: Configuration for toxicity detection
          title: Automod Toxicity Config
          x-stream-index: "004"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          description: Configuration for block list filtering
          title: Block List Config
          x-stream-index: "007"
        created_at:
          description: When the configuration was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "013"
        key:
          description: Unique identifier for the moderation configuration
          title: Key
          type: string
          x-stream-index: "001"
        llm_config:
          $ref: '#/components/schemas/LLMConfig'
          description: Configuration for customer-configured LLM moderation
          title: LLM Config
          x-stream-index: "009"
        supported_video_call_harm_types:
          items:
            type: string
          type: array
          x-stream-index: "016"
        team:
          description: Team associated with the configuration
          title: Team
          type: string
          x-stream-index: "002"
        updated_at:
          description: When the configuration was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "014"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          description: Configuration for velocity-based filtering
          title: Velocity Filter Config
          x-stream-index: "012"
        video_call_rule_config:
          $ref: '#/components/schemas/VideoCallRuleConfig'
          x-stream-index: "015"
      required:
      - key
      - team
      - async
      - created_at
      - updated_at
      - supported_video_call_harm_types
      type: object
    ConnectUserDetailsRequest:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001"
        image:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "006"
        language:
          type: string
          x-stream-index: "005"
        name:
          type: string
          x-stream-index: "002"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "007"
      required:
      - id
      type: object
    ConnectedEvent:
      description: This event is sent when the WS connection is established and authenticated,
        this event contains the full user object as it is stored on the server
      properties:
        connection_id:
          description: The connection_id for this client
          title: Connection ID
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        me:
          $ref: '#/components/schemas/OwnUserResponse'
          description: The full user object as it is stored on the server
          title: OwnUserResponse
          x-stream-index: "003"
        type:
          default: connection.ok
          description: 'The type of event: "connection.ok" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - connection_id
      - me
      title: ConnectedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ConnectionErrorEvent:
      description: This event is sent when the WS connection fails
      properties:
        connection_id:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        error:
          $ref: '#/components/schemas/APIError'
          description: The error that caused the connection to fail
          title: Error
          x-stream-index: "003"
        type:
          default: connection.error
          description: 'The type of event: "connection.ok" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - connection_id
      - error
      title: ConnectionErrorEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ContentCountRuleParameters:
      properties:
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    CountByMinuteResponse:
      nullable: true
      properties:
        count:
          format: int32
          type: integer
          x-stream-index: "002"
        start_ts:
          format: date-time
          type: number
          x-stream-index: "001"
      required:
      - start_ts
      - count
      type: object
    CreateBlockListRequest:
      description: Block list contains restricted words
      nullable: true
      properties:
        name:
          description: Block list name
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "004"
        type:
          description: Block list type.
          enum:
          - regex
          - domain
          - domain_allowlist
          - email
          - word
          title: Type
          type: string
          x-stream-index: "003"
        words:
          description: List of words to block
          items:
            type: string
          minimum: 1
          title: Words
          type: array
          x-stream-index: "002"
      required:
      - name
      - words
      title: Block list
      type: object
      x-stream-docs-page-id: block_lists
    CreateBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklist:
          $ref: '#/components/schemas/BlockListResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    CreateDeviceRequest:
      description: Create device request
      nullable: true
      properties:
        id:
          description: Device ID
          maxLength: 255
          minLength: 1
          title: ID
          type: string
          x-stream-index: "001"
        push_provider:
          description: Push provider
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          title: PushProvider
          type: string
          x-stream-index: "002"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "003"
        voip_token:
          description: When true the token is for Apple VoIP push notifications
          title: VoipToken
          type: boolean
          x-stream-index: "004"
      required:
      - id
      - push_provider
      title: CreateDeviceRequest
      type: object
    CreateDraftRequest:
      nullable: true
      properties:
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "001"
      required:
      - message
      type: object
    CreateDraftResponse:
      description: Basic response information
      nullable: true
      properties:
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - draft
      - duration
      title: Response
      type: object
    CreateFeedsBatchRequest:
      nullable: true
      properties:
        feeds:
          description: List of feeds to create
          items:
            $ref: '#/components/schemas/FeedRequest'
          maximum: 1000
          minimum: 1
          title: Feeds
          type: array
          x-stream-index: "001"
      required:
      - feeds
      title: Create Feeds Batch Request
      type: object
    CreateFeedsBatchResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feeds:
          description: List of created feeds
          items:
            $ref: '#/components/schemas/FeedResponse'
          title: Feeds
          type: array
          x-stream-index: "001"
      required:
      - feeds
      - duration
      title: Create Feeds Batch Response
      type: object
    CreateGuestRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      type: object
    CreateGuestResponse:
      nullable: true
      properties:
        access_token:
          description: the access token to authenticate the user
          title: Access token
          type: string
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      - access_token
      - duration
      type: object
    CreatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "003"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "002"
      required:
      - text
      type: object
    CreatePollRequest:
      description: Contains all information needed to create a new poll
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Indicates whether users can suggest user defined answers
          title: Allow answers
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "008"
        description:
          description: A description of the poll
          title: Description
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Indicates whether users can cast multiple votes
          title: Multiple choice
          type: boolean
          x-stream-index: "006"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        is_closed:
          description: Indicates whether the poll is open for voting
          title: Is closed
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Indicates the maximum amount of votes a user can cast
          format: int32
          maximum: 10
          title: Maximum votes allowed
          type: integer
          x-stream-index: "007"
        name:
          description: The name of the poll
          title: Name
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionInput'
          maximum: 100
          type: array
          x-stream-index: "004"
        voting_visibility:
          enum:
          - anonymous
          - public
          type: string
          x-stream-index: "005"
      required:
      - name
      title: Create Poll Request
      type: object
    CreateReminderRequest:
      nullable: true
      properties:
        remind_at:
          format: date-time
          type: number
          x-stream-index: "001"
      type: object
    Credentials:
      properties:
        ice_servers:
          items:
            $ref: '#/components/schemas/ICEServer'
          type: array
          x-stream-index: "003"
        server:
          $ref: '#/components/schemas/SFUResponse'
          x-stream-index: "001"
        token:
          type: string
          x-stream-index: "002"
      required:
      - server
      - token
      - ice_servers
      type: object
    CustomActionRequest:
      properties:
        id:
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      type: object
    CustomVideoEvent:
      description: A custom event, this event is used to send custom events to other
        participants in the call.
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "003"
        type:
          default: custom
          description: The type of event, "custom" in this case
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
      required:
      - type
      - created_at
      - call_cid
      - custom
      - user
      title: CustomVideoEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    DailyAggregateCallDurationReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/CallDurationReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateCallParticipantCountReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/CallParticipantCountReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateCallsPerDayReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/CallsPerDayReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateQualityScoreReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/QualityScoreReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateSDKUsageReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/SDKUsageReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    DailyAggregateUserFeedbackReportResponse:
      properties:
        date:
          type: string
          x-stream-index: "001"
        report:
          $ref: '#/components/schemas/UserFeedbackReport'
          x-stream-index: "002"
      required:
      - date
      - report
      type: object
    Data:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    DecayFunctionConfig:
      properties:
        base:
          type: string
          x-stream-index: "001"
        decay:
          type: string
          x-stream-index: "005"
        direction:
          type: string
          x-stream-index: "006"
        offset:
          type: string
          x-stream-index: "004"
        origin:
          type: string
          x-stream-index: "002"
        scale:
          type: string
          x-stream-index: "003"
      type: object
    DeleteActivitiesRequest:
      nullable: true
      properties:
        hard_delete:
          description: Whether to permanently delete the activities
          title: Hard Delete
          type: boolean
          x-stream-index: "002"
        ids:
          description: List of activity IDs to delete
          items:
            type: string
          minimum: 1
          title: Activity IDs
          type: array
          x-stream-index: "001"
      required:
      - ids
      title: Delete Activities Request
      type: object
    DeleteActivitiesResponse:
      nullable: true
      properties:
        deleted_ids:
          description: List of activity IDs that were successfully deleted
          items:
            type: string
          title: Deleted Activity IDs
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - deleted_ids
      - duration
      title: Delete Activities Response
      type: object
    DeleteActivityReactionResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          x-stream-index: "002"
      required:
      - activity
      - reaction
      - duration
      title: Delete Activity Reaction Response
      type: object
    DeleteActivityRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteActivityResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Delete Activity Response
      type: object
    DeleteBookmarkFolderResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Delete Bookmark Folder Response
      type: object
    DeleteBookmarkResponse:
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The deleted bookmark
          title: Bookmark
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark
      - duration
      title: Delete Bookmark Response
      type: object
    DeleteCallRequest:
      description: DeleteCallRequest is the payload for deleting a call.
      nullable: true
      properties:
        hard:
          description: if true the call will be hard deleted along with all related
            data
          title: Hard
          type: boolean
          x-stream-index: "001"
      title: DeleteCallRequest
      type: object
    DeleteCallResponse:
      description: DeleteCallResponse is the payload for deleting a call.
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          title: Call
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        task_id:
          title: TaskID
          type: string
          x-stream-index: "002"
      required:
      - call
      - duration
      title: DeleteCallResponse
      type: object
    DeleteChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteChannelsRequest:
      nullable: true
      properties:
        cids:
          description: All channels that should be deleted
          items:
            type: string
          maximum: 100
          minimum: 1
          title: Channels CID
          type: array
          x-stream-index: "001"
        hard_delete:
          description: Specify if channels and all ressources should be hard deleted
          title: Hard delete
          type: boolean
          x-stream-index: "002"
      required:
      - cids
      type: object
    DeleteChannelsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        result:
          additionalProperties:
            $ref: '#/components/schemas/DeleteChannelsResultResponse'
          description: Map of channel IDs and their deletion results
          title: Result
          type: object
          x-stream-index: "001"
        task_id:
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    DeleteChannelsResultResponse:
      nullable: true
      properties:
        error:
          type: string
          x-stream-index: "002"
        status:
          type: string
          x-stream-index: "001"
      required:
      - status
      type: object
    DeleteCommentReactionResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment after reaction removal
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The removed reaction
          title: Reaction
          x-stream-index: "002"
      required:
      - comment
      - reaction
      - duration
      title: Delete Comment Reaction Response
      type: object
    DeleteCommentResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The parent activity
          title: Activity
          x-stream-index: "002"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The deleted comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
      required:
      - comment
      - activity
      - duration
      title: Delete Comment Response
      type: object
    DeleteFeedResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        task_id:
          description: The ID of the async task that will handle feed cleanup and
            hard deletion
          title: string
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      title: Delete Feed Response
      type: object
    DeleteMessageRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
      required:
      - message
      - duration
      title: Response
      type: object
    DeleteModerationConfigResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    DeleteReactionRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteReactionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          x-stream-index: "002"
      required:
      - message
      - reaction
      - duration
      title: Response
      type: object
    DeleteRecordingResponse:
      description: Response for DeleteRecording
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: DeleteRecordingResponse
      type: object
    DeleteReminderResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteTranscriptionResponse:
      description: DeleteTranscriptionResponse is the payload for deleting a transcription.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: DeleteTranscriptionResponse
      type: object
    DeleteUserRequest:
      properties:
        delete_conversation_channels:
          type: boolean
          x-stream-index: "003"
        delete_feeds_content:
          type: boolean
          x-stream-index: "004"
        hard_delete:
          type: boolean
          x-stream-index: "001"
        mark_messages_deleted:
          type: boolean
          x-stream-index: "002"
      type: object
    Device:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        disabled:
          type: boolean
          x-stream-index: "002.003"
        disabled_reason:
          type: string
          x-stream-index: "002.004"
        id:
          type: string
          x-stream-index: 002.001.004
        push_provider:
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          type: string
          x-stream-index: 002.001.001
        push_provider_name:
          type: string
          x-stream-index: 002.001.003
        user_id:
          type: string
          x-stream-index: "004"
        voip:
          type: boolean
          x-stream-index: 002.001.005
      required:
      - push_provider
      - id
      - created_at
      - user_id
      type: object
    DeviceResponse:
      description: Response for Device
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        disabled:
          description: Whether device is disabled or not
          title: Disabled
          type: boolean
          x-stream-index: "005"
        disabled_reason:
          description: Reason explaining why device had been disabled
          title: Reason
          type: string
          x-stream-index: "006"
        id:
          description: Device ID
          title: ID
          type: string
          x-stream-index: "003"
        push_provider:
          description: Push provider
          title: PushProvider
          type: string
          x-stream-index: "001"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "002"
        user_id:
          description: User ID
          title: UserID
          type: string
          x-stream-index: "008"
        voip:
          description: When true the token is for Apple VoIP push notifications
          title: Voip
          type: boolean
          x-stream-index: "007"
      required:
      - push_provider
      - id
      - created_at
      - user_id
      title: DeviceResponse
      type: object
    DraftDeletedEvent:
      description: Emitted when a Draft is deleted.
      nullable: true
      properties:
        cid:
          description: The CID of the channel where the draft was created
          title: Channel CID
          type: string
          x-stream-index: 001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.007
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "001.003"
        parent_id:
          description: The ID of the parent message
          title: Message ID
          type: string
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.004
        type:
          default: draft.deleted
          description: 'The type of event: "draft.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.002
      required:
      - type
      - created_at
      - custom
      title: DraftDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    DraftPayloadResponse:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        html:
          type: string
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "001"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "008"
        mml:
          type: string
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "005"
        poll_id:
          type: string
          x-stream-index: "013"
        quoted_message_id:
          type: string
          x-stream-index: "009"
        show_in_channel:
          type: boolean
          x-stream-index: "006"
        silent:
          type: boolean
          x-stream-index: "012"
        text:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "011"
      required:
      - id
      - text
      - custom
      type: object
    DraftResponse:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        message:
          $ref: '#/components/schemas/DraftPayloadResponse'
          x-stream-index: "001"
        parent_id:
          type: string
          x-stream-index: "004"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "005"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "006"
      required:
      - message
      - channel_cid
      - created_at
      type: object
    DraftUpdatedEvent:
      description: Emitted when a Draft is created or updated.
      nullable: true
      properties:
        cid:
          description: The CID of the channel where the draft was created/updated
          title: Channel CID
          type: string
          x-stream-index: 001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.007
        draft:
          $ref: '#/components/schemas/DraftResponse'
          description: The draft object which was created/updated
          title: Draft
          x-stream-index: "001.003"
        parent_id:
          description: The ID of the parent message
          title: Parent ID
          type: string
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.004
        type:
          default: draft.updated
          description: 'The type of event: "draft.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.002
      required:
      - type
      - created_at
      - custom
      title: DraftUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    EdgeResponse:
      properties:
        continent_code:
          type: string
          x-stream-index: "007.003"
        country_iso_code:
          type: string
          x-stream-index: "007.002"
        green:
          format: int32
          type: integer
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        latency_test_url:
          type: string
          x-stream-index: "002"
        latitude:
          format: float
          type: number
          x-stream-index: "006.001"
        longitude:
          format: float
          type: number
          x-stream-index: "006.002"
        red:
          format: int32
          type: integer
          x-stream-index: "005"
        subdivision_iso_code:
          type: string
          x-stream-index: "007.001"
        yellow:
          format: int32
          type: integer
          x-stream-index: "004"
      required:
      - id
      - latency_test_url
      - green
      - yellow
      - red
      - latitude
      - longitude
      - subdivision_iso_code
      - country_iso_code
      - continent_code
      type: object
    EgressHLSResponse:
      properties:
        playlist_url:
          type: string
          x-stream-index: "001"
        status:
          type: string
          x-stream-index: "002"
      required:
      - playlist_url
      - status
      type: object
    EgressRTMPResponse:
      properties:
        name:
          type: string
          x-stream-index: "001"
        started_at:
          format: date-time
          type: number
          x-stream-index: "004"
        stream_key:
          type: string
          x-stream-index: "003"
        stream_url:
          type: string
          x-stream-index: "002"
      required:
      - name
      - started_at
      type: object
    EgressResponse:
      properties:
        broadcasting:
          type: boolean
          x-stream-index: "001"
        frame_recording:
          $ref: '#/components/schemas/FrameRecordingResponse'
          x-stream-index: "004"
        hls:
          $ref: '#/components/schemas/EgressHLSResponse'
          x-stream-index: "002"
        rtmps:
          items:
            $ref: '#/components/schemas/EgressRTMPResponse'
          type: array
          x-stream-index: "003"
      required:
      - broadcasting
      - rtmps
      type: object
    EndCallRequest:
      description: Request for ending a call
      nullable: true
      title: EndCallRequest
      type: object
    EndCallResponse:
      description: Response for ending a call
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: EndCallResponse
      type: object
    EnrichedActivity:
      properties:
        actor:
          $ref: '#/components/schemas/Data'
          x-stream-index: "002"
        foreign_id:
          type: string
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        latest_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "013"
        object:
          $ref: '#/components/schemas/Data'
          x-stream-index: "004"
        origin:
          $ref: '#/components/schemas/Data'
          x-stream-index: "008"
        own_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "012"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "011"
        score:
          format: float
          type: number
          x-stream-index: "010"
        target:
          $ref: '#/components/schemas/Data'
          x-stream-index: "006"
        to:
          items:
            type: string
          type: array
          x-stream-index: "009"
        verb:
          type: string
          x-stream-index: "003"
      type: object
    EnrichedReaction:
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "003"
        children_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "010"
        created_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "012"
        data:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        kind:
          type: string
          x-stream-index: "002"
        latest_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "008"
        own_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "009"
        parent:
          type: string
          x-stream-index: "007"
        target_feeds:
          items:
            type: string
          type: array
          x-stream-index: "006"
        updated_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "013"
        user:
          $ref: '#/components/schemas/Data'
          x-stream-index: "011"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - kind
      - activity_id
      - user_id
      type: object
    EntityCreatorResponse:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: 001.001.018
        ban_count:
          description: Number of minor actions performed on the user
          format: int32
          title: Ban Count
          type: integer
          x-stream-index: "002"
        banned:
          type: boolean
          x-stream-index: 001.001.012
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: 001.001.017
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.009
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.004
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.016
        deleted_at:
          format: date-time
          type: number
          x-stream-index: 001.001.011
        deleted_content_count:
          description: Number of major actions performed on the user
          format: int32
          title: Deleted Content Count
          type: integer
          x-stream-index: "003"
        flagged_count:
          description: Number of flag actions performed on the user
          format: int32
          title: Flagged Count
          type: integer
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: 001.001.001
        image:
          type: string
          x-stream-index: 001.001.003
        language:
          type: string
          x-stream-index: 001.001.005
        last_active:
          format: date-time
          type: number
          x-stream-index: 001.001.014
        name:
          type: string
          x-stream-index: 001.001.002
        online:
          type: boolean
          x-stream-index: 001.001.013
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: 001.001.015
        role:
          type: string
          x-stream-index: 001.001.006
        teams:
          items:
            type: string
          type: array
          x-stream-index: 001.001.007
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: 001.001.008
        updated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.010
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - invisible
      - ban_count
      - deleted_content_count
      - flagged_count
      type: object
    EventRequest:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    EventResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        event:
          $ref: '#/components/schemas/WSEvent'
          x-stream-index: "001"
      required:
      - event
      - duration
      title: Response
      type: object
    FeedCreatedEvent:
      description: Emitted when a feed is created.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed:
          $ref: '#/components/schemas/FeedResponse'
          description: The feed that was created
          title: Feed
          x-stream-index: "001"
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        members:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed.created
          description: 'The type of event: "feeds.feed.created" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who created the feed
          title: User
          x-stream-index: "004.001"
      required:
      - feed
      - members
      - type
      - created_at
      - custom
      - fid
      - user
      title: FeedCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedDeletedEvent:
      description: Emitted when a feed is deleted.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        feed_visibility:
          type: string
          x-stream-index: "001.003"
        fid:
          type: string
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        type:
          default: feeds.feed.deleted
          description: 'The type of event: "feeds.feed.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who deleted the feed
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: FeedDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedGroup:
      properties:
        ActivityProcessors:
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          type: array
          writeOnly: true
          x-stream-index: "012"
        ActivitySelectors:
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          type: array
          writeOnly: true
          x-stream-index: "013"
        Aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          x-stream-index: "015"
        AggregationVersion:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "016"
        AppPK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "002"
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "007"
        DefaultVisibility:
          type: string
          writeOnly: true
          x-stream-index: "006"
        DeletedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "010"
        ID:
          type: string
          writeOnly: true
          x-stream-index: "003"
        LastFeedGetAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "017"
        Notification:
          $ref: '#/components/schemas/NotificationConfig'
          x-stream-index: "004"
        PushNotification:
          $ref: '#/components/schemas/PushNotificationConfig'
          x-stream-index: "005"
        Ranking:
          $ref: '#/components/schemas/RankingConfig'
          x-stream-index: "014"
        Stories:
          $ref: '#/components/schemas/StoriesConfig'
          x-stream-index: "011"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
      required:
      - AppPK
      - ID
      - DefaultVisibility
      - Custom
      - created_at
      - updated_at
      - ActivityProcessors
      - ActivitySelectors
      - AggregationVersion
      type: object
    FeedGroupChangedEvent:
      description: Emitted when a feed group is changed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        feed_group:
          $ref: '#/components/schemas/FeedGroup'
          description: The feed group that was changed
          title: Feed Type
          x-stream-index: "003"
        feed_visibility:
          type: string
          x-stream-index: "001.003"
        fid:
          type: string
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        type:
          default: feeds.feed_group.changed
          description: 'The type of event: "feeds.feed_group.changed" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who changed the feed group
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: FeedGroupChangedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedGroupDeletedEvent:
      description: Emitted when a feed group is deleted.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        group_id:
          description: The ID of the feed group that was deleted
          title: Group ID
          type: string
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.feed_group.deleted
          description: 'The type of event: "feeds.feed_group.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - group_id
      - type
      - created_at
      - custom
      - fid
      title: FeedGroupDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedInput:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        description:
          maxLength: 1000
          type: string
          x-stream-index: "002"
        filter_tags:
          items:
            type: string
          maximum: 255
          type: array
          x-stream-index: "005"
        members:
          items:
            $ref: '#/components/schemas/FeedMemberRequest'
          type: array
          x-stream-index: "006"
        name:
          maxLength: 255
          type: string
          x-stream-index: "001"
        visibility:
          enum:
          - public
          - visible
          - followers
          - members
          - private
          type: string
          x-stream-index: "003"
      type: object
    FeedMemberAddedEvent:
      description: Emitted when a feed member is added.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The member that was added
          title: Member
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed_member.added
          description: 'The type of event: "feeds.feed_member.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the member
          title: User
          x-stream-index: "002.001"
      required:
      - member
      - type
      - created_at
      - custom
      - fid
      title: FeedMemberAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedMemberRemovedEvent:
      description: Emitted when a feed member is removed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        member_id:
          type: string
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed_member.removed
          description: 'The type of event: "feeds.feed_member.removed" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the member
          title: User
          x-stream-index: "002.001"
      required:
      - member_id
      - type
      - created_at
      - custom
      - fid
      title: FeedMemberRemovedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedMemberRequest:
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the member
          title: Custom Data
          type: object
          x-stream-index: "004"
        invite:
          description: Whether this is an invite to become a member
          title: Invite
          type: boolean
          x-stream-index: "005"
        membership_level:
          description: ID of the membership level to assign to the member
          maxLength: 255
          title: Membership Level
          type: string
          x-stream-index: "003"
        role:
          description: Role of the member in the feed
          maxLength: 255
          title: Role
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user to add as a member
          maxLength: 255
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - user_id
      title: Feed Member Payload
      type: object
    FeedMemberResponse:
      properties:
        created_at:
          description: When the membership was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for the membership
          title: Custom Data
          type: object
          x-stream-index: "007"
        invite_accepted_at:
          description: When the invite was accepted
          format: date-time
          title: Invite Accepted At
          type: number
          x-stream-index: "005"
        invite_rejected_at:
          description: When the invite was rejected
          format: date-time
          title: Invite Rejected At
          type: number
          x-stream-index: "006"
        membership_level:
          $ref: '#/components/schemas/MembershipLevelResponse'
          description: Membership level assigned to the member
          title: Membership Level
          x-stream-index: "004"
        role:
          description: Role of the member in the feed
          title: Role
          type: string
          x-stream-index: "002"
        status:
          description: Status of the membership
          enum:
          - member
          - pending
          - rejected
          title: Status
          type: string
          x-stream-index: "003"
        updated_at:
          description: When the membership was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who is a member
          title: User
          x-stream-index: "001"
      required:
      - user
      - role
      - status
      - created_at
      - updated_at
      title: Feed Member
      type: object
    FeedMemberUpdatedEvent:
      description: Emitted when a feed member is updated.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The member that was updated
          title: Member
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed_member.updated
          description: 'The type of event: "feeds.feed_member.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the member
          title: User
          x-stream-index: "002.001"
      required:
      - member
      - type
      - created_at
      - custom
      - fid
      title: FeedMemberUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedOwnCapability:
      description: All possibility of string to use
      enum:
      - add-activity
      - add-activity-bookmark
      - add-activity-reaction
      - add-comment
      - add-comment-reaction
      - create-feed
      - delete-any-activity
      - delete-any-comment
      - delete-feed
      - delete-own-activity
      - delete-own-activity-bookmark
      - delete-own-activity-reaction
      - delete-own-comment
      - delete-own-comment-reaction
      - follow
      - pin-activity
      - query-feed-members
      - query-follows
      - read-activities
      - read-feed
      - unfollow
      - update-any-activity
      - update-any-comment
      - update-feed
      - update-feed-followers
      - update-feed-members
      - update-own-activity
      - update-own-activity-bookmark
      - update-own-comment
      title: FeedOwnCapability
      type: string
    FeedRequest:
      properties:
        created_by_id:
          description: ID of the feed creator
          title: Created By ID
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          description: Custom data for the feed
          title: Custom Data
          type: object
          x-stream-index: "004.004"
        description:
          description: Description of the feed
          maxLength: 1000
          title: Description
          type: string
          x-stream-index: "004.002"
        feed_group_id:
          description: ID of the feed group
          maxLength: 255
          title: Feed Group ID
          type: string
          x-stream-index: "001"
        feed_id:
          description: ID of the feed
          maxLength: 255
          title: Feed ID
          type: string
          x-stream-index: "002"
        filter_tags:
          description: Tags used for filtering feeds
          items:
            type: string
          maximum: 255
          title: Filter Tags
          type: array
          x-stream-index: "004.005"
        members:
          description: Initial members for the feed
          items:
            $ref: '#/components/schemas/FeedMemberRequest'
          title: Members
          type: array
          x-stream-index: "004.006"
        name:
          description: Name of the feed
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "004.001"
        visibility:
          description: Visibility setting for the feed
          enum:
          - public
          - visible
          - followers
          - members
          - private
          title: Visibility
          type: string
          x-stream-index: "004.003"
      required:
      - feed_group_id
      - feed_id
      title: Feed Payload
      type: object
    FeedResponse:
      properties:
        created_at:
          description: When the feed was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "017"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the feed
          title: Created By
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          description: Custom data for the feed
          title: Custom Data
          type: object
          x-stream-index: "006"
        deleted_at:
          description: When the feed was deleted
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "019"
        description:
          description: Description of the feed
          title: Description
          type: string
          x-stream-index: "005"
        feed:
          description: Fully qualified feed ID (group_id:id)
          title: FID
          type: string
          x-stream-index: "003"
        filter_tags:
          description: Tags used for filtering feeds
          items:
            type: string
          title: Filter Tags
          type: array
          x-stream-index: "007"
        follower_count:
          description: Number of followers of this feed
          format: int32
          title: Follower Count
          type: integer
          x-stream-index: "011"
        following_count:
          description: Number of feeds this feed follows
          format: int32
          title: Following Count
          type: integer
          x-stream-index: "012"
        group_id:
          description: Group this feed belongs to
          title: Group ID
          type: string
          x-stream-index: "001"
        id:
          description: Unique identifier for the feed
          title: ID
          type: string
          x-stream-index: "002"
        member_count:
          description: Number of members in this feed
          format: int32
          title: Member Count
          type: integer
          x-stream-index: "010"
        name:
          description: Name of the feed
          title: Name
          type: string
          x-stream-index: "004"
        own_capabilities:
          description: Capabilities the current user has for this feed
          items:
            $ref: '#/components/schemas/FeedOwnCapability'
          title: Own Capabilities
          type: array
          x-stream-index: "015"
        own_follows:
          description: Follow relationships where the current user's feeds are following
            this feed
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Own Follows
          type: array
          x-stream-index: "014"
        own_membership:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: Membership information for the current user in this feed
          title: Own Membership
          x-stream-index: "016"
        pin_count:
          description: Number of pinned activities in this feed
          format: int32
          title: Pin Count
          type: integer
          x-stream-index: "013"
        updated_at:
          description: When the feed was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "018"
        visibility:
          description: Visibility setting for the feed
          title: Visibility
          type: string
          x-stream-index: "008"
      required:
      - group_id
      - id
      - feed
      - name
      - description
      - created_by
      - member_count
      - follower_count
      - following_count
      - pin_count
      - created_at
      - updated_at
      title: Feed
      type: object
    FeedUpdatedEvent:
      description: Emitted when a feed is created.
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed:
          $ref: '#/components/schemas/FeedResponse'
          description: The feed that was created
          title: Feed
          x-stream-index: "001"
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.feed.updated
          description: 'The type of event: "feeds.feed.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who created the feed
          title: User
          x-stream-index: "003.001"
      required:
      - feed
      - type
      - created_at
      - custom
      - fid
      title: FeedUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedsPreferences:
      properties:
        comment:
          description: Push notification preference for comments on user's activities
          enum:
          - all
          - none
          title: Comment
          type: string
          x-stream-index: "002"
        comment_reaction:
          description: Push notification preference for reactions on comments
          enum:
          - all
          - none
          title: Comment Reaction
          type: string
          x-stream-index: "004"
        custom_activity_types:
          additionalProperties:
            type: string
          description: Push notification preferences for custom activity types. Map
            of activity type to preference (all or none)
          title: Custom Activity Types
          type: object
          x-stream-index: "006"
        follow:
          description: Push notification preference for new followers
          enum:
          - all
          - none
          title: Follow
          type: string
          x-stream-index: "001"
        mention:
          description: Push notification preference for mentions in activities or
            comments
          enum:
          - all
          - none
          title: Mention
          type: string
          x-stream-index: "005"
        reaction:
          description: Push notification preference for reactions on user's activities
            or comments
          enum:
          - all
          - none
          title: Reaction
          type: string
          x-stream-index: "003"
      title: Feeds Preferences
      type: object
    FeedsReactionResponse:
      properties:
        activity_id:
          description: ID of the activity that was reacted to
          title: Activity ID
          type: string
          x-stream-index: "002"
        comment_id:
          description: ID of the comment that was reacted to
          title: Comment ID
          type: string
          x-stream-index: "003"
        created_at:
          description: When the reaction was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for the reaction
          title: Custom Data
          type: object
          x-stream-index: "005"
        type:
          description: Type of reaction
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: When the reaction was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the reaction
          title: User
          x-stream-index: "001"
      required:
      - user
      - activity_id
      - type
      - created_at
      - updated_at
      title: Activity Reaction
      type: object
    Field:
      nullable: true
      properties:
        short:
          type: boolean
          x-stream-index: "003"
        title:
          type: string
          x-stream-index: "001"
        value:
          type: string
          x-stream-index: "002"
      required:
      - title
      - value
      - short
      type: object
    FileUploadConfig:
      properties:
        allowed_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "001"
        allowed_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "003"
        blocked_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "002"
        blocked_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        size_limit:
          format: int32
          maximum: 104857600
          minimum: 0
          type: integer
          x-stream-index: "005"
      required:
      - allowed_file_extensions
      - blocked_file_extensions
      - allowed_mime_types
      - blocked_mime_types
      - size_limit
      type: object
    FileUploadRequest:
      nullable: true
      properties:
        file:
          description: file field
          title: File
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          description: user for the request **server side only**
          title: User
          x-stream-index: "002"
      type: object
    FileUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        file:
          description: URL to the uploaded asset. Should be used to put to `asset_url`
            attachment field
          title: File
          type: string
          x-stream-index: "001"
        thumb_url:
          description: URL of the file thumbnail for supported file formats. Should
            be put to `thumb_url` attachment field
          title: Thumbnail URL
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    FlagDetails:
      properties:
        Extra:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "002"
        automod:
          $ref: '#/components/schemas/AutomodDetails'
          x-stream-index: "001"
        original_text:
          type: string
          x-stream-index: "003"
      required:
      - Extra
      - original_text
      type: object
    FlagFeedback:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "005"
        labels:
          items:
            $ref: '#/components/schemas/Label'
          type: array
          x-stream-index: "006"
        message_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - created_at
      - labels
      type: object
    FlagMessageDetails:
      properties:
        pin_changed:
          type: boolean
          x-stream-index: "002"
        should_enrich:
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "004"
        updated_by_id:
          type: string
          x-stream-index: "001"
      type: object
    FlagRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Additional metadata about the flag
          title: Custom
          type: object
          x-stream-index: "006"
        entity_creator_id:
          description: ID of the user who created the flagged entity
          title: Entity Creator ID
          type: string
          x-stream-index: "003"
        entity_id:
          description: Unique identifier of the entity being flagged
          title: Entity ID
          type: string
          x-stream-index: "002"
        entity_type:
          description: Type of entity being flagged (e.g., message, user)
          title: Entity Type
          type: string
          x-stream-index: "001"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content being flagged
          title: Moderation Payload
          x-stream-index: "005"
        reason:
          description: Optional explanation for why the content is being flagged
          maxLength: 255
          title: Reason
          type: string
          x-stream-index: "004"
      required:
      - entity_type
      - entity_id
      type: object
    FlagResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        item_id:
          description: Unique identifier of the created moderation item
          title: Item ID
          type: string
          x-stream-index: "001"
      required:
      - item_id
      - duration
      type: object
    FlagUserOptions:
      properties:
        reason:
          type: string
          x-stream-index: "001"
      type: object
    FollowBatchRequest:
      nullable: true
      properties:
        follows:
          description: List of follow relationships to create
          items:
            $ref: '#/components/schemas/FollowRequest'
          maximum: 1000
          minimum: 1
          title: Follows
          type: array
          x-stream-index: "001"
      required:
      - follows
      title: Follow Batch Request
      type: object
    FollowBatchResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follows:
          description: List of created follow relationships
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Follows
          type: array
          x-stream-index: "001"
      required:
      - follows
      - duration
      title: Follow Batch Response
      type: object
    FollowCreatedEvent:
      description: Emitted when a feed follows another feed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.follow.created
          description: 'The type of event: "feeds.follow.created" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - follow
      - type
      - created_at
      - custom
      - fid
      title: FollowCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FollowDeletedEvent:
      description: Emitted when a feed unfollows another feed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.follow.deleted
          description: 'The type of event: "feeds.follow.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - follow
      - type
      - created_at
      - custom
      - fid
      title: FollowDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FollowRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this follow
          title: Create Notification Activity
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Custom data for the follow relationship
          title: Custom Data
          type: object
          x-stream-index: "002"
        push_preference:
          description: Push preference for the follow relationship
          enum:
          - all
          - none
          title: Push Preference
          type: string
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "005"
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          x-stream-index: "001.001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          x-stream-index: "001.002"
      required:
      - source
      - target
      title: Follow Request
      type: object
    FollowResponse:
      properties:
        created_at:
          description: When the follow relationship was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          description: Custom data for the follow relationship
          title: Custom Data
          type: object
          x-stream-index: "004"
        follower_role:
          description: Role of the follower (source user) in the follow relationship
          title: Follower Role
          type: string
          x-stream-index: "008"
        push_preference:
          description: Push preference for notifications
          enum:
          - all
          - none
          title: Push Preference
          type: string
          x-stream-index: "003"
        request_accepted_at:
          description: When the follow request was accepted
          format: date-time
          title: Request Accepted At
          type: number
          x-stream-index: "005"
        request_rejected_at:
          description: When the follow request was rejected
          format: date-time
          title: Request Rejected At
          type: number
          x-stream-index: "006"
        source_feed:
          $ref: '#/components/schemas/FeedResponse'
          description: Source feed object
          title: Source Feed
          x-stream-index: "001"
        status:
          description: Status of the follow relationship
          enum:
          - accepted
          - pending
          - rejected
          title: Status
          type: string
          x-stream-index: "007"
        target_feed:
          $ref: '#/components/schemas/FeedResponse'
          description: Target feed object
          title: Target Feed
          x-stream-index: "002"
        updated_at:
          description: When the follow relationship was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "010"
      required:
      - source_feed
      - target_feed
      - push_preference
      - status
      - follower_role
      - created_at
      - updated_at
      title: Follow
      type: object
    FollowUpdatedEvent:
      description: Emitted when a follow relationship is updated.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.follow.updated
          description: 'The type of event: "feeds.follow.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - follow
      - type
      - created_at
      - custom
      - fid
      title: FollowUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FrameRecordingResponse:
      properties:
        status:
          type: string
          x-stream-index: "001"
      required:
      - status
      type: object
    FrameRecordingSettingsRequest:
      properties:
        capture_interval_in_seconds:
          format: int32
          maximum: 60
          minimum: 2
          type: integer
          x-stream-index: "003"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        quality:
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          type: string
          x-stream-index: "002"
      required:
      - mode
      - capture_interval_in_seconds
      type: object
    FrameRecordingSettingsResponse:
      properties:
        capture_interval_in_seconds:
          format: int32
          maximum: 60
          minimum: 2
          type: integer
          x-stream-index: "003"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        quality:
          type: string
          x-stream-index: "002"
      required:
      - mode
      - capture_interval_in_seconds
      type: object
    FullUserResponse:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "015"
        banned:
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "014"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.011"
        devices:
          items:
            $ref: '#/components/schemas/DeviceResponse'
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.014"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "012"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.013"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.015"
        role:
          type: string
          x-stream-index: "001.006"
        shadow_banned:
          type: boolean
          x-stream-index: "013"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      - shadow_banned
      - blocked_user_ids
      type: object
    GeofenceSettingsRequest:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      type: object
    GeofenceSettingsResponse:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - names
      type: object
    GetActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The requested activity
          title: Activity
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      title: Get Activity Response
      type: object
    GetApplicationResponse:
      description: Basic response information
      nullable: true
      properties:
        app:
          $ref: '#/components/schemas/AppResponseFields'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - app
      - duration
      title: Response
      type: object
    GetBlockedUsersResponse:
      nullable: true
      properties:
        blocks:
          description: Array of blocked user object
          items:
            $ref: '#/components/schemas/BlockedUserResponse'
          title: Blocks
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocks
      - duration
      type: object
    GetCallReportResponse:
      description: Basic response information
      nullable: true
      properties:
        chat_activity:
          $ref: '#/components/schemas/ChatActivityStatsResponse'
          x-stream-index: "005"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        report:
          $ref: '#/components/schemas/ReportResponse'
          x-stream-index: "004"
        session:
          $ref: '#/components/schemas/CallSessionResponse'
          x-stream-index: "003"
        session_id:
          type: string
          x-stream-index: "002"
        video_reactions:
          items:
            $ref: '#/components/schemas/VideoReactionsResponse'
          type: array
          x-stream-index: "006"
      required:
      - duration
      - session_id
      - report
      title: Response
      type: object
    GetCallResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "002.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        membership:
          $ref: '#/components/schemas/MemberResponse'
          x-stream-index: "001.003"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - duration
      title: GetCallResponse
      type: object
    GetCallSessionParticipantStatsDetailsResponse:
      description: Basic response information
      nullable: true
      properties:
        call_id:
          type: string
          x-stream-index: "003"
        call_session_id:
          type: string
          x-stream-index: "004"
        call_type:
          type: string
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        ingress:
          $ref: '#/components/schemas/ParticipantSeriesIngressSection'
          x-stream-index: "010"
        publisher:
          $ref: '#/components/schemas/ParticipantSeriesPublisherSection'
          x-stream-index: "008"
        subscriber:
          $ref: '#/components/schemas/ParticipantSeriesSubscriberSection'
          x-stream-index: "009"
        timeframe:
          $ref: '#/components/schemas/ParticipantSeriesTimeframe'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "005"
        user_session_id:
          type: string
          x-stream-index: "006"
      required:
      - duration
      - call_type
      - call_id
      - call_session_id
      - user_id
      - user_session_id
      title: Response
      type: object
    GetCommentRepliesResponse:
      nullable: true
      properties:
        comments:
          description: Threaded listing of replies to the comment
          items:
            $ref: '#/components/schemas/ThreadedCommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - comments
      - duration
      title: Get Comment Replies Response
      type: object
    GetCommentResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: Comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comment
      - duration
      title: Get Comment Response
      type: object
    GetCommentsResponse:
      nullable: true
      properties:
        comments:
          description: Threaded listing for the activity
          items:
            $ref: '#/components/schemas/ThreadedCommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - comments
      - duration
      title: Get  Comments Response
      type: object
    GetConfigResponse:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ConfigResponse'
          description: The retrieved moderation configuration
          title: Config
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    GetDraftResponse:
      description: Basic response information
      nullable: true
      properties:
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - draft
      - duration
      title: Response
      type: object
    GetEdgesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        edges:
          items:
            $ref: '#/components/schemas/EdgeResponse'
          type: array
          x-stream-index: "001"
      required:
      - edges
      - duration
      title: Response
      type: object
    GetFollowSuggestionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        suggestions:
          description: List of suggested feeds to follow
          items:
            $ref: '#/components/schemas/FeedResponse'
          title: Suggestions
          type: array
          x-stream-index: "001"
      required:
      - suggestions
      - duration
      title: Follow Suggestions Response
      type: object
    GetManyMessagesResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: 001.002.001
        messages:
          description: List of messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Messages
          type: array
          x-stream-index: "001.001"
      required:
      - messages
      - duration
      type: object
    GetMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageWithChannelResponse'
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      title: Response
      type: object
    GetOGResponse:
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "001.015"
        asset_url:
          description: URL of detected video or audio
          title: Image URL
          type: string
          x-stream-index: "001.017"
        author_icon:
          type: string
          x-stream-index: "001.007"
        author_link:
          description: og:site
          title: Author Link
          type: string
          x-stream-index: "001.006"
        author_name:
          description: og:site_name
          title: Author Name
          type: string
          x-stream-index: "001.005"
        color:
          type: string
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.018"
        duration:
          type: string
          x-stream-index: "002.001"
        fallback:
          type: string
          x-stream-index: "001.002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "001.016"
        footer:
          type: string
          x-stream-index: "001.013"
        footer_icon:
          type: string
          x-stream-index: "001.014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "001.019"
        image_url:
          description: URL of detected image
          title: Image URL
          type: string
          x-stream-index: "001.011"
        og_scrape_url:
          description: extracted url from the text
          title: OG Scrape URL
          type: string
          x-stream-index: "001.020"
        original_height:
          format: int32
          type: integer
          x-stream-index: "001.022"
        original_width:
          format: int32
          type: integer
          x-stream-index: "001.021"
        pretext:
          type: string
          x-stream-index: "001.004"
        text:
          description: og:description
          title: Text
          type: string
          x-stream-index: "001.010"
        thumb_url:
          description: URL of detected thumb image
          title: Image URL
          type: string
          x-stream-index: "001.012"
        title:
          description: og:title
          title: Title
          type: string
          x-stream-index: "001.008"
        title_link:
          description: og:url
          title: Title Link
          type: string
          x-stream-index: "001.009"
        type:
          description: Attachment type, could be empty, image, audio or video
          title: Type
          type: string
          x-stream-index: "001.001"
      required:
      - custom
      - duration
      title: Get OG Attachment
      type: object
      x-stream-docs-page-id: og
    GetOrCreateCallRequest:
      nullable: true
      properties:
        data:
          $ref: '#/components/schemas/CallRequest'
          title: ReadOnlyData
          x-stream-index: "003"
        members_limit:
          format: int32
          maximum: 100
          type: integer
          x-stream-index: "007"
        notify:
          description: if provided it sends a notification event to the members for
            this call
          title: Notify
          type: boolean
          x-stream-index: "005"
        ring:
          description: if provided it sends a ring event to the members for this call
          title: Ring
          type: boolean
          x-stream-index: "004"
        video:
          type: boolean
          x-stream-index: "006"
      title: GetOrCreateCallRequest
      type: object
    GetOrCreateCallResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        created:
          type: boolean
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "003.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        membership:
          $ref: '#/components/schemas/MemberResponse'
          x-stream-index: "001.003"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - created
      - duration
      title: GetOrCreateCallResponse
      type: object
    GetOrCreateFeedRequest:
      description: Client request
      nullable: true
      properties:
        activity_selector_options:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        data:
          $ref: '#/components/schemas/FeedInput'
          x-stream-index: "003"
        external_ranking:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        followers_pagination:
          $ref: '#/components/schemas/PagerRequest'
          x-stream-index: "011"
        following_pagination:
          $ref: '#/components/schemas/PagerRequest'
          x-stream-index: "012"
        interest_weights:
          additionalProperties:
            format: float
            type: number
          type: object
          x-stream-index: "008"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "013.001"
        member_pagination:
          $ref: '#/components/schemas/PagerRequest'
          x-stream-index: "010"
        next:
          type: string
          x-stream-index: "013.002"
        prev:
          type: string
          x-stream-index: "013.003"
        view:
          type: string
          x-stream-index: "005"
        watch:
          type: boolean
          x-stream-index: "004"
      title: ClientRequest
      type: object
    GetOrCreateFeedResponse:
      description: Basic response information
      nullable: true
      properties:
        activities:
          items:
            $ref: '#/components/schemas/ActivityResponse'
          type: array
          x-stream-index: "002"
        aggregated_activities:
          items:
            $ref: '#/components/schemas/AggregatedActivityResponse'
          type: array
          x-stream-index: "003"
        created:
          type: boolean
          x-stream-index: "012"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "014.001"
        feed:
          $ref: '#/components/schemas/FeedResponse'
          x-stream-index: "001"
        followers:
          items:
            $ref: '#/components/schemas/FollowResponse'
          type: array
          x-stream-index: "005"
        followers_pagination:
          $ref: '#/components/schemas/PagerResponse'
          x-stream-index: "009"
        following:
          items:
            $ref: '#/components/schemas/FollowResponse'
          type: array
          x-stream-index: "006"
        following_pagination:
          $ref: '#/components/schemas/PagerResponse'
          x-stream-index: "010"
        member_pagination:
          $ref: '#/components/schemas/PagerResponse'
          x-stream-index: "008"
        members:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "004"
        next:
          type: string
          x-stream-index: "013.001"
        notification_status:
          $ref: '#/components/schemas/NotificationStatusResponse'
          x-stream-index: "011"
        pinned_activities:
          items:
            $ref: '#/components/schemas/ActivityPinResponse'
          type: array
          x-stream-index: "007"
        prev:
          type: string
          x-stream-index: "013.002"
      required:
      - feed
      - activities
      - aggregated_activities
      - members
      - followers
      - following
      - pinned_activities
      - created
      - duration
      title: Response
      type: object
    GetReactionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        reactions:
          description: List of reactions
          items:
            $ref: '#/components/schemas/Reaction'
          title: Reactions
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      type: object
    GetRepliesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        messages:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "001"
      required:
      - messages
      - duration
      title: Response
      type: object
    GetThreadResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        thread:
          $ref: '#/components/schemas/ThreadStateResponse'
          description: Enriched thread state
          title: Thread
          x-stream-index: "001"
      required:
      - thread
      - duration
      type: object
    GoLiveRequest:
      nullable: true
      properties:
        recording_storage_name:
          type: string
          x-stream-index: "005"
        start_closed_caption:
          type: boolean
          x-stream-index: "008"
        start_hls:
          type: boolean
          x-stream-index: "003"
        start_recording:
          type: boolean
          x-stream-index: "004"
        start_transcription:
          type: boolean
          x-stream-index: "007"
        transcription_storage_name:
          type: string
          x-stream-index: "006"
      title: GoLiveRequest
      type: object
    GoLiveResponse:
      description: Basic response information
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - call
      - duration
      title: Response
      type: object
    GoogleVisionConfig:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    GroupedStatsResponse:
      nullable: true
      properties:
        name:
          type: string
          x-stream-index: "001"
        unique:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - name
      - unique
      type: object
    HLSSettingsRequest:
      properties:
        auto_on:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        quality_tracks:
          items:
            type: string
          maximum: 3
          minimum: 1
          type: array
          x-stream-index: "003"
      required:
      - quality_tracks
      title: HLSSettingsRequest
      type: object
    HLSSettingsResponse:
      description: HLSSettings is the payload for HLS settings
      properties:
        auto_on:
          title: Auto On
          type: boolean
          x-stream-index: "001"
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "002"
        quality_tracks:
          items:
            type: string
          title: Quality Tracks
          type: array
          x-stream-index: "003"
      required:
      - auto_on
      - enabled
      - quality_tracks
      - layout
      title: HLSSettingsResponse
      type: object
    HarmConfig:
      properties:
        action_sequences:
          items:
            $ref: '#/components/schemas/ActionSequence'
          type: array
          x-stream-index: "001"
        cooldown_period:
          format: int32
          type: integer
          x-stream-index: "005"
        harm_types:
          items:
            type: string
          type: array
          x-stream-index: "003"
        severity:
          type: integer
          x-stream-index: "002"
        threshold:
          format: int32
          type: integer
          x-stream-index: "004"
      required:
      - action_sequences
      - severity
      - harm_types
      - threshold
      - cooldown_period
      type: object
    HealthCheckEvent:
      nullable: true
      properties:
        cid:
          type: string
          x-stream-index: "003"
        connection_id:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004.007"
        me:
          $ref: '#/components/schemas/OwnUserResponse'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: "004.004"
        type:
          default: health.check
          type: string
          x-stream-index: "004.002"
      required:
      - connection_id
      - type
      - created_at
      - custom
      title: HealthCheckEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    HideChannelRequest:
      nullable: true
      properties:
        clear_history:
          description: Whether to clear message history of the channel or not
          title: Clear history
          type: boolean
          x-stream-index: "001"
      type: object
    HideChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    ICEServer:
      properties:
        password:
          type: string
          x-stream-index: "003"
        urls:
          items:
            type: string
          type: array
          x-stream-index: "001"
        username:
          type: string
          x-stream-index: "002"
      required:
      - urls
      - username
      - password
      type: object
    ImageContentParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "001"
      type: object
    ImageData:
      properties:
        frames:
          type: string
          x-stream-index: "005"
        height:
          type: string
          x-stream-index: "003"
        size:
          type: string
          x-stream-index: "004"
        url:
          type: string
          x-stream-index: "001"
        width:
          type: string
          x-stream-index: "002"
      required:
      - url
      - width
      - height
      - size
      - frames
      type: object
    ImageRuleParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    ImageSize:
      properties:
        crop:
          description: Crop mode
          enum:
          - top
          - bottom
          - left
          - right
          - center
          title: Crop
          type: string
          x-stream-index: "001"
        height:
          description: Target image height
          format: int32
          title: Height
          type: integer
          x-stream-index: "003"
        resize:
          description: Resize method
          enum:
          - clip
          - crop
          - scale
          - fill
          title: Resize
          type: string
          x-stream-index: "002"
        width:
          description: Target image width
          format: int32
          title: Width
          type: integer
          x-stream-index: "004"
      title: Image size configuration
      type: object
    ImageUploadRequest:
      nullable: true
      properties:
        file:
          type: string
          x-stream-index: "001.001"
        upload_sizes:
          description: field with JSON-encoded array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          x-stream-index: "001.002"
      type: object
    ImageUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.003.001
        file:
          type: string
          x-stream-index: "001.001"
        thumb_url:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: Array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
      required:
      - duration
      type: object
    Images:
      properties:
        fixed_height:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "002"
        fixed_height_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "004"
        fixed_height_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "003"
        fixed_width:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "005"
        fixed_width_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "007"
        fixed_width_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "006"
        original:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "001"
      required:
      - original
      - fixed_height
      - fixed_height_still
      - fixed_height_downsampled
      - fixed_width
      - fixed_width_still
      - fixed_width_downsampled
      type: object
    IngressAudioEncodingOptionsRequest:
      properties:
        bitrate:
          maximum: 128000
          minimum: 16000
          type: integer
          x-stream-index: "003"
        channels:
          enum:
          - "1"
          - "2"
          format: int32
          type: integer
          x-stream-index: "001"
        enable_dtx:
          type: boolean
          x-stream-index: "002"
      required:
      - channels
      - bitrate
      type: object
    IngressAudioEncodingResponse:
      properties:
        bitrate:
          format: int32
          type: integer
          x-stream-index: "003"
        channels:
          format: int32
          type: integer
          x-stream-index: "001"
        enable_dtx:
          type: boolean
          x-stream-index: "002"
      required:
      - channels
      - enable_dtx
      - bitrate
      type: object
    IngressSettingsRequest:
      properties:
        audio_encoding_options:
          $ref: '#/components/schemas/IngressAudioEncodingOptionsRequest'
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        video_encoding_options:
          additionalProperties:
            $ref: '#/components/schemas/IngressVideoEncodingOptionsRequest'
          type: object
          x-stream-index: "003"
      type: object
    IngressSettingsResponse:
      properties:
        audio_encoding_options:
          $ref: '#/components/schemas/IngressAudioEncodingResponse'
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        video_encoding_options:
          additionalProperties:
            $ref: '#/components/schemas/IngressVideoEncodingResponse'
          type: object
          x-stream-index: "003"
      required:
      - enabled
      type: object
    IngressVideoEncodingOptionsRequest:
      properties:
        layers:
          items:
            $ref: '#/components/schemas/IngressVideoLayerRequest'
          minimum: 1
          type: array
          x-stream-index: "001"
      required:
      - layers
      type: object
    IngressVideoEncodingResponse:
      properties:
        layers:
          items:
            $ref: '#/components/schemas/IngressVideoLayerResponse'
          type: array
          x-stream-index: "001"
      required:
      - layers
      type: object
    IngressVideoLayerRequest:
      nullable: true
      properties:
        bitrate:
          format: int32
          minimum: 1000
          type: integer
          x-stream-index: "002"
        codec:
          enum:
          - h264
          - vp8
          type: string
          x-stream-index: "001"
        frame_rate_limit:
          maximum: 60
          minimum: 1
          type: integer
          x-stream-index: "005"
        max_dimension:
          minimum: 240
          type: integer
          x-stream-index: "004"
        min_dimension:
          minimum: 240
          type: integer
          x-stream-index: "003"
      required:
      - codec
      - bitrate
      - min_dimension
      - max_dimension
      - frame_rate_limit
      type: object
    IngressVideoLayerResponse:
      nullable: true
      properties:
        bitrate:
          type: integer
          x-stream-index: "002"
        codec:
          type: string
          x-stream-index: "001"
        frame_rate_limit:
          type: integer
          x-stream-index: "005"
        max_dimension:
          type: integer
          x-stream-index: "004"
        min_dimension:
          type: integer
          x-stream-index: "003"
      required:
      - codec
      - bitrate
      - min_dimension
      - max_dimension
      - frame_rate_limit
      type: object
    JoinCallRequest:
      nullable: true
      properties:
        create:
          description: if true the call will be created if it doesn't exist
          title: Create
          type: boolean
          x-stream-index: "002"
        data:
          $ref: '#/components/schemas/CallRequest'
          x-stream-index: "003"
        location:
          title: Location
          type: string
          x-stream-index: "009"
        members_limit:
          format: int32
          maximum: 100
          title: The amount of members that should be returned
          type: integer
          x-stream-index: "007"
        migrating_from:
          description: If the participant is migrating from another SFU, then this
            is the ID of the previous SFU
          title: MigratingFrom
          type: string
          x-stream-index: "010"
        notify:
          type: boolean
          x-stream-index: "005"
        ring:
          description: if true and the call is created, the notification will include
            ring=true
          title: Ring
          type: boolean
          x-stream-index: "004"
        video:
          type: boolean
          x-stream-index: "006"
      required:
      - location
      title: JoinCallRequest
      type: object
    JoinCallResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        created:
          title: Created
          type: boolean
          x-stream-index: "002"
        credentials:
          $ref: '#/components/schemas/Credentials'
          title: Credentials
          x-stream-index: "003"
        duration:
          type: string
          x-stream-index: "005.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        membership:
          $ref: '#/components/schemas/MemberResponse'
          x-stream-index: "001.003"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
        stats_options:
          $ref: '#/components/schemas/StatsOptions'
          x-stream-index: "004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - created
      - credentials
      - stats_options
      - duration
      title: JoinCallResponse
      type: object
    KickUserRequest:
      description: KickUserRequest is the payload for kicking a user from a call.
        Optionally block the user as well.
      nullable: true
      properties:
        block:
          description: If true, also block the user from rejoining the call
          title: Block
          type: boolean
          x-stream-index: "004"
        user_id:
          description: The user to kick
          title: UserID
          type: string
          x-stream-index: "003"
      required:
      - user_id
      title: KickUserRequest
      type: object
    KickUserResponse:
      description: KickUserResponse is the payload for kicking a user from a call.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: KickUserResponse
      type: object
    KickedUserEvent:
      description: This event is sent to call participants to notify when a user is
        kicked from a call. Clients should make the kicked user leave the call UI.
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        kicked_by_user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that kicked the participant, null if server-side
          title: Kicked by
          x-stream-index: "004"
        type:
          default: call.kicked_user
          description: 'The type of event: "call.kicked_user" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that was kicked
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      title: KickedUserEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    LLMConfig:
      properties:
        app_context:
          type: string
          x-stream-index: "005"
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/LLMRule'
          type: array
          x-stream-index: "003"
        severity_descriptions:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
      required:
      - enabled
      - rules
      type: object
    LLMRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          - keep
          type: string
          x-stream-index: "003"
        description:
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "004"
      required:
      - label
      - description
      - action
      - severity_rules
      type: object
    Label:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        phrase_list_ids:
          items:
            format: int32
            type: integer
          type: array
          x-stream-index: "002"
      required:
      - name
      type: object
    LabelThresholds:
      properties:
        block:
          description: Threshold for automatic message block
          format: float
          maximum: 1
          minimum: 0
          title: Block
          type: number
          x-stream-index: "002"
        flag:
          description: Threshold for automatic message flag
          format: float
          maximum: 1
          minimum: 0
          title: Flag
          type: number
          x-stream-index: "001"
      type: object
    LayoutSettingsRequest:
      properties:
        detect_orientation:
          type: boolean
          x-stream-index: "005"
        external_app_url:
          type: string
          x-stream-index: "003"
        external_css_url:
          type: string
          x-stream-index: "004"
        name:
          enum:
          - spotlight
          - grid
          - single-participant
          - mobile
          - custom
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      required:
      - name
      type: object
    LimitsSettingsRequest:
      properties:
        max_duration_seconds:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "004"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
        max_participants_exclude_owner:
          type: boolean
          x-stream-index: "003"
        max_participants_exclude_roles:
          items:
            type: string
          type: array
          x-stream-index: "002"
      type: object
    LimitsSettingsResponse:
      properties:
        max_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "004"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
        max_participants_exclude_owner:
          type: boolean
          x-stream-index: "003"
        max_participants_exclude_roles:
          items:
            type: string
          type: array
          x-stream-index: "002"
      required:
      - max_participants_exclude_roles
      type: object
    ListBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocklists
      - duration
      title: Response
      type: object
    ListDevicesResponse:
      description: List devices response
      nullable: true
      properties:
        devices:
          description: List of devices
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - devices
      - duration
      title: ListDevicesResponse
      type: object
    ListRecordingsResponse:
      description: Response for listing recordings
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
        recordings:
          items:
            $ref: '#/components/schemas/CallRecording'
          title: The list of recordings.
          type: array
          x-stream-index: "002"
      required:
      - duration
      - recordings
      title: ListRecordingsResponse
      type: object
    ListTranscriptionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
        transcriptions:
          description: List of transcriptions for the call
          items:
            $ref: '#/components/schemas/CallTranscription'
          title: Transcriptions
          type: array
          x-stream-index: "002"
      required:
      - duration
      - transcriptions
      title: ListTranscriptionsResponse
      type: object
    MarkActivityRequest:
      nullable: true
      properties:
        mark_all_read:
          description: Whether to mark all activities as read
          title: Mark All Read
          type: boolean
          x-stream-index: "005"
        mark_all_seen:
          description: Whether to mark all activities as seen
          title: Mark All Seen
          type: boolean
          x-stream-index: "003"
        mark_read:
          description: List of activity IDs to mark as read
          items:
            type: string
          title: Mark Read
          type: array
          x-stream-index: "004"
        mark_seen:
          description: List of activity IDs to mark as seen
          items:
            type: string
          title: Mark Seen
          type: array
          x-stream-index: "006"
        mark_watched:
          description: List of activity IDs to mark as watched (for stories)
          items:
            type: string
          title: Mark Watched
          type: array
          x-stream-index: "007"
      title: Mark Activity Request
      type: object
    MarkChannelsReadRequest:
      nullable: true
      properties:
        read_by_channel:
          additionalProperties:
            type: string
          description: Map of channel ID to last read message ID
          maximum: 30
          title: Read by channel
          type: object
          x-stream-index: "001"
      type: object
    MarkReadRequest:
      nullable: true
      properties:
        message_id:
          description: ID of the message that is considered last read by client
          title: Message ID
          type: string
          x-stream-index: "001"
        thread_id:
          description: Optional Thread ID to specifically mark a given thread as read
          title: Thread ID
          type: string
          x-stream-index: "002"
      type: object
    MarkReadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        event:
          $ref: '#/components/schemas/MessageReadEvent'
          description: Mark read event
          title: Event
          x-stream-index: "001"
      required:
      - duration
      type: object
    MarkReviewedRequest:
      properties:
        content_to_mark_as_reviewed_limit:
          format: int32
          maximum: 2500
          type: integer
          x-stream-index: "002"
        disable_marking_content_as_reviewed:
          type: boolean
          x-stream-index: "001"
      type: object
    MarkUnreadRequest:
      nullable: true
      properties:
        message_id:
          description: ID of the message from where the channel is marked unread
          title: Message ID
          type: string
          x-stream-index: "001"
        thread_id:
          description: Mark a thread unread, specify both the thread and message id
          title: Thread ID
          type: string
          x-stream-index: "003"
      type: object
    MemberAddedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: member.added
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MemberRemovedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        type:
          default: member.removed
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberRemovedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MemberRequest:
      description: MemberRequest is the payload for adding a member to a call.
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "003"
        role:
          title: Role
          type: string
          x-stream-index: "002"
        user_id:
          minLength: 1
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - user_id
      title: MemberRequest
      type: object
    MemberResponse:
      description: MemberResponse is the payload for a member of a call.
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom member response data
          title: Custom
          type: object
          x-stream-index: "004"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "007"
        role:
          title: Role
          type: string
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
        user_id:
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_id
      - custom
      - created_at
      - updated_at
      title: MemberResponse
      type: object
    MemberUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: member.updated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MemberUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MembersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        members:
          description: List of found members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "001"
      required:
      - members
      - duration
      type: object
    MembershipLevelResponse:
      properties:
        created_at:
          description: When the membership level was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          description: Custom data for the membership level
          title: Custom Data
          type: object
          x-stream-index: "006"
        description:
          description: Description of the membership level
          title: Description
          type: string
          x-stream-index: "003"
        id:
          description: Unique identifier for the membership level
          title: ID
          type: string
          x-stream-index: "001"
        name:
          description: Display name for the membership level
          title: Name
          type: string
          x-stream-index: "002"
        priority:
          description: Priority level
          format: int32
          title: Priority
          type: integer
          x-stream-index: "004"
        tags:
          description: Activity tags this membership level gives access to
          items:
            type: string
          title: Tags
          type: array
          x-stream-index: "005"
        updated_at:
          description: When the membership level was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "008"
      required:
      - id
      - name
      - priority
      - tags
      - created_at
      - updated_at
      title: Membership Level Response
      type: object
    Message:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "012"
        before_message_send_failed:
          type: boolean
          x-stream-index: "046"
        cid:
          type: string
          x-stream-index: "028"
        command:
          type: string
          x-stream-index: "006"
        created_at:
          format: date-time
          type: number
          x-stream-index: "030"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "034"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "033"
        deleted_for_me:
          type: boolean
          x-stream-index: "060"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "023"
        html:
          type: string
          x-stream-index: "007"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "044"
        id:
          type: string
          x-stream-index: "002"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "040"
        latest_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "013"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "059"
        mentioned_users:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "043"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "052"
        mml:
          type: string
          x-stream-index: "005"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "056"
        own_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "014"
        parent_id:
          type: string
          x-stream-index: "019"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "051"
        pinned:
          type: boolean
          x-stream-index: "047"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "048"
        pinned_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "050"
        poll:
          $ref: '#/components/schemas/Poll'
          x-stream-index: "054"
        poll_id:
          type: string
          x-stream-index: "053"
        quoted_message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "025"
        quoted_message_id:
          type: string
          x-stream-index: "024"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "015"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "017"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "016"
        reminder:
          $ref: '#/components/schemas/MessageReminder'
          x-stream-index: "058"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "022"
        restricted_visibility:
          items:
            type: string
          type: array
          x-stream-index: "011"
        shadowed:
          type: boolean
          x-stream-index: "036"
        shared_location:
          $ref: '#/components/schemas/SharedLocation'
          x-stream-index: "055"
        show_in_channel:
          type: boolean
          x-stream-index: "021"
        silent:
          type: boolean
          x-stream-index: "045"
        text:
          type: string
          x-stream-index: "004"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "027"
        type:
          type: string
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "031"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "010"
      required:
      - id
      - text
      - html
      - type
      - restricted_visibility
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reaction_groups
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      type: object
    MessageActionRequest:
      nullable: true
      properties:
        form_data:
          additionalProperties:
            type: string
          description: ReadOnlyData to execute command with
          title: Form data
          type: object
          x-stream-index: "002"
      required:
      - form_data
      type: object
    MessageChangeSet:
      properties:
        attachments:
          type: boolean
          x-stream-index: "005"
        custom:
          type: boolean
          x-stream-index: "001"
        html:
          type: boolean
          x-stream-index: "004"
        mentioned_user_ids:
          type: boolean
          x-stream-index: "006"
        mml:
          type: boolean
          x-stream-index: "003"
        pin:
          type: boolean
          x-stream-index: "009"
        quoted_message_id:
          type: boolean
          x-stream-index: "007"
        silent:
          type: boolean
          x-stream-index: "008"
        text:
          type: boolean
          x-stream-index: "002"
      required:
      - custom
      - text
      - mml
      - html
      - attachments
      - mentioned_user_ids
      - quoted_message_id
      - silent
      - pin
      type: object
    MessageDeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007.002"
        deleted_for_me:
          type: boolean
          x-stream-index: "003"
        hard_delete:
          type: boolean
          x-stream-index: "002.001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "006.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.deleted
          type: string
          x-stream-index: "007.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
      required:
      - hard_delete
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: MessageDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageFlagResponse:
      nullable: true
      properties:
        approved_at:
          format: date-time
          type: number
          x-stream-index: "013"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        created_by_automod:
          type: boolean
          x-stream-index: "001"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "008"
        details:
          $ref: '#/components/schemas/FlagDetails'
          x-stream-index: "006"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "005"
        moderation_feedback:
          $ref: '#/components/schemas/FlagFeedback'
          x-stream-index: "003"
        moderation_result:
          $ref: '#/components/schemas/MessageModerationResult'
          x-stream-index: "002"
        reason:
          type: string
          x-stream-index: "007"
        rejected_at:
          format: date-time
          type: number
          x-stream-index: "014"
        reviewed_at:
          format: date-time
          type: number
          x-stream-index: "011"
        reviewed_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "012"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
      required:
      - created_by_automod
      - created_at
      - updated_at
      type: object
    MessageModerationResult:
      description: Result of the message moderation
      properties:
        action:
          description: Action taken by automod
          title: Action
          type: string
          x-stream-index: "002"
        ai_moderation_response:
          $ref: '#/components/schemas/ModerationResponse'
          description: Response from AI moderation
          title: ModerationResponse
          x-stream-index: "007"
        blocked_word:
          description: Word that was blocked
          title: Blocked word
          type: string
          x-stream-index: "004"
        blocklist_name:
          description: Name of the blocklist
          title: Blocklist name
          type: string
          x-stream-index: "005"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "010"
        message_id:
          description: ID of the message
          title: Message ID
          type: string
          x-stream-index: "001"
        moderated_by:
          description: User who moderated the message
          title: Moderated by
          type: string
          x-stream-index: "003"
        moderation_thresholds:
          $ref: '#/components/schemas/Thresholds'
          description: Thresholds for AI moderation
          title: Thresholds
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "011"
        user_bad_karma:
          description: Whether user has bad karma
          title: User bad karma
          type: boolean
          x-stream-index: "009"
        user_karma:
          description: Karma of the user
          format: float
          title: User karma
          type: number
          x-stream-index: "008"
      required:
      - message_id
      - action
      - user_karma
      - user_bad_karma
      - created_at
      - updated_at
      title: Message moderation result
      type: object
    MessageNewEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "006.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: notification.thread_message_new
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "002.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageOptions:
      properties:
        include_thread_participants:
          type: boolean
          x-stream-index: "001"
      type: object
    MessagePaginationParams:
      type: object
    MessageReadEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "011"
        channel_id:
          type: string
          x-stream-index: "003"
        channel_last_message_at:
          format: date-time
          type: number
          x-stream-index: "005"
        channel_type:
          type: string
          x-stream-index: "004"
        cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        last_read_message_id:
          type: string
          x-stream-index: "010"
        team:
          type: string
          x-stream-index: "006"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "008"
        type:
          default: message.read
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          x-stream-index: "007"
      required:
      - type
      - cid
      - channel_id
      - channel_type
      - created_at
      type: object
    MessageReminder:
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "004"
        channel_cid:
          type: string
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "011"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "006"
        message_id:
          type: string
          x-stream-index: "005"
        remind_at:
          format: date-time
          type: number
          x-stream-index: "009"
        task_id:
          type: string
          x-stream-index: "010"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "012"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        user_id:
          type: string
          x-stream-index: "007"
      required:
      - channel_cid
      - message_id
      - user_id
      - task_id
      - created_at
      - updated_at
      type: object
    MessageRequest:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          maximum: 30
          type: array
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        mentioned_users:
          items:
            type: string
          maximum: 100
          type: array
          x-stream-index: "008"
        mml:
          type: string
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "005"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "015"
        pinned:
          type: boolean
          x-stream-index: "013"
        pinned_at:
          format: date-time
          nullable: true
          type: string
          x-stream-index: "014"
        poll_id:
          type: string
          x-stream-index: "039"
        quoted_message_id:
          type: string
          x-stream-index: "009"
        restricted_visibility:
          items:
            type: string
          maximum: 10
          type: array
          x-stream-index: "016"
        shared_location:
          $ref: '#/components/schemas/SharedLocation'
          x-stream-index: "040"
        show_in_channel:
          type: boolean
          x-stream-index: "006"
        silent:
          type: boolean
          x-stream-index: "012"
        text:
          type: string
          x-stream-index: "002"
        type:
          enum:
          - ''''''
          - regular
          - system
          type: string
          x-stream-index: "011"
      type: object
    MessageResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "009"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "023"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "024"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "027"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "026"
        deleted_for_me:
          type: boolean
          x-stream-index: "045"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "019"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "042"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "031"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "029"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "010"
        member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          description: Channel member data for the message sender including only the
            `channel_role`
          title: Member object
          x-stream-index: "008"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "030"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "037"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "040"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "011"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "016"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "036"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "033"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "034"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "035"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "039"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "038"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "021"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "020"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "012"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "015"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "013"
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          x-stream-index: "043"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "018"
        restricted_visibility:
          description: A list of user ids that have restricted visibility to the message,
            if the list is not empty, the message is only visible to the users in
            the list
          items:
            type: string
          title: Restricted visibility
          type: array
          x-stream-index: "041"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "028"
        shared_location:
          $ref: '#/components/schemas/SharedLocationResponseData'
          description: Contains shared location data
          title: Shared Location
          x-stream-index: "044"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "017"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "032"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "022"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "025"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      - restricted_visibility
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    MessageStatsResponse:
      properties:
        count_over_time:
          items:
            $ref: '#/components/schemas/CountByMinuteResponse'
          type: array
          x-stream-index: "001"
      type: object
    MessageUndeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.undeleted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageUndeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageUpdate:
      properties:
        change_set:
          $ref: '#/components/schemas/MessageChangeSet'
          x-stream-index: "002"
        old_text:
          type: string
          x-stream-index: "001"
      type: object
    MessageUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "005.002"
        channel_type:
          type: string
          x-stream-index: "005.003"
        cid:
          type: string
          x-stream-index: "005.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        team:
          type: string
          x-stream-index: "002.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: message.updated
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: MessageUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    MessageWithChannelResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "001.009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel object
          title: Channel
          x-stream-index: "002"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "001.023"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.024"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.027"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "001.026"
        deleted_for_me:
          type: boolean
          x-stream-index: "001.045"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "001.019"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "001.042"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "001.005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "001.031"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001.001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "001.029"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "001.010"
        member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          description: Channel member data for the message sender including only the
            `channel_role`
          title: Member object
          x-stream-index: "001.008"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "001.030"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "001.037"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "001.003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "001.040"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "001.011"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "001.016"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.036"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.033"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.034"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "001.035"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.039"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "001.038"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.021"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.020"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "001.012"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.015"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "001.013"
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          x-stream-index: "001.043"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "001.018"
        restricted_visibility:
          description: A list of user ids that have restricted visibility to the message,
            if the list is not empty, the message is only visible to the users in
            the list
          items:
            type: string
          title: Restricted visibility
          type: array
          x-stream-index: "001.041"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "001.028"
        shared_location:
          $ref: '#/components/schemas/SharedLocationResponseData'
          description: Contains shared location data
          title: Shared Location
          x-stream-index: "001.044"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "001.017"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "001.032"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "001.002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "001.022"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "001.006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.025"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "001.007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      - restricted_visibility
      - channel
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    ModerationActionConfig:
      nullable: true
      properties:
        action:
          type: string
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        description:
          type: string
          x-stream-index: "008"
        entity_type:
          type: string
          x-stream-index: "004"
        icon:
          type: string
          x-stream-index: "007"
        order:
          format: int32
          type: integer
          x-stream-index: "005"
      required:
      - entity_type
      - order
      - action
      - icon
      - description
      - custom
      type: object
    ModerationCustomActionEvent:
      description: This event is sent when a custom moderation action is executed
      nullable: true
      properties:
        action_id:
          description: The ID of the custom action that was executed
          title: ActionID
          type: string
          x-stream-index: "002"
        action_options:
          additionalProperties: {}
          description: Additional options passed to the custom action
          title: ActionOptions
          type: object
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: The message if the moderated content was a message
          title: Message
          x-stream-index: "005"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: The review queue item the action was executed on
          title: ReviewQueueItem
          x-stream-index: "004"
        type:
          default: moderation.custom_action
          type: string
          x-stream-index: "001.002"
      required:
      - type
      - created_at
      - custom
      - action_id
      - review_queue_item
      title: ModerationCustomActionEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationFlagResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "015"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        entity_creator_id:
          type: string
          x-stream-index: "007"
        entity_id:
          type: string
          x-stream-index: "006"
        entity_type:
          type: string
          x-stream-index: "005"
        labels:
          items:
            type: string
          type: array
          x-stream-index: "011"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "008"
        reason:
          type: string
          x-stream-index: "009"
        result:
          items:
            additionalProperties: {}
            type: object
          type: array
          x-stream-index: "012"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          x-stream-index: "014"
        review_queue_item_id:
          type: string
          x-stream-index: "013"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "016"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - type
      - user_id
      - entity_type
      - entity_id
      - result
      - created_at
      - updated_at
      type: object
    ModerationFlaggedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          type: string
          x-stream-index: "001"
        object_id:
          type: string
          x-stream-index: "002"
        type:
          default: moderation.flagged
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationMarkReviewedEvent:
      description: This event is sent when a moderation item is marked as reviewed
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003.007"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: The review queue item that was marked as reviewed
          title: ReviewQueueItem
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: The message if the reviewed content was a message
          title: Message
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: "003.004"
        type:
          default: moderation.mark_reviewed
          type: string
          x-stream-index: "003.002"
      required:
      - item
      - type
      - created_at
      - custom
      title: ModerationMarkReviewedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationPayload:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        images:
          items:
            type: string
          maximum: 30
          type: array
          x-stream-index: "002"
        texts:
          items:
            type: string
          type: array
          x-stream-index: "001"
        videos:
          items:
            type: string
          type: array
          x-stream-index: "003"
      type: object
    ModerationResponse:
      properties:
        action:
          type: string
          x-stream-index: "004"
        explicit:
          format: float
          type: number
          x-stream-index: "002"
        spam:
          format: float
          type: number
          x-stream-index: "003"
        toxic:
          format: float
          type: number
          x-stream-index: "001"
      required:
      - toxic
      - explicit
      - spam
      - action
      - automod_response
      type: object
    ModerationV2Response:
      properties:
        action:
          type: string
          x-stream-index: "001"
        blocklist_matched:
          type: string
          x-stream-index: "005"
        image_harms:
          items:
            type: string
          type: array
          x-stream-index: "004"
        original_text:
          type: string
          x-stream-index: "002"
        platform_circumvented:
          type: boolean
          x-stream-index: "007"
        semantic_filter_matched:
          type: string
          x-stream-index: "006"
        text_harms:
          items:
            type: string
          type: array
          x-stream-index: "003"
      required:
      - action
      - original_text
      type: object
    MuteChannelRequest:
      nullable: true
      properties:
        channel_cids:
          description: Channel CIDs to mute (if multiple channels)
          items:
            type: string
          maximum: 25
          title: Channel CIDs
          type: array
          x-stream-index: "002"
        expiration:
          description: Duration of mute in milliseconds
          title: Expiration
          type: integer
          x-stream-index: "003"
      type: object
    MuteChannelResponse:
      nullable: true
      properties:
        channel_mute:
          $ref: '#/components/schemas/ChannelMute'
          description: Object with channel mute (if one channel was muted)
          title: Channel mute
          x-stream-index: "001"
        channel_mutes:
          description: Object with mutes (if multiple channels were muted)
          items:
            $ref: '#/components/schemas/ChannelMute'
          title: Channel mutes
          type: array
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "004.001"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own user
          x-stream-index: "003"
      required:
      - duration
      type: object
    MuteRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to mute (if multiple users)
          items:
            type: string
          title: Target IDs
          type: array
          x-stream-index: "001"
        timeout:
          description: Duration of mute in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "002"
      required:
      - target_ids
      title: MuteRequest
      type: object
    MuteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "004.001"
        mutes:
          description: Object with mutes (if multiple users were muted)
          items:
            $ref: '#/components/schemas/UserMute'
          title: Mutes
          type: array
          x-stream-index: "001"
        non_existing_users:
          description: A list of users that can't be found. Common cause for this
            is deleted users
          items:
            type: string
          title: Non Existing Users
          type: array
          x-stream-index: "003"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own User
          x-stream-index: "002"
      required:
      - duration
      title: MuteResponse
      type: object
    MuteUsersRequest:
      nullable: true
      properties:
        audio:
          title: Audio
          type: boolean
          x-stream-index: "005"
        mute_all_users:
          type: boolean
          x-stream-index: "003"
        screenshare:
          title: Screenshare
          type: boolean
          x-stream-index: "007"
        screenshare_audio:
          title: ScreenshareAudio
          type: boolean
          x-stream-index: "008"
        user_ids:
          items:
            type: string
          title: UserIDs
          type: array
          x-stream-index: "004"
        video:
          title: Video
          type: boolean
          x-stream-index: "006"
      title: MuteUsersRequest
      type: object
    MuteUsersResponse:
      description: MuteUsersResponse is the response payload for the mute users endpoint.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: MuteUsersResponse
      type: object
    NetworkMetricsReportResponse:
      properties:
        average_connection_time:
          format: float
          type: number
          x-stream-index: "003"
        average_jitter:
          format: float
          type: number
          x-stream-index: "002"
        average_latency:
          format: float
          type: number
          x-stream-index: "001"
        average_time_to_reconnect:
          format: float
          type: number
          x-stream-index: "004"
      type: object
    NoiseCancellationSettings:
      properties:
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
      required:
      - mode
      type: object
    NotificationAddedToChannelEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "001.001"
        type:
          default: notification.added_to_channel
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationAddedToChannelEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationChannelDeletedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        team:
          type: string
          x-stream-index: "001.001"
        type:
          default: notification.channel_deleted
          type: string
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationChannelDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationChannelMutesUpdatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        me:
          $ref: '#/components/schemas/OwnUser'
          x-stream-index: "001"
        type:
          default: notification.channel_mutes_updated
          type: string
          x-stream-index: "002.001"
      required:
      - me
      - type
      - created_at
      title: NotificationChannelMutesUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationChannelTruncatedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: notification.channel_truncated
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationChannelTruncatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationConfig:
      properties:
        track_read:
          type: boolean
          x-stream-index: "002"
        track_seen:
          type: boolean
          x-stream-index: "001"
      type: object
    NotificationContext:
      properties:
        target:
          $ref: '#/components/schemas/NotificationTarget'
          description: Information about the target of the notification
          title: Notification Target
          x-stream-index: "002"
        trigger:
          $ref: '#/components/schemas/NotificationTrigger'
          description: Information about what triggered the notification
          title: Notification Trigger
          x-stream-index: "001"
      title: NotificationContext
      type: object
    NotificationFeedUpdatedEvent:
      description: Emitted when notification feed is updated.
      nullable: true
      properties:
        aggregated_activities:
          description: Aggregated activities for notification feeds
          items:
            $ref: '#/components/schemas/AggregatedActivityResponse'
          title: Aggregated Activities
          type: array
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          description: The ID of the feed
          title: Feed ID
          type: string
          x-stream-index: "003.002"
        notification_status:
          $ref: '#/components/schemas/NotificationStatusResponse'
          description: Notification status including unread/unseen counts
          title: Notification Status
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.notification_feed.updated
          description: 'The type of event: "feeds.notification_feed.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who triggered the notification
          title: User
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: NotificationFeedUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationInviteAcceptedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.invite_accepted
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationInviteAcceptedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationInviteRejectedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.invite_rejected
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationInviteRejectedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationInvitedEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.invited
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationInvitedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationMarkReadEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        team:
          type: string
          x-stream-index: "002.001"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "006"
        type:
          default: notification.mark_read
          type: string
          x-stream-index: "001.001"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "007"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "005"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "008"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      title: NotificationMarkReadEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationMarkUnreadEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003.004"
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "003.005"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        first_unread_message_id:
          type: string
          x-stream-index: "005"
        last_read_at:
          format: date-time
          type: number
          x-stream-index: "006"
        last_read_message_id:
          type: string
          x-stream-index: "012"
        team:
          type: string
          x-stream-index: "002.001"
        thread_id:
          type: string
          x-stream-index: "013"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        type:
          default: notification.mark_unread
          type: string
          x-stream-index: "001.001"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_messages:
          format: int32
          type: integer
          x-stream-index: "007"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      - first_unread_message_id
      - last_read_at
      - unread_messages
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      title: NotificationMarkUnreadEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationMutesUpdatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        me:
          $ref: '#/components/schemas/OwnUser'
          x-stream-index: "001"
        type:
          default: notification.mutes_updated
          type: string
          x-stream-index: "002.001"
      required:
      - me
      - type
      - created_at
      title: NotificationMutesUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationNewMessageEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "004.004"
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "004.005"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: notification.message_new
          type: string
          x-stream-index: "003.001"
      required:
      - message
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationNewMessageEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationRemovedFromChannelEvent:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002.004"
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: "002.005"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "004.001"
        type:
          default: notification.removed_from_channel
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      - channel_member_count
      title: NotificationRemovedFromChannelEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationStatusResponse:
      properties:
        last_read_at:
          format: date-time
          type: number
          x-stream-index: "006"
        last_seen_at:
          description: When notifications were last seen
          format: date-time
          title: Last Seen At
          type: number
          x-stream-index: "005"
        read_activities:
          description: IDs of activities that have been read
          items:
            type: string
          title: Read Activities
          type: array
          x-stream-index: "003"
        seen_activities:
          items:
            type: string
          type: array
          x-stream-index: "004"
        unread:
          description: Number of unread notifications
          format: int32
          title: Unread
          type: integer
          x-stream-index: "001"
        unseen:
          description: Number of unseen notifications
          format: int32
          title: Unseen
          type: integer
          x-stream-index: "002"
      required:
      - unread
      - unseen
      title: Notification Status
      type: object
    NotificationTarget:
      properties:
        attachments:
          description: Attachments on the target activity (for activity targets)
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "005"
        id:
          description: The ID of the target (activity ID or user ID)
          title: Target ID
          type: string
          x-stream-index: "001"
        name:
          description: The name of the target user (for user targets like follows)
          title: User Name
          type: string
          x-stream-index: "006"
        text:
          description: The text content of the target activity (for activity targets)
          title: Activity Text
          type: string
          x-stream-index: "004"
        type:
          description: The type of the target activity (for activity targets)
          title: Activity Type
          type: string
          x-stream-index: "003"
        user_id:
          description: The ID of the user who created the target activity (for activity
            targets)
          title: User ID
          type: string
          x-stream-index: "002"
      required:
      - id
      title: NotificationTarget
      type: object
    NotificationTrigger:
      properties:
        text:
          description: Human-readable text describing the notification
          title: Notification Text
          type: string
          x-stream-index: "002"
        type:
          description: The type of notification (mention, reaction, comment, follow,
            etc.)
          title: Notification Type
          type: string
          x-stream-index: "001"
      required:
      - type
      - text
      title: NotificationTrigger
      type: object
    OCRRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
      required:
      - label
      - action
      type: object
    OnlyUserID:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    OwnCapability:
      description: All possibility of string to use
      enum:
      - block-users
      - change-max-duration
      - create-call
      - create-reaction
      - enable-noise-cancellation
      - end-call
      - join-backstage
      - join-call
      - join-ended-call
      - kick-user
      - mute-users
      - pin-for-everyone
      - read-call
      - remove-call-member
      - screenshare
      - send-audio
      - send-closed-captions-call
      - send-video
      - start-broadcast-call
      - start-closed-captions-call
      - start-frame-record-call
      - start-record-call
      - start-transcription-call
      - stop-broadcast-call
      - stop-closed-captions-call
      - stop-frame-record-call
      - stop-record-call
      - stop-transcription-call
      - update-call
      - update-call-member
      - update-call-permissions
      - update-call-settings
      title: OwnCapability
      type: string
    OwnUser:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "046"
        banned:
          type: boolean
          x-stream-index: "016"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "045"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "029"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "014"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "013"
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
          x-stream-index: "027"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "023"
        language:
          type: string
          x-stream-index: "035"
        last_active:
          format: date-time
          type: number
          x-stream-index: "011"
        last_engaged_at:
          format: date-time
          type: number
          x-stream-index: "012"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "037"
        mutes:
          items:
            $ref: '#/components/schemas/UserMute'
          type: array
          x-stream-index: "028"
        online:
          type: boolean
          x-stream-index: "022"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "026"
        push_preferences:
          $ref: '#/components/schemas/PushPreferences'
          x-stream-index: "025"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "036"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "005"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "031"
        total_unread_count_by_team:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "032"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "033"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "030"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "034"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
      required:
      - id
      - role
      - custom
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - total_unread_count_by_team
      - unread_channels
      - unread_threads
      - language
      type: object
    OwnUserResponse:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        banned:
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "015"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.011"
        devices:
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.014"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "013"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.013"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        push_preferences:
          $ref: '#/components/schemas/PushPreferences'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.015"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        total_unread_count_by_team:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "010"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "011"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "012"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      type: object
    PagerRequest:
      properties:
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002"
        prev:
          type: string
          x-stream-index: "003"
      type: object
    PagerResponse:
      properties:
        next:
          type: string
          x-stream-index: "001"
        prev:
          type: string
          x-stream-index: "002"
      type: object
    PaginationParams:
      properties:
        limit:
          format: int32
          minimum: 0
          type: integer
          x-stream-index: "001"
        offset:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    ParticipantCountByMinuteResponse:
      nullable: true
      properties:
        first:
          format: int32
          type: integer
          x-stream-index: "002"
        last:
          format: int32
          type: integer
          x-stream-index: "003"
        max:
          format: int32
          type: integer
          x-stream-index: "004"
        min:
          format: int32
          type: integer
          x-stream-index: "005"
        start_ts:
          format: date-time
          type: number
          x-stream-index: "001"
      required:
      - start_ts
      - first
      - last
      - max
      - min
      type: object
    ParticipantCountOverTimeResponse:
      properties:
        by_minute:
          items:
            $ref: '#/components/schemas/ParticipantCountByMinuteResponse'
          type: array
          x-stream-index: "001"
      type: object
    ParticipantReportResponse:
      properties:
        by_browser:
          items:
            $ref: '#/components/schemas/GroupedStatsResponse'
          type: array
          x-stream-index: "008"
        by_country:
          items:
            $ref: '#/components/schemas/GroupedStatsResponse'
          type: array
          x-stream-index: "005"
        by_device:
          items:
            $ref: '#/components/schemas/GroupedStatsResponse'
          type: array
          x-stream-index: "006"
        by_operating_system:
          items:
            $ref: '#/components/schemas/GroupedStatsResponse'
          type: array
          x-stream-index: "007"
        count_over_time:
          $ref: '#/components/schemas/ParticipantCountOverTimeResponse'
          x-stream-index: "004"
        max_concurrent:
          format: int32
          type: integer
          x-stream-index: "003"
        publishers:
          $ref: '#/components/schemas/PublisherStatsResponse'
          x-stream-index: "009"
        subscribers:
          $ref: '#/components/schemas/SubscriberStatsResponse'
          x-stream-index: "010"
        sum:
          format: int32
          type: integer
          x-stream-index: "001"
        unique:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - sum
      - unique
      type: object
    ParticipantSeriesAggregate:
      properties:
        label:
          type: string
          x-stream-index: "001"
        series:
          additionalProperties:
            items:
              items:
                format: float
                type: number
              type: array
            type: array
          type: object
          x-stream-index: "002"
      required:
      - label
      - series
      type: object
    ParticipantSeriesIngressSection:
      properties:
        top_charts:
          items:
            $ref: '#/components/schemas/ParticipantSeriesTopChart'
          type: array
          x-stream-index: "001"
      type: object
    ParticipantSeriesPublisherSection:
      properties:
        aggregate:
          $ref: '#/components/schemas/ParticipantSeriesAggregate'
          x-stream-index: "003"
        by_track_type:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ParticipantSeriesTrack'
            type: array
          type: object
          x-stream-index: "002"
        top_charts:
          items:
            $ref: '#/components/schemas/ParticipantSeriesTopChart'
          type: array
          x-stream-index: "001"
      type: object
    ParticipantSeriesSubscriberSection:
      properties:
        aggregate:
          $ref: '#/components/schemas/ParticipantSeriesAggregate'
          x-stream-index: "002"
        subscriptions:
          items:
            $ref: '#/components/schemas/ParticipantSeriesSubscriptionsCharts'
          type: array
          x-stream-index: "003"
        top_charts:
          items:
            $ref: '#/components/schemas/ParticipantSeriesTopChart'
          type: array
          x-stream-index: "001"
      type: object
    ParticipantSeriesSubscriptionsCharts:
      properties:
        by_track_type:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ParticipantSeriesTrack'
            type: array
          type: object
          x-stream-index: "004"
        publisher_name:
          type: string
          x-stream-index: "003"
        publisher_user_id:
          type: string
          x-stream-index: "001"
        publisher_user_session_id:
          type: string
          x-stream-index: "002"
      required:
      - publisher_user_id
      type: object
    ParticipantSeriesTimeframe:
      properties:
        since:
          format: date-time
          type: number
          x-stream-index: "001"
        step_seconds:
          format: int32
          type: integer
          x-stream-index: "003"
        until:
          format: date-time
          type: number
          x-stream-index: "002"
      required:
      - since
      - until
      - step_seconds
      type: object
    ParticipantSeriesTopChart:
      properties:
        label:
          type: string
          x-stream-index: "002"
        metric:
          type: string
          x-stream-index: "001"
        series:
          items:
            items:
              format: float
              type: number
            type: array
          type: array
          x-stream-index: "003"
      required:
      - metric
      - label
      - series
      type: object
    ParticipantSeriesTrack:
      properties:
        label:
          type: string
          x-stream-index: "002"
        series:
          additionalProperties:
            items:
              items:
                format: float
                type: number
              type: array
            type: array
          type: object
          x-stream-index: "004"
        track_id:
          type: string
          x-stream-index: "001"
        track_type:
          type: string
          x-stream-index: "003"
      required:
      - track_id
      - label
      - track_type
      - series
      type: object
    PendingMessageEvent:
      description: Pending message event for async moderation
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "002.007"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        message:
          $ref: '#/components/schemas/Message'
          description: The pending message
          title: Message
          x-stream-index: "002.009"
        metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002.010"
        method:
          description: The method used for the pending message
          title: Method
          type: string
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        type:
          default: message.pending
          description: 'The type of event: "message.pending" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.002"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.002"
      required:
      - type
      - custom
      - method
      - created_at
      title: PendingMessageEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PendingMessageResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "002"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "003"
        metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      type: object
    PerSDKUsageReport:
      nullable: true
      properties:
        by_version:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "002"
        total:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - total
      - by_version
      type: object
    PermissionRequestEvent:
      description: |-
        This event is sent when a user requests access to a feature on a call,
        clients receiving this event should display a permission request to the user
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        permissions:
          description: The list of permissions requested by the user
          items:
            type: string
          title: Permissions
          type: array
          x-stream-index: "004"
        type:
          default: call.permission_request
          description: 'The type of event: "call.permission_request" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who sent the permission request
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      - permissions
      title: PermissionRequestEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PinActivityRequest:
      nullable: true
      title: Pin Activity Request
      type: object
    PinActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The pinned activity
          title: Activity
          x-stream-index: "001"
        created_at:
          description: When the activity was pinned
          format: date-time
          title: Created At
          type: number
          x-stream-index: "004"
        duration:
          type: string
          x-stream-index: "005.001"
        feed:
          description: Fully qualified ID of the feed the activity was pinned to
          title: Feed ID
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user who pinned the activity
          title: User ID
          type: string
          x-stream-index: "003"
      required:
      - activity
      - feed
      - user_id
      - created_at
      - duration
      title: Pin Activity Response
      type: object
    PinRequest:
      description: PinRequest is the payload for pinning a message.
      nullable: true
      properties:
        session_id:
          description: the session ID of the user who pinned the message
          title: SessionID
          type: string
          x-stream-index: "003"
        user_id:
          description: the user ID of the user who pinned the message
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user_id
      - session_id
      title: PinRequest
      type: object
    PinResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    Poll:
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "023"
        allow_answers:
          type: boolean
          x-stream-index: "010"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "009"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "015"
        created_at:
          format: date-time
          type: number
          x-stream-index: "021"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "020"
        created_by_id:
          type: string
          x-stream-index: "019"
        description:
          type: string
          x-stream-index: "005"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "007"
        id:
          type: string
          x-stream-index: "003"
        is_closed:
          type: boolean
          x-stream-index: "011"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "017"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVote'
            type: array
          type: object
          x-stream-index: "016"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "008"
        name:
          type: string
          x-stream-index: "004"
        options:
          items:
            $ref: '#/components/schemas/PollOption'
          type: array
          x-stream-index: "013"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "018"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "022"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "012"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "014"
        voting_visibility:
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      - description
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - vote_counts_by_option
      - answers_count
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - Custom
      type: object
    PollClosedEvent:
      description: Emitted when a poll is closed.
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "001.003"
        cid:
          description: The CID of the channel containing the poll
          title: Channel CID
          type: string
          x-stream-index: 001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.007
        message_id:
          description: The ID of the message containing the poll
          title: Message ID
          type: string
          x-stream-index: "001.002"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: The poll object which was closed
          title: Poll
          x-stream-index: "001.004"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.004
        type:
          default: poll.closed
          description: 'The type of event: "poll.closed" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.002
      required:
      - type
      - created_at
      - custom
      - poll
      title: PollClosedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollClosedFeedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.002.001.007
        feed_visibility:
          type: string
          x-stream-index: 001.002.003
        fid:
          type: string
          x-stream-index: 001.002.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.002.001.004
        type:
          default: feeds.poll.closed
          type: string
          x-stream-index: 001.002.001.002
      required:
      - poll
      - type
      - created_at
      - custom
      - fid
      title: PollClosedFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollDeletedEvent:
      description: Emitted when a poll is deleted.
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "001.003"
        cid:
          description: The CID of the channel containing the poll
          title: Channel CID
          type: string
          x-stream-index: 001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.007
        message_id:
          description: The ID of the message containing the poll
          title: Message ID
          type: string
          x-stream-index: "001.002"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: The poll object which was deleted
          title: Poll
          x-stream-index: "001.004"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.004
        type:
          default: poll.deleted
          description: 'The type of event: "poll.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.002
      required:
      - type
      - created_at
      - custom
      - poll
      title: PollDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollDeletedFeedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.002.001.007
        feed_visibility:
          type: string
          x-stream-index: 001.002.003
        fid:
          type: string
          x-stream-index: 001.002.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.002.001.004
        type:
          default: feeds.poll.deleted
          type: string
          x-stream-index: 001.002.001.002
      required:
      - poll
      - type
      - created_at
      - custom
      - fid
      title: PollDeletedFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollOption:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollOptionInput:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
      type: object
    PollOptionRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      type: object
    PollOptionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll_option:
          $ref: '#/components/schemas/PollOptionResponseData'
          description: Poll option
          title: PollOptionResponseData
          x-stream-index: "001"
      required:
      - poll_option
      - duration
      type: object
    PollOptionResponseData:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: Poll
          title: PollResponseData
          x-stream-index: "001"
      required:
      - poll
      - duration
      type: object
    PollResponseData:
      properties:
        allow_answers:
          type: boolean
          x-stream-index: "008"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "007"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "012"
        created_at:
          format: date-time
          type: number
          x-stream-index: "019"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "018"
        created_by_id:
          type: string
          x-stream-index: "017"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "021"
        description:
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        is_closed:
          type: boolean
          x-stream-index: "009"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "015"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVoteResponseData'
            type: array
          type: object
          x-stream-index: "014"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionResponseData'
          type: array
          x-stream-index: "011"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "016"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "020"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "010"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "013"
        voting_visibility:
          type: string
          x-stream-index: "004"
      required:
      - id
      - name
      - description
      - voting_visibility
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - answers_count
      - vote_counts_by_option
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - custom
      type: object
    PollUpdatedEvent:
      description: Emitted when a poll is updated.
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "001.003"
        cid:
          description: The CID of the channel containing the poll
          title: Channel CID
          type: string
          x-stream-index: 001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.007
        message_id:
          description: The ID of the message containing the poll
          title: Message ID
          type: string
          x-stream-index: "001.002"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: The poll object which was updated
          title: Poll
          x-stream-index: "001.004"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.004
        type:
          default: poll.updated
          description: 'The type of event: "poll.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.002
      required:
      - type
      - created_at
      - custom
      - poll
      title: PollUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollUpdatedFeedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.002.001.007
        feed_visibility:
          type: string
          x-stream-index: 001.002.003
        fid:
          type: string
          x-stream-index: 001.002.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.002.001.004
        type:
          default: feeds.poll.updated
          type: string
          x-stream-index: 001.002.001.002
      required:
      - poll
      - type
      - created_at
      - custom
      - fid
      title: PollUpdatedFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVote:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "004"
        is_answer:
          type: boolean
          x-stream-index: "006"
        option_id:
          type: string
          x-stream-index: "005"
        poll_id:
          type: string
          x-stream-index: "003"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "009"
        user_id:
          type: string
          x-stream-index: "008"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVoteCastedEvent:
      description: Emitted when a vote is cast on a poll.
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: 001.001.003
        cid:
          description: The CID of the channel containing the poll
          title: Channel CID
          type: string
          x-stream-index: 001.001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.001.007
        message_id:
          description: The ID of the message containing the poll
          title: Message ID
          type: string
          x-stream-index: 001.001.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: The poll object
          title: Poll
          x-stream-index: 001.001.004
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: The vote that was cast
          title: Poll Vote
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.001.004
        type:
          default: poll.vote_casted
          description: 'The type of event: "poll.vote_casted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.001.002
      required:
      - type
      - created_at
      - custom
      - poll
      - poll_vote
      title: PollVoteCastedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVoteCastedFeedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.002.001.007
        feed_visibility:
          type: string
          x-stream-index: 001.001.002.003
        fid:
          type: string
          x-stream-index: 001.001.002.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: 001.001.001
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.002.001.004
        type:
          default: feeds.poll.vote_casted
          type: string
          x-stream-index: 001.001.002.001.002
      required:
      - poll
      - type
      - created_at
      - custom
      - fid
      - poll_vote
      title: PollVoteCastedFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVoteChangedEvent:
      description: Emitted when a vote on a poll is changed.
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: 001.001.003
        cid:
          description: The CID of the channel containing the poll
          title: Channel CID
          type: string
          x-stream-index: 001.001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.001.007
        message_id:
          description: The ID of the message containing the poll
          title: Message ID
          type: string
          x-stream-index: 001.001.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: The poll object
          title: Poll
          x-stream-index: 001.001.004
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: The updated vote
          title: Poll Vote
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.001.004
        type:
          default: poll.vote_changed
          description: 'The type of event: "poll.vote_changed" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.001.002
      required:
      - type
      - created_at
      - custom
      - poll
      - poll_vote
      title: PollVoteChangedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVoteChangedFeedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.002.001.007
        feed_visibility:
          type: string
          x-stream-index: 001.001.002.003
        fid:
          type: string
          x-stream-index: 001.001.002.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: 001.001.001
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.002.001.004
        type:
          default: feeds.poll.vote_changed
          type: string
          x-stream-index: 001.001.002.001.002
      required:
      - poll
      - type
      - created_at
      - custom
      - fid
      - poll_vote
      title: PollVoteChangedFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVoteRemovedEvent:
      description: Emitted when a vote is removed from a poll.
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: 001.001.003
        cid:
          description: The CID of the channel containing the poll
          title: Channel CID
          type: string
          x-stream-index: 001.001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.001.007
        message_id:
          description: The ID of the message containing the poll
          title: Message ID
          type: string
          x-stream-index: 001.001.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: The poll object
          title: Poll
          x-stream-index: 001.001.004
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: The vote that was removed
          title: Poll Vote
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.001.004
        type:
          default: poll.vote_removed
          description: 'The type of event: "poll.vote_removed" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.001.002
      required:
      - type
      - created_at
      - custom
      - poll
      - poll_vote
      title: PollVoteRemovedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVoteRemovedFeedEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.002.001.007
        feed_visibility:
          type: string
          x-stream-index: 001.001.002.003
        fid:
          type: string
          x-stream-index: 001.001.002.002
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: 001.001.001
        poll_vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.002.001.004
        type:
          default: feeds.poll.vote_removed
          type: string
          x-stream-index: 001.001.002.001.002
      required:
      - poll
      - type
      - created_at
      - custom
      - fid
      - poll_vote
      title: PollVoteRemovedFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    PollVoteResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: Poll vote
          title: PollVoteResponseData
          x-stream-index: "001"
      required:
      - duration
      type: object
    PollVoteResponseData:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "005"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        id:
          type: string
          x-stream-index: "002"
        is_answer:
          type: boolean
          x-stream-index: "004"
        option_id:
          type: string
          x-stream-index: "003"
        poll_id:
          type: string
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "006"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVotesResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        votes:
          description: Poll votes
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          title: PollVoteResponseList
          type: array
          x-stream-index: "001"
      required:
      - votes
      - duration
      type: object
    PrivacySettings:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceipts'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicators'
          x-stream-index: "001"
      type: object
    PrivacySettingsResponse:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceiptsResponse'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicatorsResponse'
          x-stream-index: "001"
      type: object
    PublishedTrackFlags:
      properties:
        audio:
          type: boolean
          x-stream-index: "002"
        screenshare:
          type: boolean
          x-stream-index: "003"
        screenshare_audio:
          type: boolean
          x-stream-index: "004"
        video:
          type: boolean
          x-stream-index: "001"
      required:
      - video
      - audio
      - screenshare
      - screenshare_audio
      type: object
    PublisherStatsResponse:
      properties:
        by_track:
          items:
            $ref: '#/components/schemas/TrackStatsResponse'
          type: array
          x-stream-index: "003"
        total:
          format: int32
          type: integer
          x-stream-index: "001"
        unique:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - total
      - unique
      type: object
    PushNotificationConfig:
      properties:
        enable_push:
          type: boolean
          x-stream-index: "001"
        push_types:
          items:
            type: string
          type: array
          x-stream-index: "002"
      type: object
    PushPreferenceInput:
      nullable: true
      properties:
        call_level:
          description: Set the level of call push notifications for the user. One
            of all, none, default
          enum:
          - all
          - none
          - default
          type: string
          x-stream-index: "004"
        channel_cid:
          description: Set the push preferences for a specific channel. If empty it
            sets the default for the user
          type: string
          x-stream-index: "002"
        chat_level:
          description: Set the level of chat push notifications for the user. One
            of all, mentions, none, default
          enum:
          - all
          - mentions
          - none
          - default
          type: string
          x-stream-index: "003"
        disabled_until:
          description: Disable push notifications till a certain time
          format: date-time
          type: number
          x-stream-index: "007"
        feeds_level:
          description: Set the level of feeds push notifications for the user. One
            of all, none, default
          enum:
          - all
          - none
          - default
          type: string
          x-stream-index: "005"
        feeds_preferences:
          $ref: '#/components/schemas/FeedsPreferences'
          description: Set granular feeds preferences for reactions, comments, new
            followers, mentions, and custom activity types
          x-stream-index: "006"
        remove_disable:
          description: Remove the disabled until time. (IE stop snoozing notifications)
          type: boolean
          x-stream-index: "008"
        user_id:
          description: The user id for which to set the push preferences. Required
            when using server side auths, defaults to current user with client side
            auth.
          type: string
          x-stream-index: "001"
      type: object
    PushPreferences:
      nullable: true
      properties:
        call_level:
          type: string
          x-stream-index: "002"
        chat_level:
          type: string
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "005"
        feeds_level:
          type: string
          x-stream-index: "003"
        feeds_preferences:
          $ref: '#/components/schemas/FeedsPreferences'
          x-stream-index: "004"
      type: object
    QualityScoreReport:
      properties:
        histogram:
          items:
            $ref: '#/components/schemas/ReportByHistogramBucket'
          type: array
          x-stream-index: "001"
      required:
      - histogram
      type: object
    QualityScoreReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateQualityScoreReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    QueryActivitiesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query. Supports location-based queries
            with 'near' and 'within_bounds' operators.
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Activities Request
      type: object
    QueryActivitiesResponse:
      nullable: true
      properties:
        activities:
          description: List of activities matching the query
          items:
            $ref: '#/components/schemas/ActivityResponse'
          title: Activities
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - activities
      - duration
      title: Query Activities Response
      type: object
    QueryActivityReactionsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003"
      type: object
    QueryActivityReactionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryAggregateCallStatsRequest:
      nullable: true
      properties:
        from:
          type: string
          x-stream-index: "002"
        report_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        to:
          type: string
          x-stream-index: "003"
      type: object
    QueryAggregateCallStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        call_duration_report:
          $ref: '#/components/schemas/CallDurationReportResponse'
          x-stream-index: "002"
        call_participant_count_report:
          $ref: '#/components/schemas/CallParticipantCountReportResponse'
          x-stream-index: "004"
        calls_per_day_report:
          $ref: '#/components/schemas/CallsPerDayReportResponse'
          x-stream-index: "003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        network_metrics_report:
          $ref: '#/components/schemas/NetworkMetricsReportResponse'
          x-stream-index: "008"
        quality_score_report:
          $ref: '#/components/schemas/QualityScoreReportResponse'
          x-stream-index: "005"
        sdk_usage_report:
          $ref: '#/components/schemas/SDKUsageReportResponse'
          x-stream-index: "006"
        user_feedback_report:
          $ref: '#/components/schemas/UserFeedbackReportResponse'
          x-stream-index: "007"
      required:
      - duration
      title: Response
      type: object
    QueryBannedUsersPayload:
      properties:
        exclude_expired_bans:
          description: Whether to exclude expired bans or not
          title: Exclude expired bans
          type: boolean
          x-stream-index: "004"
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          description: Number of records to return
          format: int32
          maximum: 300
          minimum: 0
          title: Limit
          type: integer
          x-stream-index: "003.003"
        offset:
          description: Number of records to offset
          format: int32
          maximum: 10000
          title: Offset
          type: integer
          x-stream-index: "003.004"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          title: Sort
          type: array
          x-stream-index: "002"
      required:
      - filter_conditions
      type: object
    QueryBannedUsersResponse:
      nullable: true
      properties:
        bans:
          description: List of found bans
          items:
            $ref: '#/components/schemas/BanResponse'
          title: BanResponse
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - bans
      - duration
      type: object
    QueryBookmarkFoldersRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Bookmark Folders Request
      type: object
    QueryBookmarkFoldersResponse:
      nullable: true
      properties:
        bookmark_folders:
          description: List of bookmark folders matching the query
          items:
            $ref: '#/components/schemas/BookmarkFolderResponse'
          title: Bookmark Folders
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - bookmark_folders
      - duration
      title: Query Bookmark Folders Response
      type: object
    QueryBookmarksRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Bookmarks Request
      type: object
    QueryBookmarksResponse:
      nullable: true
      properties:
        bookmarks:
          description: List of bookmarks matching the query
          items:
            $ref: '#/components/schemas/BookmarkResponse'
          title: Bookmarks
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - bookmarks
      - duration
      title: Query Bookmarks Response
      type: object
    QueryCallMembersRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        id:
          maxLength: 64
          type: string
          x-stream-index: "001.002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          x-stream-index: "003"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001.001"
      required:
      - type
      - id
      type: object
    QueryCallMembersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - members
      - duration
      title: Response
      type: object
    QueryCallParticipantsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
      type: object
    QueryCallParticipantsResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "004.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        membership:
          $ref: '#/components/schemas/MemberResponse'
          x-stream-index: "001.003"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
        participants:
          description: List of call participants
          items:
            $ref: '#/components/schemas/CallParticipantResponse'
          title: '[]CallParticipantResponse'
          type: array
          x-stream-index: "002"
        total_participants:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - participants
      - total_participants
      - duration
      type: object
    QueryCallSessionParticipantStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        call_id:
          type: string
          x-stream-index: "004"
        call_session_id:
          type: string
          x-stream-index: "005"
        call_type:
          type: string
          x-stream-index: "003"
        counts:
          $ref: '#/components/schemas/CallStatsParticipantCounts'
          x-stream-index: "006"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        next:
          type: string
          x-stream-index: "002.001"
        participants:
          items:
            $ref: '#/components/schemas/CallStatsParticipant'
          type: array
          x-stream-index: "007"
        prev:
          type: string
          x-stream-index: "002.002"
        tmp_data_source:
          type: string
          x-stream-index: "008"
      required:
      - duration
      - call_type
      - call_id
      - call_session_id
      - counts
      - participants
      title: Response
      type: object
    QueryCallStatsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          type: array
          x-stream-index: "002"
      type: object
    QueryCallStatsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        next:
          type: string
          x-stream-index: "003.001"
        prev:
          type: string
          x-stream-index: "003.002"
        reports:
          items:
            $ref: '#/components/schemas/CallStatsReportSummaryResponse'
          type: array
          x-stream-index: "001"
      required:
      - reports
      - duration
      title: Response
      type: object
    QueryCallsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          title: Filters
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        next:
          type: string
          x-stream-index: "006.002"
        prev:
          type: string
          x-stream-index: "006.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          title: Sort
          type: array
          x-stream-index: "004"
        watch:
          title: Watch
          type: boolean
          x-stream-index: "001"
      title: QueryCallsRequest
      type: object
    QueryCallsResponse:
      nullable: true
      properties:
        calls:
          items:
            $ref: '#/components/schemas/CallStateResponseFields'
          title: Calls
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - calls
      - duration
      title: QueryCallsResponse
      type: object
    QueryChannelsRequest:
      nullable: true
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          description: Number of channels to limit
          format: int32
          title: Limit
          type: integer
          x-stream-index: "008"
        member_limit:
          description: Number of members to limit
          format: int32
          maximum: 100
          minimum: 0
          title: Member limit
          type: integer
          x-stream-index: "007"
        message_limit:
          description: Number of messages to limit
          format: int32
          minimum: 0
          title: Message limit
          type: integer
          x-stream-index: "006"
        offset:
          description: Channel pagination offset
          format: int32
          title: Offset
          type: integer
          x-stream-index: "009"
        presence:
          title: Presence
          type: boolean
          x-stream-index: "005"
        sort:
          description: List of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
        state:
          description: Whether to update channel state or not
          title: State
          type: boolean
          x-stream-index: "004"
        watch:
          description: Whether to start watching found channels or not
          title: Watch
          type: boolean
          x-stream-index: "003"
      title: Query Channels Request
      type: object
      x-stream-docs-page-id: query_channels
    QueryChannelsResponse:
      nullable: true
      properties:
        channels:
          description: List of channels
          items:
            $ref: '#/components/schemas/ChannelStateResponseFields'
          title: Channels
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - channels
      - duration
      title: Channels list
      type: object
    QueryCommentReactionsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003"
      type: object
    QueryCommentReactionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryCommentsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: MongoDB-style filter for querying comments
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          description: Maximum number of comments to return
          format: int32
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: first (oldest), last (newest) or top
          enum:
          - first
          - last
          - top
          - best
          - controversial
          title: Sort Order
          type: string
          x-stream-index: "002"
      required:
      - filter
      title: Query Comments Request
      type: object
    QueryCommentsResponse:
      nullable: true
      properties:
        comments:
          description: List of comments matching the query
          items:
            $ref: '#/components/schemas/CommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - comments
      - duration
      title: Query Comments Response
      type: object
    QueryDraftsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          maximum: 3
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      type: object
    QueryDraftsResponse:
      nullable: true
      properties:
        drafts:
          description: Drafts
          items:
            $ref: '#/components/schemas/DraftResponse'
          title: DraftsResponseList
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - drafts
      - duration
      type: object
    QueryFeedMembersRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter parameters for the query
          title: object
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Sort parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: array
          type: array
          x-stream-index: "004"
      type: object
    QueryFeedMembersResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        members:
          description: List of feed members
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          title: array
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - members
      - duration
      type: object
    QueryFeedsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "003"
        watch:
          description: Whether to subscribe to realtime updates
          title: Watch
          type: boolean
          x-stream-index: "002"
      title: Query Feeds Request
      type: object
    QueryFeedsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        feeds:
          description: List of feeds matching the query
          items:
            $ref: '#/components/schemas/FeedResponse'
          title: Feeds
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - feeds
      - duration
      title: Query Feeds Response
      type: object
    QueryFollowsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Follows Request
      type: object
    QueryFollowsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        follows:
          description: List of follow relationships matching the query
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Follows
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - follows
      - duration
      title: Query Follows Response
      type: object
    QueryMembersPayload:
      description: Client request
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
          x-stream-index: "006.003"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          type: array
          x-stream-index: "003"
        offset:
          format: int32
          maximum: 10000
          type: integer
          x-stream-index: "006.004"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          x-stream-index: "005"
        type:
          maxLength: 64
          type: string
          x-stream-index: "001"
      required:
      - type
      - filter_conditions
      title: ClientRequest
      type: object
    QueryMessageFlagsPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 300
          minimum: 0
          type: integer
          x-stream-index: "003.003"
        offset:
          format: int32
          maximum: 10000
          type: integer
          x-stream-index: "003.004"
        show_deleted_messages:
          description: Whether to include deleted messages in the results
          title: ShowDeletedMessages
          type: boolean
          x-stream-index: "002"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003.005"
      type: object
    QueryMessageFlagsResponse:
      description: Query message flags response
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        flags:
          description: The flags that match the query
          items:
            $ref: '#/components/schemas/MessageFlagResponse'
          title: MessageFlagResponseList
          type: array
          x-stream-index: "001"
      required:
      - flags
      - duration
      title: QueryMessageFlagsResponse
      type: object
    QueryModerationConfigsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions for moderation configs
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the results
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
      type: object
    QueryModerationConfigsResponse:
      nullable: true
      properties:
        configs:
          description: List of moderation configurations
          items:
            $ref: '#/components/schemas/ConfigResponse'
          title: Configs
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - configs
      - duration
      type: object
    QueryPollVotesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "004"
      type: object
    QueryPollsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "003"
      type: object
    QueryPollsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        polls:
          description: Polls data returned by the query
          items:
            $ref: '#/components/schemas/PollResponseData'
          title: PollsResponseData
          type: array
          x-stream-index: "001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - polls
      - duration
      type: object
    QueryReactionsRequest:
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        next:
          type: string
          x-stream-index: "006.002"
        prev:
          type: string
          x-stream-index: "006.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 2
          type: array
          x-stream-index: "003"
      type: object
    QueryReactionsResponse:
      description: Basic response information
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        next:
          type: string
          x-stream-index: "003.001"
        prev:
          type: string
          x-stream-index: "003.002"
        reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryRemindersRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      type: object
    QueryRemindersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        reminders:
          description: MessageReminders data returned by the query
          items:
            $ref: '#/components/schemas/ReminderResponseData'
          title: RemindersResponseData
          type: array
          x-stream-index: "001"
      required:
      - reminders
      - duration
      type: object
    QueryReviewQueueRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions for review queue items
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "007.001"
        lock_count:
          description: Number of items to lock (1-25)
          format: int32
          maximum: 25
          minimum: 1
          title: Lock Count
          type: integer
          x-stream-index: "005"
        lock_duration:
          description: Duration for which items should be locked
          title: Lock Duration
          type: integer
          x-stream-index: "004"
        lock_items:
          description: Whether to lock items for review (true), unlock items (false),
            or just fetch (nil)
          title: Lock Items
          type: boolean
          x-stream-index: "003"
        next:
          type: string
          x-stream-index: "007.002"
        prev:
          type: string
          x-stream-index: "007.003"
        sort:
          description: Sorting parameters for the results
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
        stats_only:
          description: Whether to return only statistics
          title: Stats Only
          type: boolean
          x-stream-index: "006"
      type: object
    QueryReviewQueueResponse:
      nullable: true
      properties:
        action_config:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ModerationActionConfig'
            type: array
          description: Configuration for moderation actions
          title: Action Config
          type: object
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "005.001"
        items:
          description: List of review queue items
          items:
            $ref: '#/components/schemas/ReviewQueueItemResponse'
          title: Items
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "004.001"
        prev:
          type: string
          x-stream-index: "004.002"
        stats:
          additionalProperties: {}
          description: Statistics about the review queue
          title: Stats
          type: object
          x-stream-index: "003"
      required:
      - items
      - action_config
      - stats
      - duration
      type: object
    QueryThreadsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions to apply to threads
          title: Filter
          type: object
          x-stream-index: "006"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "008.001"
        member_limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005"
        next:
          type: string
          x-stream-index: "008.002"
        participant_limit:
          description: Limit the number of participants returned per each thread
          format: int32
          maximum: 100
          minimum: 0
          title: Participant limit
          type: integer
          x-stream-index: "004"
        prev:
          type: string
          x-stream-index: "008.003"
        reply_limit:
          description: Limit the number of replies returned per each thread
          format: int32
          maximum: 10
          minimum: 0
          title: Reply limit
          type: integer
          x-stream-index: "003"
        sort:
          description: Sort conditions to apply to threads
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "007"
        watch:
          description: Start watching the channel this thread belongs to
          title: Watch
          type: boolean
          x-stream-index: "001"
      type: object
    QueryThreadsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        threads:
          description: List of enriched thread states
          items:
            $ref: '#/components/schemas/ThreadStateResponse'
          title: Threads
          type: array
          x-stream-index: "001"
      required:
      - threads
      - duration
      type: object
    QueryUsersPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        include_deactivated_users:
          type: boolean
          x-stream-index: "004"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.003"
        offset:
          format: int32
          maximum: 1000
          type: integer
          x-stream-index: "005.004"
        presence:
          type: boolean
          x-stream-index: "003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "002"
      required:
      - filter_conditions
      type: object
    QueryUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        users:
          description: Array of users as result of filters applied.
          items:
            $ref: '#/components/schemas/FullUserResponse'
          title: Users
          type: array
          x-stream-index: "001"
      required:
      - users
      - duration
      type: object
    RTMPBroadcastRequest:
      description: RTMPBroadcastRequest is the payload for starting an RTMP broadcast.
      properties:
        layout:
          $ref: '#/components/schemas/LayoutSettingsRequest'
          description: If provided, will override the call's RTMP settings layout
          title: Layout
          x-stream-index: "005"
        name:
          description: Name identifier for RTMP broadcast, must be unique in call
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
        quality:
          description: If provided, will override the call's RTMP settings quality
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          - portrait-360x640
          - portrait-480x854
          - portrait-720x1280
          - portrait-1080x1920
          - portrait-1440x2560
          title: Quality
          type: string
          x-stream-index: "004"
        stream_key:
          description: If provided, will be appended at the end of stream_url
          title: Stream Key
          type: string
          x-stream-index: "003"
        stream_url:
          description: URL for the RTMP server to send the call to
          maxLength: 255
          title: Stream URL
          type: string
          x-stream-index: "002"
      required:
      - name
      - stream_url
      title: RTMPBroadcastRequest
      type: object
    RTMPIngress:
      description: RTMP input settings
      properties:
        address:
          title: Address
          type: string
          x-stream-index: "001"
      required:
      - address
      title: RTMPIngress
      type: object
    RTMPSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        quality:
          description: Resolution to set for the RTMP stream
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          - portrait-360x640
          - portrait-480x854
          - portrait-720x1280
          - portrait-1080x1920
          - portrait-1440x2560
          title: Quality
          type: string
          x-stream-index: "002"
      title: RTMPSettingsRequest
      type: object
    RTMPSettingsResponse:
      description: RTMPSettingsResponse is the payload for RTMP settings
      properties:
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "001"
        quality:
          title: Quality
          type: string
          x-stream-index: "002"
      required:
      - enabled
      - quality
      - layout
      title: RTMPSettingsResponse
      type: object
    RankingConfig:
      properties:
        defaults:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        functions:
          additionalProperties:
            $ref: '#/components/schemas/DecayFunctionConfig'
          type: object
          x-stream-index: "004"
        score:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "001"
      type: object
    Reaction:
      nullable: true
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        message_id:
          type: string
          x-stream-index: "003"
        score:
          format: int32
          type: integer
          x-stream-index: "007"
        type:
          maxLength: 30
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionDeletedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: reaction.deleted
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "004.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactionGroupResponse:
      description: ReactionGroupResponse contains all information about a reaction
        of the same type.
      nullable: true
      properties:
        count:
          description: Count is the number of reactions of this type.
          format: int32
          title: Count
          type: integer
          x-stream-index: "001"
        first_reaction_at:
          description: FirstReactionAt is the time of the first reaction of this type.
            This is the same also if all reaction of this type are deleted, because
            if someone will react again with the same type, will be preserved the
            sorting.
          format: date-time
          title: FirstReactionAt
          type: number
          x-stream-index: "003"
        last_reaction_at:
          description: LastReactionAt is the time of the last reaction of this type.
          format: date-time
          title: LastReactionAt
          type: number
          x-stream-index: "004"
        sum_scores:
          description: 'SumScores is the sum of all scores of reactions of this type.
            Medium allows you to clap articles more than once and shows the sum of
            all claps from all users. For example, you can send `clap` x5 using `score:
            5`.'
          format: int32
          title: SumScores
          type: integer
          x-stream-index: "002"
      required:
      - count
      - sum_scores
      - first_reaction_at
      - last_reaction_at
      title: ReactionGroupResponse
      type: object
    ReactionNewEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001.001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "001.002"
        type:
          default: reaction.new
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReactionRequest:
      description: Represents user reaction to a message
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        score:
          description: Reaction score. If not specified reaction has score of 1
          format: int32
          title: Score
          type: integer
          x-stream-index: "002"
        type:
          description: The type of reaction (e.g. 'like', 'laugh', 'wow')
          maxLength: 30
          title: Type
          type: string
          x-stream-index: "001"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "004"
      required:
      - type
      title: Reaction
      type: object
      x-stream-docs-page-id: send_reaction
    ReactionResponse:
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        message_id:
          description: Message ID
          title: Message ID
          type: string
          x-stream-index: "001"
        score:
          description: Score of the reaction
          format: int32
          title: Score
          type: integer
          x-stream-index: "005"
        type:
          description: Type of reaction
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User
          title: UserResponse
          x-stream-index: "003"
        user_id:
          description: User ID
          title: User ID
          type: string
          x-stream-index: "002"
      required:
      - message_id
      - user_id
      - user
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "006.002"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: reaction.updated
          type: string
          x-stream-index: "006.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - message
      - reaction
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReadReceipts:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ReadReceiptsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ReadStateResponse:
      properties:
        last_read:
          format: date-time
          type: number
          x-stream-index: "002"
        last_read_message_id:
          type: string
          x-stream-index: "004"
        unread_messages:
          format: int32
          type: integer
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - user
      - last_read
      - unread_messages
      type: object
    RecordSettingsRequest:
      properties:
        audio_only:
          type: boolean
          x-stream-index: "001"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          title: Mode
          type: string
          x-stream-index: "002"
        quality:
          enum:
          - 360p
          - 480p
          - 720p
          - 1080p
          - 1440p
          - portrait-360x640
          - portrait-480x854
          - portrait-720x1280
          - portrait-1080x1920
          - portrait-1440x2560
          type: string
          x-stream-index: "003"
      required:
      - mode
      title: RecordSettingsRequest
      type: object
    RecordSettingsResponse:
      description: RecordSettings is the payload for recording settings
      properties:
        audio_only:
          title: Audio Only
          type: boolean
          x-stream-index: "001"
        mode:
          title: Mode
          type: string
          x-stream-index: "002"
        quality:
          title: Quality
          type: string
          x-stream-index: "003"
      required:
      - audio_only
      - mode
      - quality
      - layout
      title: RecordSettingsResponse
      type: object
    RejectCallRequest:
      nullable: true
      properties:
        reason:
          description: Reason for rejecting the call
          title: Reason
          type: string
          x-stream-index: "003"
      title: RejectCallRequest
      type: object
    RejectCallResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: RejectCallResponse
      type: object
    RejectFeedMemberInviteRequest:
      nullable: true
      title: Reject Feed Member Request
      type: object
    RejectFeedMemberInviteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The feed member after rejecting the invite
          title: Feed Member
          x-stream-index: "001"
      required:
      - member
      - duration
      title: Reject Feed Member Response
      type: object
    RejectFollowRequest:
      nullable: true
      properties:
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed ID
          type: string
          x-stream-index: "001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed ID
          type: string
          x-stream-index: "002"
      required:
      - source
      - target
      title: Reject Follow Request
      type: object
    RejectFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The rejected follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Reject Follow Response
      type: object
    ReminderCreatedEvent:
      description: Emitted when a reminder is created.
      nullable: true
      properties:
        cid:
          description: The CID of the Channel for which the reminder was created
          title: Channel CID
          type: string
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        message_id:
          description: The ID of the message for which the reminder was created
          title: Message ID
          type: string
          x-stream-index: "001.002"
        parent_id:
          description: The ID of the parent message, if the reminder is for a thread
            message
          title: Parent ID
          type: string
          x-stream-index: "001.005"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          description: The reminder object which was created
          title: MessageReminder
          x-stream-index: "001.006"
        type:
          default: reminder.created
          description: 'The type of event: "reminder.created" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user_id:
          description: The ID of the user for whom the reminder was created
          title: User ID
          type: string
          x-stream-index: "001.003"
      required:
      - type
      - created_at
      - custom
      - message_id
      - user_id
      - cid
      title: ReminderCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReminderDeletedEvent:
      description: Emitted when a reminder is deleted.
      nullable: true
      properties:
        cid:
          description: The CID of the Channel for which the reminder was created
          title: Channel CID
          type: string
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        message_id:
          description: The ID of the message for which the reminder was created
          title: Message ID
          type: string
          x-stream-index: "001.002"
        parent_id:
          description: The ID of the parent message, if the reminder is for a thread
            message
          title: Parent ID
          type: string
          x-stream-index: "001.005"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          description: The reminder object which was created
          title: MessageReminder
          x-stream-index: "001.006"
        type:
          default: reminder.deleted
          description: 'The type of event: "reminder.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user_id:
          description: The ID of the user for whom the reminder was created
          title: User ID
          type: string
          x-stream-index: "001.003"
      required:
      - type
      - created_at
      - custom
      - message_id
      - user_id
      - cid
      title: ReminderDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReminderNotificationEvent:
      description: Emitted when a reminder becomes due, triggering a notification
        for the user.
      nullable: true
      properties:
        cid:
          description: The CID of the Channel for which the reminder was created
          title: Channel CID
          type: string
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        message_id:
          description: The ID of the message for which the reminder was created
          title: Message ID
          type: string
          x-stream-index: "001.002"
        parent_id:
          type: string
          x-stream-index: "001.005"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          description: The reminder object which was created
          title: MessageReminder
          x-stream-index: "001.006"
        type:
          default: notification.reminder_due
          description: 'The type of event: "notification.reminder_due" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user_id:
          description: The ID of the user for whom the reminder was created
          title: User ID
          type: string
          x-stream-index: "001.003"
      required:
      - type
      - created_at
      - custom
      - message_id
      - user_id
      - cid
      title: ReminderNotificationEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReminderResponseData:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "005"
        message_id:
          type: string
          x-stream-index: "004"
        remind_at:
          format: date-time
          type: number
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "006"
      required:
      - channel_cid
      - message_id
      - user_id
      - created_at
      - updated_at
      type: object
    ReminderUpdatedEvent:
      description: Emitted when a reminder is updated.
      nullable: true
      properties:
        cid:
          description: The CID of the Channel for which the reminder was created
          title: Channel CID
          type: string
          x-stream-index: "001.004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        message_id:
          description: The ID of the message for which the reminder was created
          title: Message ID
          type: string
          x-stream-index: "001.002"
        parent_id:
          description: The ID of the parent message, if the reminder is for a thread
            message
          title: Parent ID
          type: string
          x-stream-index: "001.005"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          description: The reminder object which was created
          title: MessageReminder
          x-stream-index: "001.006"
        type:
          default: reminder.updated
          description: 'The type of event: "reminder.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user_id:
          description: The ID of the user for whom the reminder was created
          title: User ID
          type: string
          x-stream-index: "001.003"
      required:
      - type
      - created_at
      - custom
      - message_id
      - user_id
      - cid
      title: ReminderUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    RepliesMeta:
      description: Cursor & depth information for a comment's direct replies. Mirrors
        Reddit's 'load more replies' semantics.
      properties:
        depth_truncated:
          description: True if the subtree was cut because the requested depth was
            reached.
          title: Depth Truncated
          type: boolean
          x-stream-index: "004"
        has_more:
          description: True if more siblings exist in the database.
          title: Has More
          type: boolean
          x-stream-index: "001"
        next_cursor:
          description: Opaque cursor to request the next page of siblings.
          title: Next Cursor
          type: string
          x-stream-index: "002"
        remaining:
          description: Number of unread siblings that match current filters.
          format: int32
          title: Remaining
          type: integer
          x-stream-index: "003"
      required:
      - has_more
      - remaining
      - depth_truncated
      title: Replies Meta
      type: object
    ReportByHistogramBucket:
      properties:
        category:
          type: string
          x-stream-index: "001"
        count:
          format: int32
          type: integer
          x-stream-index: "005"
        lower_bound:
          $ref: '#/components/schemas/Bound'
          x-stream-index: "002"
        sum:
          format: float
          type: number
          x-stream-index: "004"
        upper_bound:
          $ref: '#/components/schemas/Bound'
          x-stream-index: "003"
      required:
      - category
      - sum
      - count
      type: object
    ReportResponse:
      properties:
        call:
          $ref: '#/components/schemas/CallReportResponse'
          x-stream-index: "003"
        participants:
          $ref: '#/components/schemas/ParticipantReportResponse'
          x-stream-index: "001"
        user_ratings:
          $ref: '#/components/schemas/UserRatingReportResponse'
          x-stream-index: "002"
      required:
      - participants
      - user_ratings
      - call
      type: object
    RequestPermissionRequest:
      nullable: true
      properties:
        permissions:
          items:
            type: string
          title: Permissions
          type: array
          x-stream-index: "003"
      required:
      - permissions
      title: RequestPermissionRequest
      type: object
    RequestPermissionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: RequestPermissionResponse
      type: object
    Response:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    RestoreActionRequest:
      type: object
    ReviewQueueItemResponse:
      nullable: true
      properties:
        actions:
          description: Moderation actions taken
          items:
            $ref: '#/components/schemas/ActionLogResponse'
          title: Actions
          type: array
          x-stream-index: "024"
        activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "016"
        ai_text_severity:
          description: AI-determined text severity
          title: AI Text Severity
          type: string
          x-stream-index: "014"
        assigned_to:
          $ref: '#/components/schemas/UserResponse'
          description: Moderator assigned to review this item
          title: Assigned To
          x-stream-index: "021"
        bans:
          description: Associated ban records
          items:
            $ref: '#/components/schemas/Ban'
          title: Bans
          type: array
          x-stream-index: "022"
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "018"
        completed_at:
          description: When the review was completed
          format: date-time
          title: Completed At
          type: number
          x-stream-index: "009"
        config_key:
          type: string
          x-stream-index: "028"
        created_at:
          description: When the item was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "002"
        entity_creator:
          $ref: '#/components/schemas/EntityCreatorResponse'
          description: Details about who created the entity
          title: Entity Creator
          x-stream-index: "019"
        entity_creator_id:
          description: ID of who created the entity
          title: Entity Creator ID
          type: string
          x-stream-index: "020"
        entity_id:
          description: ID of the entity being reviewed
          title: Entity ID
          type: string
          x-stream-index: "005"
        entity_type:
          description: Type of entity being reviewed
          title: Entity Type
          type: string
          x-stream-index: "004"
        feeds_v2_activity:
          $ref: '#/components/schemas/EnrichedActivity'
          description: Associated feed activity
          title: Feeds V2 Activity
          x-stream-index: "025"
        feeds_v2_reaction:
          $ref: '#/components/schemas/Reaction'
          description: Associated feed reaction
          title: Feeds V2 Reaction
          x-stream-index: "026"
        flags:
          description: Associated flag records
          items:
            $ref: '#/components/schemas/ModerationFlagResponse'
          title: Flags
          type: array
          x-stream-index: "023"
        flags_count:
          format: int32
          type: integer
          x-stream-index: "029"
        id:
          description: Unique identifier of the review queue item
          title: ID
          type: string
          x-stream-index: "001"
        languages:
          description: Detected languages in the content
          items:
            type: string
          title: Languages
          type: array
          x-stream-index: "012"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Associated message details
          title: Message
          x-stream-index: "015"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content being moderated
          title: Moderation Payload
          x-stream-index: "006"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "017"
        recommended_action:
          description: Suggested moderation action
          title: Recommended Action
          type: string
          x-stream-index: "008"
        reviewed_at:
          description: When the item was reviewed
          format: date-time
          title: Reviewed At
          type: number
          x-stream-index: "010"
        reviewed_by:
          description: ID of the moderator who reviewed the item
          title: Reviewed By
          type: string
          x-stream-index: "011"
        severity:
          description: Severity level of the content
          format: int32
          title: Severity
          type: integer
          x-stream-index: "013"
        status:
          description: Current status of the review
          title: Status
          type: string
          x-stream-index: "007"
        teams:
          description: Teams associated with this item
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "027"
        updated_at:
          description: When the item was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "003"
      required:
      - id
      - created_at
      - updated_at
      - entity_type
      - entity_id
      - status
      - recommended_action
      - reviewed_by
      - languages
      - severity
      - ai_text_severity
      - bans
      - flags
      - actions
      - flags_count
      type: object
    RingSettingsRequest:
      properties:
        auto_cancel_timeout_ms:
          description: When none of the callees accept a ring call in this time a
            rejection will be sent by the caller with reason 'timeout' by the SDKs
          format: int32
          maximum: 180000
          minimum: 5000
          title: AutoCancelTimeoutMs
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          description: When a callee is online but doesn't answer a ring call in this
            time a rejection will be sent with reason 'timeout' by the SDKs
          format: int32
          maximum: 180000
          minimum: 5000
          title: IncomingCallTimeoutMs
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          description: When a callee doesn't accept or reject a ring call in this
            time a missed call event will be sent
          format: int32
          maximum: 180000
          minimum: 5000
          title: MissedCallTimeoutMs
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      title: RingSettingsRequest
      type: object
    RingSettingsResponse:
      properties:
        auto_cancel_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      - missed_call_timeout_ms
      type: object
    RuleBuilderAction:
      properties:
        ban_options:
          $ref: '#/components/schemas/BanOptions'
          x-stream-index: "002"
        flag_user_options:
          $ref: '#/components/schemas/FlagUserOptions'
          x-stream-index: "003"
        type:
          enum:
          - ban_user
          - flag_user
          - flag_content
          - block_content
          - shadow_content
          - bounce_flag_content
          - bounce_content
          - bounce_remove_content
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    RuleBuilderCondition:
      properties:
        confidence:
          format: float
          type: number
          x-stream-index: "002"
        content_count_rule_params:
          $ref: '#/components/schemas/ContentCountRuleParameters'
          x-stream-index: "007"
        image_content_params:
          $ref: '#/components/schemas/ImageContentParameters'
          x-stream-index: "009"
        image_rule_params:
          $ref: '#/components/schemas/ImageRuleParameters'
          x-stream-index: "004"
        text_content_params:
          $ref: '#/components/schemas/TextContentParameters'
          x-stream-index: "008"
        text_rule_params:
          $ref: '#/components/schemas/TextRuleParameters'
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
        user_created_within_params:
          $ref: '#/components/schemas/UserCreatedWithinParameters'
          x-stream-index: "011"
        user_custom_property_params:
          $ref: '#/components/schemas/UserCustomPropertyParameters'
          x-stream-index: "012"
        user_rule_params:
          $ref: '#/components/schemas/UserRuleParameters'
          x-stream-index: "006"
        video_content_params:
          $ref: '#/components/schemas/VideoContentParameters'
          x-stream-index: "010"
        video_rule_params:
          $ref: '#/components/schemas/VideoRuleParameters'
          x-stream-index: "005"
      type: object
    RuleBuilderConditionGroup:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/RuleBuilderCondition'
          type: array
          x-stream-index: "002"
        logic:
          type: string
          x-stream-index: "001"
      type: object
    RuleBuilderConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        rules:
          items:
            $ref: '#/components/schemas/RuleBuilderRule'
          type: array
          x-stream-index: "002"
      type: object
    RuleBuilderRule:
      properties:
        action:
          $ref: '#/components/schemas/RuleBuilderAction'
          x-stream-index: "006"
        conditions:
          items:
            $ref: '#/components/schemas/RuleBuilderCondition'
          type: array
          x-stream-index: "003"
        cooldown_period:
          type: string
          x-stream-index: "007"
        groups:
          items:
            $ref: '#/components/schemas/RuleBuilderConditionGroup'
          type: array
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        logic:
          type: string
          x-stream-index: "004"
        rule_type:
          type: string
          x-stream-index: "002"
      required:
      - rule_type
      - action
      type: object
    SDKUsageReport:
      properties:
        per_sdk_usage:
          additionalProperties:
            $ref: '#/components/schemas/PerSDKUsageReport'
          type: object
          x-stream-index: "001"
      required:
      - per_sdk_usage
      type: object
    SDKUsageReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateSDKUsageReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    SFUResponse:
      properties:
        edge_name:
          type: string
          x-stream-index: "001"
        url:
          type: string
          x-stream-index: "002"
        ws_endpoint:
          type: string
          x-stream-index: "003"
      required:
      - edge_name
      - url
      - ws_endpoint
      type: object
    SRTIngress:
      properties:
        address:
          type: string
          x-stream-index: "001"
      required:
      - address
      type: object
    ScreensharingSettingsRequest:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      type: object
    ScreensharingSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      type: object
    SearchPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          description: Channel filter conditions
          maximum: 100
          minimum: 1
          title: Channel filter
          type: object
          x-stream-docs-page-id: query_channels
          x-stream-index: "002"
        limit:
          description: Number of messages to return
          format: int32
          title: Limit
          type: integer
          x-stream-index: "005"
        message_filter_conditions:
          additionalProperties: {}
          description: Message filter conditions
          title: Message filter
          type: object
          x-stream-index: "003"
        message_options:
          $ref: '#/components/schemas/MessageOptions'
          x-stream-index: "004"
        next:
          description: Pagination parameter. Cannot be used with non-zero offset.
          title: Next
          type: string
          x-stream-index: "008"
        offset:
          description: Pagination offset. Cannot be used with sort or next.
          format: int32
          title: Offset
          type: integer
          x-stream-index: "006"
        query:
          description: Search phrase
          title: Query
          type: string
          x-stream-index: "001"
        sort:
          description: Sort parameters. Cannot be used with non-zero offset
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "007"
      required:
      - filter_conditions
      type: object
    SearchResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "005.001"
        next:
          description: Value to pass to the next search query in order to paginate
          title: Next
          type: string
          x-stream-index: "003"
        previous:
          description: Value that points to the previous page. Pass as the next value
            in a search query to paginate backwards
          title: Previous
          type: string
          x-stream-index: "004"
        results:
          description: Search results
          items:
            $ref: '#/components/schemas/SearchResult'
          title: Results
          type: array
          x-stream-index: "001"
        results_warning:
          $ref: '#/components/schemas/SearchWarning'
          description: Warning about the search results
          title: Results Warning
          x-stream-index: "002"
      required:
      - results
      - duration
      type: object
    SearchResult:
      properties:
        message:
          $ref: '#/components/schemas/SearchResultMessage'
          description: Found message
          title: Message
          x-stream-index: "001"
      type: object
    SearchResultMessage:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "001.009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel object
          title: Channel
          x-stream-index: "002"
        cid:
          type: string
          x-stream-index: "001.023"
        command:
          type: string
          x-stream-index: "001.004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.024"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.027"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.026"
        deleted_for_me:
          type: boolean
          x-stream-index: "001.045"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "001.019"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "001.042"
        html:
          type: string
          x-stream-index: "001.005"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.031"
        id:
          type: string
          x-stream-index: "001.001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "001.029"
        latest_reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001.010"
        member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          x-stream-index: "001.008"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.030"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "001.037"
        mml:
          type: string
          x-stream-index: "001.003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "001.040"
        own_reactions:
          items:
            $ref: '#/components/schemas/ReactionResponse'
          type: array
          x-stream-index: "001.011"
        parent_id:
          type: string
          x-stream-index: "001.016"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "001.036"
        pinned:
          type: boolean
          x-stream-index: "001.033"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "001.034"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.035"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "001.039"
        poll_id:
          type: string
          x-stream-index: "001.038"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001.021"
        quoted_message_id:
          type: string
          x-stream-index: "001.020"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.012"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.015"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.013"
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          x-stream-index: "001.043"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "001.018"
        restricted_visibility:
          items:
            type: string
          type: array
          x-stream-index: "001.041"
        shadowed:
          type: boolean
          x-stream-index: "001.028"
        shared_location:
          $ref: '#/components/schemas/SharedLocationResponseData'
          x-stream-index: "001.044"
        show_in_channel:
          type: boolean
          x-stream-index: "001.017"
        silent:
          type: boolean
          x-stream-index: "001.032"
        text:
          type: string
          x-stream-index: "001.002"
        thread_participants:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.022"
        type:
          type: string
          x-stream-index: "001.006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.025"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      - restricted_visibility
      type: object
    SearchWarning:
      properties:
        channel_search_cids:
          description: Channel CIDs for the searched channels
          items:
            type: string
          title: Channel Search CIDs
          type: array
          x-stream-index: "004"
        channel_search_count:
          description: Number of channels searched
          format: int32
          title: Channel Search Count
          type: integer
          x-stream-index: "003"
        warning_code:
          description: Code corresponding to the warning
          format: int32
          title: Warning Code
          type: integer
          x-stream-index: "002"
        warning_description:
          description: Description of the warning
          title: Warning Description
          type: string
          x-stream-index: "001"
      required:
      - warning_description
      - warning_code
      type: object
    SendCallEventRequest:
      description: Send a call event to the other user
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          title: Custom
          type: object
          x-stream-index: "004"
      title: SendCallEventRequest
      type: object
    SendCallEventResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: SendCallEventResponse
      type: object
    SendEventRequest:
      nullable: true
      properties:
        event:
          $ref: '#/components/schemas/EventRequest'
          x-stream-index: "001"
      required:
      - event
      type: object
    SendMessageRequest:
      nullable: true
      properties:
        keep_channel_hidden:
          type: boolean
          x-stream-index: "008"
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "001"
        skip_enrich_url:
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "002"
      required:
      - message
      type: object
    SendMessageResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Message response
          title: Message
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          description: Pending message metadata
          title: Pending message metadata
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      type: object
    SendReactionRequest:
      nullable: true
      properties:
        enforce_unique:
          description: Whether to replace all existing user reactions
          title: Enforce unique
          type: boolean
          x-stream-index: "003"
        reaction:
          $ref: '#/components/schemas/ReactionRequest'
          x-stream-index: "002"
        skip_push:
          description: Skips any mobile push notifications
          title: Skip push
          type: boolean
          x-stream-index: "004"
      required:
      - reaction
      type: object
    SendReactionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        reaction:
          $ref: '#/components/schemas/ReactionResponse'
          x-stream-index: "002"
      required:
      - message
      - reaction
      - duration
      title: Response
      type: object
    SessionSettingsRequest:
      properties:
        inactivity_timeout_seconds:
          format: int32
          maximum: 900
          minimum: 5
          type: integer
          x-stream-index: "001"
      required:
      - inactivity_timeout_seconds
      type: object
    SessionSettingsResponse:
      properties:
        inactivity_timeout_seconds:
          format: int32
          maximum: 900
          minimum: 5
          type: integer
          x-stream-index: "001"
      required:
      - inactivity_timeout_seconds
      type: object
    ShadowBlockActionRequest:
      type: object
    SharedLocation:
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "013"
        channel_cid:
          type: string
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        created_by_device_id:
          type: string
          x-stream-index: "008"
        end_at:
          format: date-time
          type: number
          x-stream-index: "009"
        latitude:
          format: float
          maximum: 90
          minimum: 1.8446744073709552e+19
          type: number
          x-stream-index: "006"
        longitude:
          format: float
          maximum: 180
          minimum: 1.8446744073709552e+19
          type: number
          x-stream-index: "007"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "012"
        message_id:
          type: string
          x-stream-index: "004"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
        user_id:
          type: string
          x-stream-index: "005"
      required:
      - channel_cid
      - message_id
      - user_id
      - created_by_device_id
      - created_at
      - updated_at
      type: object
    SharedLocationResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.011"
        channel_cid:
          description: Channel CID
          title: string
          type: string
          x-stream-index: "001.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.008"
        created_by_device_id:
          description: Device ID that created the live location
          title: string
          type: string
          x-stream-index: "001.006"
        duration:
          type: string
          x-stream-index: "002.001"
        end_at:
          description: Time when the live location expires
          format: date-time
          title: string
          type: number
          x-stream-index: "001.007"
        latitude:
          description: Latitude coordinate
          format: float
          title: number
          type: number
          x-stream-index: "001.004"
        longitude:
          description: Longitude coordinate
          format: float
          title: number
          type: number
          x-stream-index: "001.005"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001.010"
        message_id:
          description: Message ID
          title: string
          type: string
          x-stream-index: "001.002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.009"
        user_id:
          description: User ID
          title: string
          type: string
          x-stream-index: "001.003"
      required:
      - channel_cid
      - message_id
      - user_id
      - latitude
      - longitude
      - created_by_device_id
      - created_at
      - updated_at
      - duration
      type: object
    SharedLocationResponseData:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "011"
        channel_cid:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        created_by_device_id:
          type: string
          x-stream-index: "006"
        end_at:
          format: date-time
          type: number
          x-stream-index: "007"
        latitude:
          format: float
          type: number
          x-stream-index: "004"
        longitude:
          format: float
          type: number
          x-stream-index: "005"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "010"
        message_id:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - channel_cid
      - message_id
      - user_id
      - latitude
      - longitude
      - created_by_device_id
      - created_at
      - updated_at
      type: object
    SharedLocationsResponse:
      nullable: true
      properties:
        active_live_locations:
          items:
            $ref: '#/components/schemas/SharedLocationResponseData'
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - active_live_locations
      - duration
      type: object
    ShowChannelRequest:
      nullable: true
      type: object
    ShowChannelResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    SingleFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The created follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Follow Response
      type: object
    SortParam:
      nullable: true
      properties:
        direction:
          format: int32
          type: integer
          x-stream-index: "002"
        field:
          type: string
          x-stream-index: "001"
      required:
      - field
      - direction
      type: object
    SortParamRequest:
      nullable: true
      properties:
        direction:
          description: Direction of sorting, 1 for Ascending, -1 for Descending, default
            is 1
          format: int32
          title: Direction
          type: integer
          x-stream-index: "002"
        field:
          description: Name of field to sort by
          title: Field
          type: string
          x-stream-index: "001"
      type: object
    SpeechSegmentConfig:
      properties:
        max_speech_caption_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        silence_duration_ms:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    StartClosedCaptionsRequest:
      nullable: true
      properties:
        enable_transcription:
          description: Enable transcriptions along with closed captions
          title: Enable Transcription
          type: boolean
          x-stream-index: "002"
        external_storage:
          description: Which external storage to use for transcriptions (only applicable
            if enable_transcription is true)
          title: External Storage
          type: string
          x-stream-index: "003"
        language:
          description: The spoken language in the call, if not provided the language
            defined in the transcription settings will be used
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          - bg
          - et
          - sl
          - sk
          title: Language
          type: string
          x-stream-index: "004"
        speech_segment_config:
          $ref: '#/components/schemas/SpeechSegmentConfig'
          x-stream-index: "005"
      type: object
    StartClosedCaptionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    StartFrameRecordingRequest:
      nullable: true
      properties:
        recording_external_storage:
          type: string
          x-stream-index: "002"
      title: StartFrameRecordingRequest
      type: object
    StartFrameRecordingResponse:
      description: StartFrameRecordingResponse is the response payload for the start
        frame recording endpoint.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartFrameRecordingResponse
      type: object
    StartHLSBroadcastingRequest:
      description: StartHLSBroadcastingRequest is the payload for starting an HLS
        broadcasting.
      nullable: true
      title: StartHLSBroadcastingRequest
      type: object
    StartHLSBroadcastingResponse:
      description: StartHLSBroadcastingResponse is the payload for starting an HLS
        broadcasting.
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
        playlist_url:
          description: the URL of the HLS playlist
          title: PlaylistURL
          type: string
          x-stream-index: "002"
      required:
      - duration
      - playlist_url
      title: StartHLSBroadcastingResponse
      type: object
    StartRTMPBroadcastsRequest:
      description: StartRTMPBroadcastsRequest is the payload for starting RTMP broadcasts.
      nullable: true
      properties:
        broadcasts:
          description: List of broadcasts to start
          items:
            $ref: '#/components/schemas/RTMPBroadcastRequest'
          maximum: 1
          minimum: 1
          title: Broadcasts
          type: array
          x-stream-index: "002"
      required:
      - broadcasts
      title: StartRTMPBroadcastsRequest
      type: object
    StartRTMPBroadcastsResponse:
      description: StartRTMPBroadcastsResponse is the payload for starting an RTMP
        broadcast.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartRTMPBroadcastsResponse
      type: object
    StartRecordingRequest:
      nullable: true
      properties:
        recording_external_storage:
          type: string
          x-stream-index: "002"
      title: StartRecordingRequest
      type: object
    StartRecordingResponse:
      description: StartRecordingResponse is the response payload for the start recording
        endpoint.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartRecordingResponse
      type: object
    StartTranscriptionRequest:
      nullable: true
      properties:
        enable_closed_captions:
          description: Enable closed captions along with transcriptions
          title: Enable Closed Captions
          type: boolean
          x-stream-index: "003"
        language:
          description: The spoken language in the call, if not provided the language
            defined in the transcription settings will be used
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          - bg
          - et
          - sl
          - sk
          title: Language
          type: string
          x-stream-index: "004"
        transcription_external_storage:
          description: Store transcriptions in this external storage
          title: External Storage
          type: string
          x-stream-index: "002"
      type: object
    StartTranscriptionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StartTranscriptionResponse
      type: object
    StatsOptions:
      properties:
        enable_rtc_stats:
          type: boolean
          x-stream-index: "002"
        reporting_interval_ms:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - reporting_interval_ms
      - enable_rtc_stats
      type: object
    StopAllRTMPBroadcastsRequest:
      nullable: true
      title: StopAllRTMPBroadcastsRequest
      type: object
    StopAllRTMPBroadcastsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: StopAllRTMPBroadcastsResponse
      type: object
    StopClosedCaptionsRequest:
      nullable: true
      properties:
        stop_transcription:
          type: boolean
          x-stream-index: "003"
      type: object
    StopClosedCaptionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopFrameRecordingRequest:
      nullable: true
      type: object
    StopFrameRecordingResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopHLSBroadcastingRequest:
      nullable: true
      type: object
    StopHLSBroadcastingResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopLiveRequest:
      nullable: true
      properties:
        continue_closed_caption:
          type: boolean
          x-stream-index: "006"
        continue_hls:
          type: boolean
          x-stream-index: "003"
        continue_recording:
          type: boolean
          x-stream-index: "004"
        continue_rtmp_broadcasts:
          type: boolean
          x-stream-index: "007"
        continue_transcription:
          type: boolean
          x-stream-index: "005"
      title: StopLiveRequest
      type: object
    StopLiveResponse:
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          description: The call that was stopped
          title: Call
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - call
      - duration
      title: StopLiveResponse
      type: object
    StopRTMPBroadcastsRequest:
      description: Request for stopping RTMP broadcasts
      nullable: true
      title: StopRTMPBroadcastsRequest
      type: object
    StopRTMPBroadcastsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopRecordingRequest:
      nullable: true
      type: object
    StopRecordingResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StopTranscriptionRequest:
      nullable: true
      properties:
        stop_closed_captions:
          type: boolean
          x-stream-index: "003"
      type: object
    StopTranscriptionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    StoriesConfig:
      properties:
        expiration_behaviour:
          enum:
          - hide_for_everyone
          - visible_for_author
          type: string
          x-stream-index: "001"
        skip_watched:
          type: boolean
          x-stream-index: "002"
      type: object
    SubmitActionRequest:
      nullable: true
      properties:
        action_type:
          description: Type of moderation action to perform (mark_reviewed, delete_message,
            etc.)
          enum:
          - mark_reviewed
          - delete_message
          - delete_activity
          - delete_reaction
          - ban
          - custom
          - unban
          - restore
          - delete_user
          - unblock
          - shadow_block
          - unmask
          - kick_user
          - end_call
          title: Action Type
          type: string
          x-stream-index: "002"
        ban:
          $ref: '#/components/schemas/BanActionRequest'
          description: Configuration for ban action
          title: Ban
          x-stream-index: "008"
        custom:
          $ref: '#/components/schemas/CustomActionRequest'
          description: Configuration for custom action
          title: Custom
          x-stream-index: "009"
        delete_activity:
          $ref: '#/components/schemas/DeleteActivityRequest'
          description: Configuration for activity deletion action
          title: Delete Activity
          x-stream-index: "004"
        delete_message:
          $ref: '#/components/schemas/DeleteMessageRequest'
          description: Configuration for message deletion action
          title: Delete Message
          x-stream-index: "003"
        delete_reaction:
          $ref: '#/components/schemas/DeleteReactionRequest'
          description: Configuration for reaction deletion action
          title: Delete Reaction
          x-stream-index: "005"
        delete_user:
          $ref: '#/components/schemas/DeleteUserRequest'
          description: Configuration for user deletion action
          title: Delete User
          x-stream-index: "006"
        item_id:
          description: UUID of the review queue item to act on
          title: Item ID
          type: string
          x-stream-index: "001"
        mark_reviewed:
          $ref: '#/components/schemas/MarkReviewedRequest'
          description: Configuration for marking item as reviewed
          title: Mark Reviewed
          x-stream-index: "007"
        unban:
          $ref: '#/components/schemas/UnbanActionRequest'
          description: Configuration for unban action
          title: Unban
          x-stream-index: "010"
      required:
      - item_id
      - action_type
      type: object
    SubmitActionResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Updated review queue item after action was performed
          title: Item
          x-stream-index: "001"
      required:
      - duration
      type: object
    SubscriberStatsResponse:
      properties:
        total:
          format: int32
          type: integer
          x-stream-index: "001"
        total_subscribed_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "003"
        unique:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - total
      - unique
      - total_subscribed_duration_seconds
      type: object
    SyncRequest:
      description: Sync request
      nullable: true
      properties:
        channel_cids:
          description: List of channel CIDs to sync
          items:
            type: string
          maximum: 255
          minimum: 1
          title: Channel CIDs
          type: array
          x-stream-index: "001"
        last_sync_at:
          description: Date from which synchronization should happen
          format: date-time
          title: Last sync at
          type: number
          x-stream-index: "002"
      required:
      - channel_cids
      - last_sync_at
      title: SyncRequest
      type: object
    SyncResponse:
      description: Sync response
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        events:
          description: List of events
          items:
            $ref: '#/components/schemas/WSEvent'
          title: Events
          type: array
          x-stream-index: "001"
        inaccessible_cids:
          description: List of CIDs that user can't access
          items:
            type: string
          title: Inaccessible CIDs
          type: array
          x-stream-index: "002"
      required:
      - events
      - duration
      title: SyncResponse
      type: object
    TargetResolution:
      properties:
        bitrate:
          format: int32
          maximum: 6000000
          type: integer
          x-stream-index: "003"
        height:
          format: int32
          maximum: 3840
          minimum: 240
          type: integer
          x-stream-index: "002"
        width:
          format: int32
          maximum: 3840
          minimum: 240
          type: integer
          x-stream-index: "001"
      required:
      - width
      - height
      type: object
    TextContentParameters:
      properties:
        blocklist_match:
          items:
            type: string
          type: array
          x-stream-index: "005"
        contains_url:
          type: boolean
          x-stream-index: "003"
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "001"
        llm_harm_labels:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
        severity:
          type: string
          x-stream-index: "004"
      type: object
    TextRuleParameters:
      properties:
        blocklist_match:
          items:
            type: string
          type: array
          x-stream-index: "007"
        contains_url:
          type: boolean
          x-stream-index: "005"
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        llm_harm_labels:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
        severity:
          type: string
          x-stream-index: "006"
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    ThreadParticipant:
      description: Represents a user that is participating in a thread.
      nullable: true
      properties:
        app_pk:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "001"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        last_read_at:
          format: date-time
          type: number
          x-stream-index: "009"
        last_thread_message_at:
          format: date-time
          type: number
          x-stream-index: "003"
        left_thread_at:
          description: Left Thread At is the time when the user left the thread
          format: date-time
          title: Left Thread At
          type: number
          x-stream-index: "008"
        thread_id:
          description: Thead ID is unique string identifier of the thread
          title: ID
          type: string
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User is the user object
          title: User
          x-stream-index: "006"
        user_id:
          description: User ID is unique string identifier of the user
          title: User ID
          type: string
          x-stream-index: "005"
      required:
      - app_pk
      - channel_cid
      - created_at
      - last_read_at
      - custom
      title: ThreadParticipant
      type: object
    ThreadResponse:
      properties:
        active_participant_count:
          description: Active Participant Count
          format: int32
          title: Active Participant Count
          type: integer
          x-stream-index: "009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel
          title: ChannelResponse
          x-stream-index: "002"
        channel_cid:
          description: Channel CID
          title: Channel CID
          type: string
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Created By User
          title: User
          x-stream-index: "006"
        created_by_user_id:
          description: Created By User ID
          title: Created By User ID
          type: string
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "016"
        deleted_at:
          description: Deleted At
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "014"
        last_message_at:
          description: Last Message At
          format: date-time
          title: Last Message At
          type: number
          x-stream-index: "011"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Parent Message
          title: Message
          x-stream-index: "004"
        parent_message_id:
          description: Parent Message ID
          title: Parent Message ID
          type: string
          x-stream-index: "003"
        participant_count:
          description: Participant Count
          format: int32
          title: Participant Count
          type: integer
          x-stream-index: "008"
        reply_count:
          description: Reply Count
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "007"
        thread_participants:
          description: Thread Participants
          items:
            $ref: '#/components/schemas/ThreadParticipant'
          title: ThreadParticipants
          type: array
          x-stream-index: "010"
        title:
          description: Title
          title: Title
          type: string
          x-stream-index: "015"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "013"
      required:
      - channel_cid
      - parent_message_id
      - created_by_user_id
      - participant_count
      - active_participant_count
      - created_at
      - updated_at
      - title
      - custom
      type: object
    ThreadStateResponse:
      nullable: true
      properties:
        active_participant_count:
          description: Active Participant Count
          format: int32
          title: Active Participant Count
          type: integer
          x-stream-index: "001.009"
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel
          title: ChannelResponse
          x-stream-index: "001.002"
        channel_cid:
          description: Channel CID
          title: Channel CID
          type: string
          x-stream-index: "001.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.012"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Created By User
          title: User
          x-stream-index: "001.006"
        created_by_user_id:
          description: Created By User ID
          title: Created By User ID
          type: string
          x-stream-index: "001.005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.016"
        deleted_at:
          description: Deleted At
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "001.014"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "004"
        last_message_at:
          description: Last Message At
          format: date-time
          title: Last Message At
          type: number
          x-stream-index: "001.011"
        latest_replies:
          items:
            $ref: '#/components/schemas/MessageResponse'
          type: array
          x-stream-index: "002"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Parent Message
          title: Message
          x-stream-index: "001.004"
        parent_message_id:
          description: Parent Message ID
          title: Parent Message ID
          type: string
          x-stream-index: "001.003"
        participant_count:
          description: Participant Count
          format: int32
          title: Participant Count
          type: integer
          x-stream-index: "001.008"
        read:
          items:
            $ref: '#/components/schemas/ReadStateResponse'
          type: array
          x-stream-index: "003"
        reply_count:
          description: Reply Count
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "001.007"
        thread_participants:
          description: Thread Participants
          items:
            $ref: '#/components/schemas/ThreadParticipant'
          title: ThreadParticipants
          type: array
          x-stream-index: "001.010"
        title:
          description: Title
          title: Title
          type: string
          x-stream-index: "001.015"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.013"
      required:
      - channel_cid
      - parent_message_id
      - created_by_user_id
      - participant_count
      - active_participant_count
      - created_at
      - updated_at
      - title
      - custom
      - latest_replies
      type: object
    ThreadUpdatedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "001.002"
        channel_type:
          type: string
          x-stream-index: "001.003"
        cid:
          type: string
          x-stream-index: "001.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          x-stream-index: "003.001"
        type:
          default: thread.updated
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: ThreadUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ThreadedCommentResponse:
      description: A comment with an optional, depth‑limited slice of nested replies.
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "001.011"
        confidence_score:
          format: float
          type: number
          x-stream-index: "001.022"
        controversy_score:
          format: float
          type: number
          x-stream-index: "001.023"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.014"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.006"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        downvote_count:
          format: int32
          type: integer
          x-stream-index: "001.020"
        id:
          type: string
          x-stream-index: "001.001"
        latest_reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001.009"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.012"
        meta:
          $ref: '#/components/schemas/RepliesMeta'
          description: Pagination & depth info for this node's direct replies.
          title: Replies Meta
          x-stream-index: "002"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "001.017"
        object_id:
          type: string
          x-stream-index: "001.002"
        object_type:
          type: string
          x-stream-index: "001.003"
        own_reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001.024"
        parent_id:
          type: string
          x-stream-index: "001.007"
        reaction_count:
          format: int32
          type: integer
          x-stream-index: "001.008"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.010"
        replies:
          description: Slice of nested comments (may be empty).
          items:
            $ref: '#/components/schemas/ThreadedCommentResponse'
          title: Replies
          type: array
          x-stream-index: "003"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "001.018"
        score:
          format: int32
          type: integer
          x-stream-index: "001.021"
        status:
          type: string
          x-stream-index: "001.013"
        text:
          type: string
          x-stream-index: "001.005"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.015"
        upvote_count:
          format: int32
          type: integer
          x-stream-index: "001.019"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.004"
      required:
      - id
      - object_id
      - object_type
      - user
      - reaction_count
      - mentioned_users
      - status
      - created_at
      - updated_at
      - reply_count
      - upvote_count
      - downvote_count
      - score
      - confidence_score
      - own_reactions
      title: Threaded Comment
      type: object
    Thresholds:
      description: Sets thresholds for AI moderation
      properties:
        explicit:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for explicit messages
          title: LabelThresholds
          x-stream-index: "001"
        spam:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for spam
          title: LabelThresholds
          x-stream-index: "002"
        toxic:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for toxic messages
          title: LabelThresholds
          x-stream-index: "003"
      title: Auto moderation thresholds
      type: object
    ThumbnailResponse:
      properties:
        image_url:
          type: string
          x-stream-index: "001"
      required:
      - image_url
      type: object
    ThumbnailsSettingsRequest:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    ThumbnailsSettingsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    Time:
      type: object
    TrackStatsResponse:
      nullable: true
      properties:
        duration_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
        track_type:
          type: string
          x-stream-index: "001"
      required:
      - track_type
      - duration_seconds
      type: object
    TranscriptionSettingsRequest:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "002"
        language:
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          - bg
          - et
          - sl
          - sk
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        speech_segment_config:
          $ref: '#/components/schemas/SpeechSegmentConfig'
          x-stream-index: "006"
        translation:
          $ref: '#/components/schemas/TranslationSettings'
          x-stream-index: "005"
      type: object
    TranscriptionSettingsResponse:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "002"
        language:
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          - bg
          - et
          - sl
          - sk
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        speech_segment_config:
          $ref: '#/components/schemas/SpeechSegmentConfig'
          x-stream-index: "006"
        translation:
          $ref: '#/components/schemas/TranslationSettings'
          x-stream-index: "005"
      required:
      - mode
      - closed_caption_mode
      - languages
      - language
      type: object
    TranslateMessageRequest:
      nullable: true
      properties:
        language:
          description: Language to translate message to
          enum:
          - af
          - sq
          - am
          - ar
          - az
          - bn
          - bs
          - bg
          - zh
          - zh-TW
          - hr
          - cs
          - da
          - fa-AF
          - nl
          - en
          - et
          - fi
          - fr
          - fr-CA
          - ka
          - de
          - el
          - ha
          - he
          - hi
          - hu
          - id
          - it
          - ja
          - ko
          - lv
          - ms
          - "no"
          - fa
          - ps
          - pl
          - pt
          - ro
          - ru
          - sr
          - sk
          - sl
          - so
          - es
          - es-MX
          - sw
          - sv
          - tl
          - ta
          - th
          - tr
          - uk
          - ur
          - vi
          - lt
          - ht
          title: Language
          type: string
          x-stream-index: "001"
      required:
      - language
      type: object
    TranslationSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        languages:
          items:
            type: string
          type: array
          x-stream-index: "002"
      type: object
    TruncateChannelRequest:
      nullable: true
      properties:
        hard_delete:
          description: Permanently delete channel data (messages, reactions, etc.)
          title: Hard delete
          type: boolean
          x-stream-index: "002"
        member_ids:
          description: List of member IDs to hide message history for. If empty, truncates
            the channel for all members
          items:
            type: string
          maximum: 100
          title: Member IDs
          type: array
          x-stream-index: "007"
        message:
          $ref: '#/components/schemas/MessageRequest'
          x-stream-index: "004"
        skip_push:
          description: When `message` is set disables all push notifications for it
          title: Skip push
          type: boolean
          x-stream-index: "005"
        truncated_at:
          description: Truncate channel data up to `truncated_at`. The system message
            (if provided) creation time is always greater than `truncated_at`
          format: date-time
          title: Truncated at
          type: number
          x-stream-index: "006"
      type: object
    TruncateChannelResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Truncated channel object
          title: Channel
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Truncated message object
          title: Message
          x-stream-index: "003"
      required:
      - duration
      type: object
    TypingIndicators:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    TypingIndicatorsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    TypingStartEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "003.002"
        channel_type:
          type: string
          x-stream-index: "003.003"
        cid:
          type: string
          x-stream-index: "003.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        parent_id:
          type: string
          x-stream-index: "001"
        type:
          default: typing.start
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: TypingStartEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    TypingStopEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        parent_id:
          type: string
          x-stream-index: "001"
        type:
          default: typing.stop
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: TypingStopEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UnbanActionRequest:
      type: object
    UnblockActionRequest:
      type: object
    UnblockUserRequest:
      description: UnblockUserRequest is the payload for unblocking a user.
      nullable: true
      properties:
        user_id:
          description: the user to unblock
          title: UserID
          type: string
          x-stream-index: "003"
      required:
      - user_id
      title: UnblockUserRequest
      type: object
    UnblockUserResponse:
      description: UnblockUserResponse is the payload for unblocking a user.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: UnblockUserResponse
      type: object
    UnblockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          type: string
          x-stream-index: "001"
      required:
      - blocked_user_id
      type: object
    UnblockUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    UnblockedUserEvent:
      description: |-
        This event is sent when a user is unblocked on a call,
        this can be useful to notify the user that they can now join the call again
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        type:
          default: call.unblocked_user
          description: 'The type of event: "call.unblocked_user" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user that was unblocked
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      title: UnblockedUserEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UnfollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The deleted follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Unfollow Response
      type: object
    UnmuteChannelRequest:
      nullable: true
      properties:
        channel_cids:
          description: Channel CIDs to mute (if multiple channels)
          items:
            type: string
          maximum: 25
          title: Channel CIDs
          type: array
          x-stream-index: "001.002"
        expiration:
          description: Duration of mute in milliseconds
          title: Expiration
          type: integer
          x-stream-index: "001.003"
      type: object
    UnmuteResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        non_existing_users:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    UnpinActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The unpinned activity
          title: Activity
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "004.001"
        feed:
          description: Fully qualified ID of the feed the activity was unpinned from
          title: Feed ID
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user who unpinned the activity
          title: User ID
          type: string
          x-stream-index: "003"
      required:
      - activity
      - feed
      - user_id
      - duration
      title: Unpin Activity Response
      type: object
    UnpinRequest:
      description: UnpinRequest is the payload for unpinning a message.
      nullable: true
      properties:
        session_id:
          description: the session ID of the user who pinned the message
          title: SessionID
          type: string
          x-stream-index: "003"
        user_id:
          description: the user ID of the user who pinned the message
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user_id
      - session_id
      title: UnpinRequest
      type: object
    UnpinResponse:
      description: UnpinResponse is the payload for unpinning a message.
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: UnpinResponse
      type: object
    UnreadCountsChannel:
      properties:
        channel_id:
          type: string
          x-stream-index: "001"
        last_read:
          format: date-time
          type: number
          x-stream-index: "003"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - channel_id
      - unread_count
      - last_read
      type: object
    UnreadCountsChannelType:
      properties:
        channel_count:
          format: int32
          type: integer
          x-stream-index: "002"
        channel_type:
          type: string
          x-stream-index: "001"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - channel_type
      - channel_count
      - unread_count
      type: object
    UnreadCountsThread:
      properties:
        last_read:
          format: date-time
          type: number
          x-stream-index: "002"
        last_read_message_id:
          type: string
          x-stream-index: "003"
        parent_message_id:
          type: string
          x-stream-index: "004"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - unread_count
      - last_read
      - last_read_message_id
      - parent_message_id
      type: object
    UpdateActivityPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Map of dot-notation field paths to new values
          title: object
          type: object
          x-stream-index: "002"
        unset:
          description: List of dot-notation paths to remove
          items:
            type: string
          title: '[]string'
          type: array
          x-stream-index: "003"
      type: object
    UpdateActivityPartialResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The updated activity
          title: ActivityResponse
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      type: object
    UpdateActivityRequest:
      nullable: true
      properties:
        attachments:
          description: List of attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: '[]ActivityAttachment'
          type: array
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: object
          type: object
          x-stream-index: "004"
        expires_at:
          description: Time when the activity will expire
          format: date-time
          title: string
          type: number
          x-stream-index: "007"
        feeds:
          description: List of feeds the activity is present in
          items:
            type: string
          maximum: 255
          title: '[]string'
          type: array
          x-stream-index: "011"
        filter_tags:
          description: Tags used for filtering the activity
          items:
            type: string
          title: '[]string'
          type: array
          x-stream-index: "008"
        interest_tags:
          description: Tags indicating interest categories
          items:
            type: string
          title: '[]string'
          type: array
          x-stream-index: "009"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location for the activity
          title: ActivityLocation
          x-stream-index: "006"
        poll_id:
          description: Poll ID
          title: string
          type: string
          x-stream-index: "010"
        text:
          description: The text content of the activity
          title: string
          type: string
          x-stream-index: "002"
        visibility:
          description: Visibility setting for the activity
          title: string
          type: string
          x-stream-index: "005"
      type: object
    UpdateActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The updated activity
          title: ActivityResponse
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      type: object
    UpdateBlockListRequest:
      nullable: true
      properties:
        team:
          type: string
          x-stream-index: "002"
        words:
          description: List of words to block
          items:
            type: string
          minimum: 1
          title: Words
          type: array
          x-stream-index: "003"
      title: Update block list
      type: object
      x-stream-docs-page-id: update_block_list
    UpdateBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklist:
          $ref: '#/components/schemas/BlockListResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    UpdateBookmarkFolderRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the folder
          title: Custom Data
          type: object
          x-stream-index: "003"
        name:
          description: Name of the folder
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "002"
      title: Update Bookmark Folder Request
      type: object
    UpdateBookmarkFolderResponse:
      nullable: true
      properties:
        bookmark_folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: The updated bookmark folder
          title: Bookmark Folder
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark_folder
      - duration
      title: Update Bookmark Folder Response
      type: object
    UpdateBookmarkRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the bookmark
          title: Custom Data
          type: object
          x-stream-index: "005"
        folder_id:
          description: ID of the folder to move the bookmark to
          maxLength: 255
          title: Folder ID
          type: string
          x-stream-index: "002"
        new_folder:
          $ref: '#/components/schemas/AddFolderRequest'
          x-stream-index: "004"
        new_folder_id:
          maxLength: 255
          type: string
          x-stream-index: "003"
      title: Update Bookmark Request
      type: object
    UpdateBookmarkResponse:
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The updated bookmark
          title: Bookmark
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark
      - duration
      title: Update Bookmark Response
      type: object
    UpdateCallMembersRequest:
      description: Update call members
      nullable: true
      properties:
        remove_members:
          description: List of userID to remove
          items:
            type: string
          maximum: 100
          title: Remove Members
          type: array
          x-stream-index: "003"
        update_members:
          description: List of members to update or insert
          items:
            $ref: '#/components/schemas/MemberRequest'
          maximum: 100
          title: Update Members
          type: array
          x-stream-index: "004"
      title: UpdateCallMembersRequest
      type: object
    UpdateCallMembersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "002"
      required:
      - duration
      - members
      title: Response
      type: object
    UpdateCallRequest:
      description: Request for updating a call
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "003"
        settings_override:
          $ref: '#/components/schemas/CallSettingsRequest'
          description: the settings to change for this call
          title: Settings Override
          x-stream-index: "004"
        starts_at:
          description: the time the call is scheduled to start
          format: date-time
          title: Starts At
          type: number
          x-stream-index: "005"
      title: UpdateCallRequest
      type: object
    UpdateCallResponse:
      description: Response for updating a call
      nullable: true
      properties:
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "001.001"
        duration:
          type: string
          x-stream-index: "002.001"
        members:
          items:
            $ref: '#/components/schemas/MemberResponse'
          type: array
          x-stream-index: "001.002"
        membership:
          $ref: '#/components/schemas/MemberResponse'
          x-stream-index: "001.003"
        own_capabilities:
          items:
            $ref: '#/components/schemas/OwnCapability'
          type: array
          x-stream-index: "001.004"
      required:
      - call
      - members
      - own_capabilities
      - blocked_users
      - duration
      title: UpdateCallResponse
      type: object
    UpdateChannelPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      title: UpdateChannelPartialRequest
      type: object
    UpdateChannelPartialResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Updated channel object
          title: Channel
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        members:
          description: List of updated members
          items:
            $ref: '#/components/schemas/ChannelMemberResponse'
          title: ChannelMemberResponse
          type: array
          x-stream-index: "002"
      required:
      - members
      - duration
      type: object
    UpdateChannelRequest:
      nullable: true
      properties:
        accept_invite:
          description: Set to `true` to accept the invite
          title: Accept invite
          type: boolean
          x-stream-index: "008"
        add_members:
          description: List of user IDs to add to the channel
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Add members
          type: array
          x-stream-index: "001"
        add_moderators:
          description: List of user IDs to make channel moderators
          items:
            type: string
          maximum: 100
          title: Add moderators
          type: array
          x-stream-index: "003"
        assign_roles:
          description: List of channel member role assignments. If any specified user
            is not part of the channel, the request will fail
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Assign roles
          type: array
          x-stream-index: "006"
        cooldown:
          description: Sets cool down period for the channel in seconds
          format: int32
          maximum: 120
          minimum: 0
          title: Cool down
          type: integer
          x-stream-index: "007"
        data:
          $ref: '#/components/schemas/ChannelInput'
          x-stream-index: "013.001"
        demote_moderators:
          description: List of user IDs to take away moderators status from
          items:
            type: string
          maximum: 100
          title: Demote moderators
          type: array
          x-stream-index: "004"
        hide_history:
          description: Set to `true` to hide channel's history when adding new members
          title: Hide history
          type: boolean
          x-stream-index: "012"
        invites:
          description: List of user IDs to invite to the channel
          items:
            $ref: '#/components/schemas/ChannelMember'
          maximum: 100
          title: Invites
          type: array
          x-stream-index: "005"
        message:
          $ref: '#/components/schemas/MessageRequest'
          description: Message to send to the chat when channel is successfully updated
          title: Message
          x-stream-index: "010"
        reject_invite:
          description: Set to `true` to reject the invite
          title: Reject invite
          type: boolean
          x-stream-index: "009"
        remove_members:
          description: List of user IDs to remove from the channel
          items:
            type: string
          maximum: 100
          title: Remove members
          type: array
          x-stream-index: "002"
        skip_push:
          description: When `message` is set disables all push notifications for it
          title: Skip push
          type: boolean
          x-stream-index: "011"
      title: Channel update request
      type: object
      x-stream-docs-page-id: channel_update
    UpdateChannelResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Updated channel
          title: Channel
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        members:
          description: List of channel members
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: Members
          type: array
          x-stream-index: "003"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Message sent to the chat
          title: Message
          x-stream-index: "002"
      required:
      - members
      - duration
      type: object
    UpdateCommentRequest:
      nullable: true
      properties:
        comment:
          description: Updated text content of the comment
          title: Comment
          type: string
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          description: Updated custom data for the comment
          title: Custom Data
          type: object
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "004"
      title: Update Comment Request
      type: object
    UpdateCommentResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The updated comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comment
      - duration
      title: Update Comment Response
      type: object
    UpdateFeedMembersRequest:
      nullable: true
      properties:
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        members:
          description: List of members to upsert, remove, or set
          items:
            $ref: '#/components/schemas/FeedMemberRequest'
          title: Members
          type: array
          x-stream-index: "004"
        next:
          type: string
          x-stream-index: "006.002"
        operation:
          description: Type of update operation to perform
          enum:
          - upsert
          - remove
          - set
          title: Operation
          type: string
          x-stream-index: "003"
        prev:
          type: string
          x-stream-index: "006.003"
      required:
      - operation
      title: Update Feed Members Request
      type: object
    UpdateFeedMembersResponse:
      description: Basic response information
      nullable: true
      properties:
        added:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        removed_ids:
          items:
            type: string
          type: array
          x-stream-index: "003"
        updated:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "002"
      required:
      - added
      - updated
      - removed_ids
      - duration
      title: Response
      type: object
    UpdateFeedRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the feed
          title: Custom Data
          type: object
          x-stream-index: "004"
      title: Update Feed Request
      type: object
    UpdateFeedResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed:
          $ref: '#/components/schemas/FeedResponse'
          description: The updated feed
          title: Feed
          x-stream-index: "001"
      required:
      - feed
      - duration
      title: Update Feed Response
      type: object
    UpdateFollowRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this follow
          title: Create Notification Activity
          type: boolean
          x-stream-index: "001.004"
        custom:
          additionalProperties: {}
          description: Custom data for the follow relationship
          title: Custom Data
          type: object
          x-stream-index: "001.002"
        follower_role:
          type: string
          x-stream-index: "002"
        push_preference:
          description: Push preference for the follow relationship
          enum:
          - all
          - none
          title: Push Preference
          type: string
          x-stream-index: "001.003"
        skip_push:
          type: boolean
          x-stream-index: "001.005"
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          x-stream-index: 001.001.001
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          x-stream-index: 001.001.002
      required:
      - source
      - target
      title: Update Follow Request
      type: object
    UpdateFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: Details of the updated follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Update Follow Response
      type: object
    UpdateLiveLocationRequest:
      nullable: true
      properties:
        end_at:
          description: Time when the live location expires
          format: date-time
          title: string
          type: number
          x-stream-index: "004"
        latitude:
          description: Latitude coordinate
          format: float
          maximum: 90
          minimum: 1.8446744073709552e+19
          title: number
          type: number
          x-stream-index: "002"
        longitude:
          description: Longitude coordinate
          format: float
          maximum: 180
          minimum: 1.8446744073709552e+19
          title: number
          type: number
          x-stream-index: "003"
        message_id:
          description: Live location ID
          title: string
          type: string
          x-stream-index: "001"
      required:
      - message_id
      type: object
    UpdateMemberPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      type: object
    UpdateMemberPartialResponse:
      nullable: true
      properties:
        channel_member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          description: Updated channel member
          title: Channel member
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    UpdateMessagePartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        skip_enrich_url:
          description: Skip enriching the URL in the message
          title: SkipEnrichURL
          type: boolean
          x-stream-index: "001"
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
      type: object
    UpdateMessagePartialResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Updated message
          title: Message
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          description: Pending message metadata
          title: PendingMessageMetadata
          type: object
          x-stream-index: "002"
      required:
      - duration
      type: object
    UpdateMessageRequest:
      nullable: true
      properties:
        message:
          $ref: '#/components/schemas/MessageRequest'
          description: Message
          title: MessageRequest
          x-stream-index: "001"
        skip_enrich_url:
          description: Skip enrich URL
          title: boolean
          type: boolean
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "002"
      required:
      - message
      type: object
    UpdateMessageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001"
        pending_message_metadata:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
      required:
      - message
      - duration
      title: Response
      type: object
    UpdatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "004"
        id:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "003"
      required:
      - id
      - text
      type: object
    UpdatePollPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
      type: object
    UpdatePollRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Allow answers
          title: boolean
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          description: Allow user suggested options
          title: boolean
          type: boolean
          x-stream-index: "008"
        description:
          description: Poll description
          title: string
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Enforce unique vote
          title: boolean
          type: boolean
          x-stream-index: "005"
        id:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
        is_closed:
          description: Is closed
          title: boolean
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Max votes allowed
          format: int32
          maximum: 10
          title: integer
          type: integer
          x-stream-index: "007"
        name:
          description: Poll name
          title: string
          type: string
          x-stream-index: "002"
        options:
          description: Poll options
          items:
            $ref: '#/components/schemas/PollOptionRequest'
          maximum: 100
          title: PollOptions
          type: array
          x-stream-index: "004"
        voting_visibility:
          description: Voting visibility
          enum:
          - anonymous
          - public
          title: string
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      type: object
    UpdateReminderRequest:
      nullable: true
      properties:
        remind_at:
          format: date-time
          type: number
          x-stream-index: "001"
      type: object
    UpdateReminderResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          x-stream-index: "001"
      required:
      - reminder
      - duration
      title: Response
      type: object
    UpdateThreadPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "004.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "004.002"
      type: object
    UpdateThreadPartialResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        thread:
          $ref: '#/components/schemas/ThreadResponse'
          description: Updated thread (not enriched)
          title: Thread
          x-stream-index: "001"
      required:
      - thread
      - duration
      type: object
    UpdateUserPartialRequest:
      properties:
        id:
          description: User ID to update
          title: ID
          type: string
          x-stream-index: "001"
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      required:
      - id
      type: object
    UpdateUserPermissionsRequest:
      nullable: true
      properties:
        grant_permissions:
          items:
            type: string
          type: array
          x-stream-index: "002"
        revoke_permissions:
          items:
            type: string
          type: array
          x-stream-index: "003"
        user_id:
          type: string
          x-stream-index: "001"
      required:
      - user_id
      type: object
    UpdateUserPermissionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    UpdateUsersPartialRequest:
      nullable: true
      properties:
        users:
          items:
            $ref: '#/components/schemas/UpdateUserPartialRequest'
          maximum: 100
          type: array
          x-stream-index: "001"
      required:
      - users
      type: object
    UpdateUsersRequest:
      nullable: true
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/UserRequest'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      type: object
    UpdateUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        membership_deletion_task_id:
          type: string
          x-stream-index: "002"
        users:
          additionalProperties:
            $ref: '#/components/schemas/FullUserResponse'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      - membership_deletion_task_id
      - duration
      type: object
    UpdatedCallPermissionsEvent:
      description: This event is sent to notify about permission changes for a user,
        clients receiving this event should update their UI accordingly
      properties:
        call_cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.002"
        own_capabilities:
          description: The capabilities of the current user
          items:
            $ref: '#/components/schemas/OwnCapability'
          title: Own capabilities
          type: array
          x-stream-index: "004"
        type:
          default: call.permissions_updated
          description: 'The type of event: "call.permissions_updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: The user who received the new permissions
          title: User
          x-stream-index: "003"
      required:
      - type
      - created_at
      - call_cid
      - user
      - own_capabilities
      title: UpdatedCallPermissionsEvent
      type: object
      x-stream-event-call-type: true
      x-stream-event-doc-group: call
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UploadChannelFileRequest:
      nullable: true
      properties:
        file:
          description: file field
          title: File
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          description: user for the request **server side only**
          title: User
          x-stream-index: "003"
      type: object
    UploadChannelFileResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        file:
          description: URL to the uploaded asset. Should be used to put to `asset_url`
            attachment field
          title: File
          type: string
          x-stream-index: "001"
        moderation_action:
          type: string
          x-stream-index: "003"
        thumb_url:
          description: URL of the file thumbnail for supported file formats. Should
            be put to `thumb_url` attachment field
          title: Thumbnail URL
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    UploadChannelRequest:
      nullable: true
      properties:
        file:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: field with JSON-encoded array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          x-stream-index: "001.003"
      type: object
    UploadChannelResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.004.001
        file:
          type: string
          x-stream-index: "001.001"
        moderation_action:
          type: string
          x-stream-index: "001.003"
        thumb_url:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: Array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
      required:
      - duration
      type: object
    UpsertActivitiesRequest:
      nullable: true
      properties:
        activities:
          description: List of activities to create or update
          items:
            $ref: '#/components/schemas/ActivityRequest'
          maximum: 100
          minimum: 1
          title: Activities
          type: array
          x-stream-index: "001"
      required:
      - activities
      title: Upsert Activities Request
      type: object
    UpsertActivitiesResponse:
      nullable: true
      properties:
        activities:
          description: List of created or updated activities
          items:
            $ref: '#/components/schemas/ActivityResponse'
          title: Activities
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activities
      - duration
      title: Upsert Activities Response
      type: object
    UpsertConfigRequest:
      nullable: true
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          description: Configuration for AI image analysis
          title: AI Image Config
          x-stream-index: "011"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          description: Configuration for AI text analysis
          title: AI Text Config
          x-stream-index: "008"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          description: Configuration for AI video analysis
          title: AI Video Config
          x-stream-index: "012"
        async:
          description: Whether moderation should be performed asynchronously
          title: Async
          type: boolean
          x-stream-index: "003"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          description: Configuration for platform circumvention detection
          title: Automod Platform Circumvention Config
          x-stream-index: "005"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          description: Configuration for semantic filtering
          title: Automod Semantic Filters Config
          x-stream-index: "006"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          description: Configuration for toxicity detection
          title: Automod Toxicity Config
          x-stream-index: "004"
        aws_rekognition_config:
          $ref: '#/components/schemas/AIImageConfig'
          x-stream-index: "016"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          description: Configuration for block list filtering
          title: Block List Config
          x-stream-index: "007"
        bodyguard_config:
          $ref: '#/components/schemas/AITextConfig'
          x-stream-index: "015"
        google_vision_config:
          $ref: '#/components/schemas/GoogleVisionConfig'
          description: Configuration for Google Vision integration
          title: Google Vision Config
          x-stream-index: "010"
        key:
          description: Unique identifier for the moderation configuration
          title: Key
          type: string
          x-stream-index: "001"
        llm_config:
          $ref: '#/components/schemas/LLMConfig'
          description: Configuration for customer-configured LLM moderation
          title: LLM Config
          x-stream-index: "009"
        rule_builder_config:
          $ref: '#/components/schemas/RuleBuilderConfig'
          description: Configuration for custom rule builder (max 3 rules, max 5 conditions
            per rule)
          title: Rule Builder Config
          x-stream-index: "014"
        team:
          description: Team associated with the configuration
          maxLength: 128
          minLength: 1
          title: Team
          type: string
          x-stream-index: "002"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          description: Configuration for velocity-based filtering
          title: Velocity Filter Config
          x-stream-index: "013"
        video_call_rule_config:
          $ref: '#/components/schemas/VideoCallRuleConfig'
          x-stream-index: "017"
      required:
      - key
      type: object
    UpsertConfigResponse:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ConfigResponse'
          description: The created or updated moderation configuration
          title: Config
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    UpsertPushPreferencesRequest:
      nullable: true
      properties:
        preferences:
          description: A list of push preferences for channels, calls, or the user.
          items:
            $ref: '#/components/schemas/PushPreferenceInput'
          type: array
          x-stream-index: "001"
      required:
      - preferences
      type: object
    UpsertPushPreferencesResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        user_channel_preferences:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/ChannelPushPreferences'
            type: object
          description: The channel specific push notification preferences, only returned
            for channels you've edited.
          title: User Channel Notification Preferences
          type: object
          x-stream-index: "002"
        user_preferences:
          additionalProperties:
            $ref: '#/components/schemas/PushPreferences'
          description: The user preferences, always returned regardless if you edited
            it
          title: User Preferences
          type: object
          x-stream-index: "001"
      required:
      - user_preferences
      - user_channel_preferences
      - duration
      type: object
    User:
      properties:
        avg_response_time:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "046"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "017"
        banned:
          type: boolean
          x-stream-index: "016"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        deactivated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "014"
        deleted_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "013"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "023"
        language:
          type: string
          x-stream-index: "035"
        last_active:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "011"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "012"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "022"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "026"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "042"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "036"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "005"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "009"
      required:
      - id
      - role
      - teams_role
      - custom
      - banned
      - online
      type: object
    UserBannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "006.002"
        channel_type:
          type: string
          x-stream-index: "006.003"
        cid:
          type: string
          x-stream-index: "006.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        expiration:
          format: date-time
          type: number
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: user.banned
          type: string
          x-stream-index: "008.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007.001"
      required:
      - created_by
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserBannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserCreatedWithinParameters:
      properties:
        max_age:
          type: string
          x-stream-index: "001"
      type: object
    UserCustomPropertyParameters:
      properties:
        operator:
          type: string
          x-stream-index: "002"
        property_key:
          type: string
          x-stream-index: "001"
      type: object
    UserDeactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        type:
          default: user.deactivated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - created_by
      - type
      - created_at
      title: UserDeactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserDeletedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        delete_conversation_channels:
          type: boolean
          x-stream-index: "005"
        hard_delete:
          type: boolean
          x-stream-index: "003.001"
        mark_messages_deleted:
          type: boolean
          x-stream-index: "004"
        type:
          default: user.deleted
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      - hard_delete
      - mark_messages_deleted
      - delete_conversation_channels
      title: UserDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserFeedbackReport:
      properties:
        count_by_rating:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001"
        unreported_count:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - count_by_rating
      - unreported_count
      type: object
    UserFeedbackReportResponse:
      properties:
        daily:
          items:
            $ref: '#/components/schemas/DailyAggregateUserFeedbackReportResponse'
          type: array
          x-stream-index: "001"
      required:
      - daily
      type: object
    UserMessagesDeletedEvent:
      description: This event is sent when a user's message get deleted. The event
        contains information about the user whose messages got deleted.
      nullable: true
      properties:
        channel_custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.006
        channel_id:
          description: The ID of the channel where the target user's messages were
            deleted
          title: Channel ID
          type: string
          x-stream-index: 001.002.002
        channel_member_count:
          format: int32
          type: integer
          x-stream-index: 001.001.004
        channel_message_count:
          format: int64
          type: integer
          x-stream-index: 001.001.005
        channel_type:
          description: The type of the channel where the target user's messages were
            deleted
          title: Channel Type
          type: string
          x-stream-index: 001.002.001
        cid:
          description: The CID of the channel where the target user's messages were
            deleted
          title: Channel CID
          type: string
          x-stream-index: 001.001.001.002
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.001.001.007
        hard_delete:
          description: Whether Messages were hard deleted
          title: Hard Delete
          type: boolean
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.001.001.004
        team:
          description: The team of the channel where the target user's messages were
            deleted
          title: Team
          type: string
          x-stream-index: 001.001.003
        type:
          default: user.messages.deleted
          description: 'The type of event: "user.messages.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.001.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The target user whose messages got deleted
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - user
      title: UserMessagesDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserMute:
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: number
          x-stream-index: "008"
        target:
          $ref: '#/components/schemas/User'
          description: User who's muted
          title: Target
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/User'
          description: Owner of channel mute
          title: User
          x-stream-index: "005"
      required:
      - created_at
      - updated_at
      type: object
    UserMuteResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        expires:
          format: date-time
          type: number
          x-stream-index: "003"
        target:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    UserMutedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "001"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "002"
        type:
          default: user.muted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: UserMutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserPresenceChangedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: user.presence.changed
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001.001"
      required:
      - type
      - created_at
      title: UserPresenceChangedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserRatingReportResponse:
      properties:
        average:
          format: float
          type: number
          x-stream-index: "002"
        count:
          format: int32
          type: integer
          x-stream-index: "001"
      required:
      - count
      - average
      type: object
    UserReactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: user.reactivated
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserReactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserRequest:
      description: User request object
      properties:
        custom:
          additionalProperties: {}
          description: Custom user data
          title: Custom
          type: object
          x-stream-index: "004"
        id:
          description: User ID
          title: ID
          type: string
          x-stream-index: "001"
        image:
          description: User's profile image URL
          title: Image
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "006"
        language:
          type: string
          x-stream-index: "005"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "002"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "007"
      required:
      - id
      title: UserRequest
      type: object
    UserResponse:
      description: User response object
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        banned:
          description: Whether a user is banned or not
          title: Banned
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.017"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          description: Date of deactivation
          format: date-time
          title: Deactivated at
          type: number
          x-stream-index: "001.016"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "001.011"
        id:
          description: Unique user identifier
          title: ID
          type: string
          x-stream-index: "001.001"
        image:
          title: Image
          type: string
          x-stream-index: "001.003"
        language:
          description: Preferred language of a user
          title: Language
          type: string
          x-stream-index: "001.005"
        last_active:
          description: Date of last activity
          format: date-time
          title: Last active
          type: number
          x-stream-index: "001.014"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "001.002"
        online:
          description: Whether a user online or not
          title: Online
          type: boolean
          x-stream-index: "001.013"
        revoke_tokens_issued_before:
          description: Revocation date for tokens
          format: date-time
          title: Revoke tokens issued before
          type: number
          x-stream-index: "001.015"
        role:
          description: Determines the set of user permissions
          title: Role
          type: string
          x-stream-index: "001.006"
        teams:
          description: List of teams user is a part of
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - invisible
      title: UserResponse
      type: object
    UserResponseCommonFields:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "018"
        banned:
          type: boolean
          x-stream-index: "012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "017"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        id:
          type: string
          x-stream-index: "001"
        image:
          type: string
          x-stream-index: "003"
        language:
          type: string
          x-stream-index: "005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "014"
        name:
          type: string
          x-stream-index: "002"
        online:
          type: boolean
          x-stream-index: "013"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "015"
        role:
          type: string
          x-stream-index: "006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      type: object
    UserResponsePrivacyFields:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        banned:
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.017"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.011"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "003"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.014"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.013"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.015"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      type: object
    UserRuleParameters:
      properties:
        max_age:
          type: string
          x-stream-index: "001"
      type: object
    UserUnbannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "002.002"
        channel_type:
          type: string
          x-stream-index: "002.003"
        cid:
          type: string
          x-stream-index: "002.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "005.002"
        shadow:
          type: boolean
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "004.001"
        type:
          default: user.unbanned
          type: string
          x-stream-index: "005.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserUnbannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserUpdatedEvent:
      description: This event is sent when a user gets updated. The event contains
        information about the updated user.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        type:
          default: user.updated
          description: 'The type of event: "user.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.002"
        user:
          $ref: '#/components/schemas/UserResponsePrivacyFields'
          description: The updated user
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - user
      title: UserUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserWatchingStartEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        team:
          type: string
          x-stream-index: "002.001"
        type:
          default: user.watching.start
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: UserWatchingStartEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserWatchingStopEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "004.002"
        channel_type:
          type: string
          x-stream-index: "004.003"
        cid:
          type: string
          x-stream-index: "004.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: user.watching.stop
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
        watcher_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
      required:
      - watcher_count
      - type
      - created_at
      - cid
      - channel_id
      - channel_type
      title: UserWatchingStopEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    VelocityFilterConfig:
      properties:
        advanced_filters:
          type: boolean
          x-stream-index: "007"
        async:
          type: boolean
          x-stream-index: "001"
        cascading_actions:
          type: boolean
          x-stream-index: "004"
        cids_per_user:
          format: int32
          type: integer
          x-stream-index: "006"
        enabled:
          type: boolean
          x-stream-index: "002"
        first_message_only:
          type: boolean
          x-stream-index: "005"
        rules:
          items:
            $ref: '#/components/schemas/VelocityFilterConfigRule'
          type: array
          x-stream-index: "003"
      required:
      - enabled
      - rules
      - cascading_actions
      - first_message_only
      - cids_per_user
      - advanced_filters
      type: object
    VelocityFilterConfigRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - ban
          type: string
          x-stream-index: "001"
        ban_duration:
          format: int32
          type: integer
          x-stream-index: "002"
        cascading_action:
          enum:
          - flag
          - shadow
          - remove
          - ban
          type: string
          x-stream-index: "006"
        cascading_threshold:
          format: int64
          type: integer
          x-stream-index: "005"
        check_message_context:
          type: boolean
          x-stream-index: "009"
        fast_spam_threshold:
          format: int32
          type: integer
          x-stream-index: "007"
        fast_spam_ttl:
          format: int32
          type: integer
          x-stream-index: "010"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        probation_period:
          format: int32
          type: integer
          x-stream-index: "014"
        shadow_ban:
          type: boolean
          x-stream-index: "003"
        slow_spam_ban_duration:
          format: int32
          type: integer
          x-stream-index: "012"
        slow_spam_threshold:
          format: int32
          type: integer
          x-stream-index: "008"
        slow_spam_ttl:
          format: int32
          type: integer
          x-stream-index: "011"
        url_only:
          type: boolean
          x-stream-index: "013"
      required:
      - action
      - ban_duration
      - shadow_ban
      - ip_ban
      - cascading_threshold
      - cascading_action
      - fast_spam_threshold
      - slow_spam_threshold
      - check_message_context
      - fast_spam_ttl
      - slow_spam_ttl
      - url_only
      - probation_period
      type: object
    VideoCallRuleConfig:
      properties:
        flag_all_labels:
          type: boolean
          x-stream-index: "002"
        flagged_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        rules:
          items:
            $ref: '#/components/schemas/HarmConfig'
          type: array
          x-stream-index: "001"
      required:
      - rules
      - flag_all_labels
      - flagged_labels
      type: object
    VideoContentParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "001"
      type: object
    VideoEndCallRequest:
      type: object
    VideoKickUserRequest:
      type: object
    VideoReactionOverTimeResponse:
      properties:
        by_minute:
          items:
            $ref: '#/components/schemas/CountByMinuteResponse'
          type: array
          x-stream-index: "001"
      type: object
    VideoReactionsResponse:
      nullable: true
      properties:
        count_over_time:
          $ref: '#/components/schemas/VideoReactionOverTimeResponse'
          x-stream-index: "002"
        reaction:
          type: string
          x-stream-index: "001"
      required:
      - reaction
      type: object
    VideoRuleParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    VideoSettingsRequest:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      type: object
    VideoSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      - target_resolution
      - camera_default_on
      - camera_facing
      type: object
    VoteData:
      properties:
        answer_text:
          type: string
          x-stream-index: "002"
        option_id:
          maxLength: 255
          type: string
          x-stream-index: "001"
      type: object
    WHIPIngress:
      properties:
        address:
          description: URL for a new whip input, every time a new link is created
          title: Address
          type: string
          x-stream-index: "001"
      required:
      - address
      title: WHIPIngress
      type: object
    WSAuthMessage:
      description: Websocket auth message
      nullable: true
      properties:
        products:
          items:
            type: string
          type: array
          x-stream-index: "003"
        token:
          title: Token
          type: string
          x-stream-index: "002"
        user_details:
          $ref: '#/components/schemas/ConnectUserDetailsRequest'
          x-stream-index: "001"
      required:
      - user_details
      - token
      title: WSAuthMessage
      type: object
    WSClientEvent:
      description: The discriminator object for all websocket client events, it maps
        events' payload to the final type
      discriminator:
        mapping:
          app.updated: '#/components/schemas/AppUpdatedEvent'
          draft.deleted: '#/components/schemas/DraftDeletedEvent'
          draft.updated: '#/components/schemas/DraftUpdatedEvent'
          feeds.activity.added: '#/components/schemas/ActivityAddedEvent'
          feeds.activity.deleted: '#/components/schemas/ActivityDeletedEvent'
          feeds.activity.marked: '#/components/schemas/ActivityMarkEvent'
          feeds.activity.pinned: '#/components/schemas/ActivityPinnedEvent'
          feeds.activity.reaction.added: '#/components/schemas/ActivityReactionAddedEvent'
          feeds.activity.reaction.deleted: '#/components/schemas/ActivityReactionDeletedEvent'
          feeds.activity.reaction.updated: '#/components/schemas/ActivityReactionUpdatedEvent'
          feeds.activity.removed_from_feed: '#/components/schemas/ActivityRemovedFromFeedEvent'
          feeds.activity.unpinned: '#/components/schemas/ActivityUnpinnedEvent'
          feeds.activity.updated: '#/components/schemas/ActivityUpdatedEvent'
          feeds.bookmark.added: '#/components/schemas/BookmarkAddedEvent'
          feeds.bookmark.deleted: '#/components/schemas/BookmarkDeletedEvent'
          feeds.bookmark.updated: '#/components/schemas/BookmarkUpdatedEvent'
          feeds.bookmark_folder.deleted: '#/components/schemas/BookmarkFolderDeletedEvent'
          feeds.bookmark_folder.updated: '#/components/schemas/BookmarkFolderUpdatedEvent'
          feeds.comment.added: '#/components/schemas/CommentAddedEvent'
          feeds.comment.deleted: '#/components/schemas/CommentDeletedEvent'
          feeds.comment.reaction.added: '#/components/schemas/CommentReactionAddedEvent'
          feeds.comment.reaction.deleted: '#/components/schemas/CommentReactionDeletedEvent'
          feeds.comment.reaction.updated: '#/components/schemas/CommentReactionUpdatedEvent'
          feeds.comment.updated: '#/components/schemas/CommentUpdatedEvent'
          feeds.feed.created: '#/components/schemas/FeedCreatedEvent'
          feeds.feed.deleted: '#/components/schemas/FeedDeletedEvent'
          feeds.feed.updated: '#/components/schemas/FeedUpdatedEvent'
          feeds.feed_group.changed: '#/components/schemas/FeedGroupChangedEvent'
          feeds.feed_group.deleted: '#/components/schemas/FeedGroupDeletedEvent'
          feeds.feed_member.added: '#/components/schemas/FeedMemberAddedEvent'
          feeds.feed_member.removed: '#/components/schemas/FeedMemberRemovedEvent'
          feeds.feed_member.updated: '#/components/schemas/FeedMemberUpdatedEvent'
          feeds.follow.created: '#/components/schemas/FollowCreatedEvent'
          feeds.follow.deleted: '#/components/schemas/FollowDeletedEvent'
          feeds.follow.updated: '#/components/schemas/FollowUpdatedEvent'
          feeds.notification_feed.updated: '#/components/schemas/NotificationFeedUpdatedEvent'
          feeds.poll.closed: '#/components/schemas/PollClosedFeedEvent'
          feeds.poll.deleted: '#/components/schemas/PollDeletedFeedEvent'
          feeds.poll.updated: '#/components/schemas/PollUpdatedFeedEvent'
          feeds.poll.vote_casted: '#/components/schemas/PollVoteCastedFeedEvent'
          feeds.poll.vote_changed: '#/components/schemas/PollVoteChangedFeedEvent'
          feeds.poll.vote_removed: '#/components/schemas/PollVoteRemovedFeedEvent'
          health.check: '#/components/schemas/HealthCheckEvent'
          message.pending: '#/components/schemas/PendingMessageEvent'
          moderation.custom_action: '#/components/schemas/ModerationCustomActionEvent'
          moderation.mark_reviewed: '#/components/schemas/ModerationMarkReviewedEvent'
          notification.reminder_due: '#/components/schemas/ReminderNotificationEvent'
          poll.closed: '#/components/schemas/PollClosedEvent'
          poll.deleted: '#/components/schemas/PollDeletedEvent'
          poll.updated: '#/components/schemas/PollUpdatedEvent'
          poll.vote_casted: '#/components/schemas/PollVoteCastedEvent'
          poll.vote_changed: '#/components/schemas/PollVoteChangedEvent'
          poll.vote_removed: '#/components/schemas/PollVoteRemovedEvent'
          reminder.created: '#/components/schemas/ReminderCreatedEvent'
          reminder.deleted: '#/components/schemas/ReminderDeletedEvent'
          reminder.updated: '#/components/schemas/ReminderUpdatedEvent'
          user.messages.deleted: '#/components/schemas/UserMessagesDeletedEvent'
          user.updated: '#/components/schemas/UserUpdatedEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ActivityAddedEvent'
      - $ref: '#/components/schemas/ActivityDeletedEvent'
      - $ref: '#/components/schemas/ActivityMarkEvent'
      - $ref: '#/components/schemas/ActivityPinnedEvent'
      - $ref: '#/components/schemas/ActivityReactionAddedEvent'
      - $ref: '#/components/schemas/ActivityReactionDeletedEvent'
      - $ref: '#/components/schemas/ActivityReactionUpdatedEvent'
      - $ref: '#/components/schemas/ActivityRemovedFromFeedEvent'
      - $ref: '#/components/schemas/ActivityUnpinnedEvent'
      - $ref: '#/components/schemas/ActivityUpdatedEvent'
      - $ref: '#/components/schemas/AppUpdatedEvent'
      - $ref: '#/components/schemas/BookmarkAddedEvent'
      - $ref: '#/components/schemas/BookmarkDeletedEvent'
      - $ref: '#/components/schemas/BookmarkFolderDeletedEvent'
      - $ref: '#/components/schemas/BookmarkFolderUpdatedEvent'
      - $ref: '#/components/schemas/BookmarkUpdatedEvent'
      - $ref: '#/components/schemas/CommentAddedEvent'
      - $ref: '#/components/schemas/CommentDeletedEvent'
      - $ref: '#/components/schemas/CommentReactionAddedEvent'
      - $ref: '#/components/schemas/CommentReactionDeletedEvent'
      - $ref: '#/components/schemas/CommentReactionUpdatedEvent'
      - $ref: '#/components/schemas/CommentUpdatedEvent'
      - $ref: '#/components/schemas/DraftDeletedEvent'
      - $ref: '#/components/schemas/DraftUpdatedEvent'
      - $ref: '#/components/schemas/FeedCreatedEvent'
      - $ref: '#/components/schemas/FeedDeletedEvent'
      - $ref: '#/components/schemas/FeedGroupChangedEvent'
      - $ref: '#/components/schemas/FeedGroupDeletedEvent'
      - $ref: '#/components/schemas/FeedMemberAddedEvent'
      - $ref: '#/components/schemas/FeedMemberRemovedEvent'
      - $ref: '#/components/schemas/FeedMemberUpdatedEvent'
      - $ref: '#/components/schemas/FeedUpdatedEvent'
      - $ref: '#/components/schemas/FollowCreatedEvent'
      - $ref: '#/components/schemas/FollowDeletedEvent'
      - $ref: '#/components/schemas/FollowUpdatedEvent'
      - $ref: '#/components/schemas/HealthCheckEvent'
      - $ref: '#/components/schemas/ModerationCustomActionEvent'
      - $ref: '#/components/schemas/ModerationMarkReviewedEvent'
      - $ref: '#/components/schemas/NotificationFeedUpdatedEvent'
      - $ref: '#/components/schemas/PendingMessageEvent'
      - $ref: '#/components/schemas/PollClosedEvent'
      - $ref: '#/components/schemas/PollClosedFeedEvent'
      - $ref: '#/components/schemas/PollDeletedEvent'
      - $ref: '#/components/schemas/PollDeletedFeedEvent'
      - $ref: '#/components/schemas/PollUpdatedEvent'
      - $ref: '#/components/schemas/PollUpdatedFeedEvent'
      - $ref: '#/components/schemas/PollVoteCastedEvent'
      - $ref: '#/components/schemas/PollVoteCastedFeedEvent'
      - $ref: '#/components/schemas/PollVoteChangedEvent'
      - $ref: '#/components/schemas/PollVoteChangedFeedEvent'
      - $ref: '#/components/schemas/PollVoteRemovedEvent'
      - $ref: '#/components/schemas/PollVoteRemovedFeedEvent'
      - $ref: '#/components/schemas/ReminderCreatedEvent'
      - $ref: '#/components/schemas/ReminderDeletedEvent'
      - $ref: '#/components/schemas/ReminderNotificationEvent'
      - $ref: '#/components/schemas/ReminderUpdatedEvent'
      - $ref: '#/components/schemas/UserMessagesDeletedEvent'
      - $ref: '#/components/schemas/UserUpdatedEvent'
    WSEvent:
      description: The discriminator object for all websocket events, it maps events'
        payload to the final type
      discriminator:
        mapping:
          '*': '#/components/schemas/AnyEvent'
          activity.marked: '#/components/schemas/ActivityMarkedEvent'
          ai_indicator.clear: '#/components/schemas/AIIndicatorClearEvent'
          ai_indicator.stop: '#/components/schemas/AIIndicatorStopEvent'
          ai_indicator.update: '#/components/schemas/AIIndicatorUpdateEvent'
          app.updated: '#/components/schemas/AppUpdatedEvent'
          call.accepted: '#/components/schemas/CallAcceptedEvent'
          call.blocked_user: '#/components/schemas/BlockedUserEvent'
          call.closed_caption: '#/components/schemas/ClosedCaptionEvent'
          call.closed_captions_failed: '#/components/schemas/CallClosedCaptionsFailedEvent'
          call.closed_captions_started: '#/components/schemas/CallClosedCaptionsStartedEvent'
          call.closed_captions_stopped: '#/components/schemas/CallClosedCaptionsStoppedEvent'
          call.created: '#/components/schemas/CallCreatedEvent'
          call.deleted: '#/components/schemas/CallDeletedEvent'
          call.ended: '#/components/schemas/CallEndedEvent'
          call.frame_recording_failed: '#/components/schemas/CallFrameRecordingFailedEvent'
          call.frame_recording_ready: '#/components/schemas/CallFrameRecordingFrameReadyEvent'
          call.frame_recording_started: '#/components/schemas/CallFrameRecordingStartedEvent'
          call.frame_recording_stopped: '#/components/schemas/CallFrameRecordingStoppedEvent'
          call.hls_broadcasting_failed: '#/components/schemas/CallHLSBroadcastingFailedEvent'
          call.hls_broadcasting_started: '#/components/schemas/CallHLSBroadcastingStartedEvent'
          call.hls_broadcasting_stopped: '#/components/schemas/CallHLSBroadcastingStoppedEvent'
          call.kicked_user: '#/components/schemas/KickedUserEvent'
          call.live_started: '#/components/schemas/CallLiveStartedEvent'
          call.member_added: '#/components/schemas/CallMemberAddedEvent'
          call.member_removed: '#/components/schemas/CallMemberRemovedEvent'
          call.member_updated: '#/components/schemas/CallMemberUpdatedEvent'
          call.member_updated_permission: '#/components/schemas/CallMemberUpdatedPermissionEvent'
          call.missed: '#/components/schemas/CallMissedEvent'
          call.moderation_blur: '#/components/schemas/CallModerationBlurEvent'
          call.moderation_warning: '#/components/schemas/CallModerationWarningEvent'
          call.notification: '#/components/schemas/CallNotificationEvent'
          call.permission_request: '#/components/schemas/PermissionRequestEvent'
          call.permissions_updated: '#/components/schemas/UpdatedCallPermissionsEvent'
          call.reaction_new: '#/components/schemas/CallReactionEvent'
          call.recording_failed: '#/components/schemas/CallRecordingFailedEvent'
          call.recording_ready: '#/components/schemas/CallRecordingReadyEvent'
          call.recording_started: '#/components/schemas/CallRecordingStartedEvent'
          call.recording_stopped: '#/components/schemas/CallRecordingStoppedEvent'
          call.rejected: '#/components/schemas/CallRejectedEvent'
          call.ring: '#/components/schemas/CallRingEvent'
          call.rtmp_broadcast_failed: '#/components/schemas/CallRtmpBroadcastFailedEvent'
          call.rtmp_broadcast_started: '#/components/schemas/CallRtmpBroadcastStartedEvent'
          call.rtmp_broadcast_stopped: '#/components/schemas/CallRtmpBroadcastStoppedEvent'
          call.session_ended: '#/components/schemas/CallSessionEndedEvent'
          call.session_participant_count_updated: '#/components/schemas/CallSessionParticipantCountsUpdatedEvent'
          call.session_participant_joined: '#/components/schemas/CallSessionParticipantJoinedEvent'
          call.session_participant_left: '#/components/schemas/CallSessionParticipantLeftEvent'
          call.session_started: '#/components/schemas/CallSessionStartedEvent'
          call.stats_report_ready: '#/components/schemas/CallStatsReportReadyEvent'
          call.transcription_failed: '#/components/schemas/CallTranscriptionFailedEvent'
          call.transcription_ready: '#/components/schemas/CallTranscriptionReadyEvent'
          call.transcription_started: '#/components/schemas/CallTranscriptionStartedEvent'
          call.transcription_stopped: '#/components/schemas/CallTranscriptionStoppedEvent'
          call.unblocked_user: '#/components/schemas/UnblockedUserEvent'
          call.updated: '#/components/schemas/CallUpdatedEvent'
          call.user_feedback_submitted: '#/components/schemas/CallUserFeedbackSubmittedEvent'
          call.user_muted: '#/components/schemas/CallUserMutedEvent'
          channel.created: '#/components/schemas/ChannelCreatedEvent'
          channel.deleted: '#/components/schemas/ChannelDeletedEvent'
          channel.frozen: '#/components/schemas/ChannelFrozenEvent'
          channel.hidden: '#/components/schemas/ChannelHiddenEvent'
          channel.kicked: '#/components/schemas/ChannelKickedEvent'
          channel.truncated: '#/components/schemas/ChannelTruncatedEvent'
          channel.unfrozen: '#/components/schemas/ChannelUnFrozenEvent'
          channel.updated: '#/components/schemas/ChannelUpdatedEvent'
          channel.visible: '#/components/schemas/ChannelVisibleEvent'
          connection.error: '#/components/schemas/ConnectionErrorEvent'
          connection.ok: '#/components/schemas/ConnectedEvent'
          custom: '#/components/schemas/CustomVideoEvent'
          draft.deleted: '#/components/schemas/DraftDeletedEvent'
          draft.updated: '#/components/schemas/DraftUpdatedEvent'
          feeds.activity.added: '#/components/schemas/ActivityAddedEvent'
          feeds.activity.deleted: '#/components/schemas/ActivityDeletedEvent'
          feeds.activity.marked: '#/components/schemas/ActivityMarkEvent'
          feeds.activity.pinned: '#/components/schemas/ActivityPinnedEvent'
          feeds.activity.reaction.added: '#/components/schemas/ActivityReactionAddedEvent'
          feeds.activity.reaction.deleted: '#/components/schemas/ActivityReactionDeletedEvent'
          feeds.activity.reaction.updated: '#/components/schemas/ActivityReactionUpdatedEvent'
          feeds.activity.removed_from_feed: '#/components/schemas/ActivityRemovedFromFeedEvent'
          feeds.activity.unpinned: '#/components/schemas/ActivityUnpinnedEvent'
          feeds.activity.updated: '#/components/schemas/ActivityUpdatedEvent'
          feeds.bookmark.added: '#/components/schemas/BookmarkAddedEvent'
          feeds.bookmark.deleted: '#/components/schemas/BookmarkDeletedEvent'
          feeds.bookmark.updated: '#/components/schemas/BookmarkUpdatedEvent'
          feeds.bookmark_folder.deleted: '#/components/schemas/BookmarkFolderDeletedEvent'
          feeds.bookmark_folder.updated: '#/components/schemas/BookmarkFolderUpdatedEvent'
          feeds.comment.added: '#/components/schemas/CommentAddedEvent'
          feeds.comment.deleted: '#/components/schemas/CommentDeletedEvent'
          feeds.comment.reaction.added: '#/components/schemas/CommentReactionAddedEvent'
          feeds.comment.reaction.deleted: '#/components/schemas/CommentReactionDeletedEvent'
          feeds.comment.reaction.updated: '#/components/schemas/CommentReactionUpdatedEvent'
          feeds.comment.updated: '#/components/schemas/CommentUpdatedEvent'
          feeds.feed.created: '#/components/schemas/FeedCreatedEvent'
          feeds.feed.deleted: '#/components/schemas/FeedDeletedEvent'
          feeds.feed.updated: '#/components/schemas/FeedUpdatedEvent'
          feeds.feed_group.changed: '#/components/schemas/FeedGroupChangedEvent'
          feeds.feed_group.deleted: '#/components/schemas/FeedGroupDeletedEvent'
          feeds.feed_member.added: '#/components/schemas/FeedMemberAddedEvent'
          feeds.feed_member.removed: '#/components/schemas/FeedMemberRemovedEvent'
          feeds.feed_member.updated: '#/components/schemas/FeedMemberUpdatedEvent'
          feeds.follow.created: '#/components/schemas/FollowCreatedEvent'
          feeds.follow.deleted: '#/components/schemas/FollowDeletedEvent'
          feeds.follow.updated: '#/components/schemas/FollowUpdatedEvent'
          feeds.notification_feed.updated: '#/components/schemas/NotificationFeedUpdatedEvent'
          feeds.poll.closed: '#/components/schemas/PollClosedFeedEvent'
          feeds.poll.deleted: '#/components/schemas/PollDeletedFeedEvent'
          feeds.poll.updated: '#/components/schemas/PollUpdatedFeedEvent'
          feeds.poll.vote_casted: '#/components/schemas/PollVoteCastedFeedEvent'
          feeds.poll.vote_changed: '#/components/schemas/PollVoteChangedFeedEvent'
          feeds.poll.vote_removed: '#/components/schemas/PollVoteRemovedFeedEvent'
          health.check: '#/components/schemas/HealthCheckEvent'
          member.added: '#/components/schemas/MemberAddedEvent'
          member.removed: '#/components/schemas/MemberRemovedEvent'
          member.updated: '#/components/schemas/MemberUpdatedEvent'
          message.deleted: '#/components/schemas/MessageDeletedEvent'
          message.new: '#/components/schemas/MessageNewEvent'
          message.pending: '#/components/schemas/PendingMessageEvent'
          message.read: '#/components/schemas/MessageReadEvent'
          message.undeleted: '#/components/schemas/MessageUndeletedEvent'
          message.updated: '#/components/schemas/MessageUpdatedEvent'
          moderation.custom_action: '#/components/schemas/ModerationCustomActionEvent'
          moderation.flagged: '#/components/schemas/ModerationFlaggedEvent'
          moderation.mark_reviewed: '#/components/schemas/ModerationMarkReviewedEvent'
          notification.added_to_channel: '#/components/schemas/NotificationAddedToChannelEvent'
          notification.channel_deleted: '#/components/schemas/NotificationChannelDeletedEvent'
          notification.channel_mutes_updated: '#/components/schemas/NotificationChannelMutesUpdatedEvent'
          notification.channel_truncated: '#/components/schemas/NotificationChannelTruncatedEvent'
          notification.invite_accepted: '#/components/schemas/NotificationInviteAcceptedEvent'
          notification.invite_rejected: '#/components/schemas/NotificationInviteRejectedEvent'
          notification.invited: '#/components/schemas/NotificationInvitedEvent'
          notification.mark_read: '#/components/schemas/NotificationMarkReadEvent'
          notification.mark_unread: '#/components/schemas/NotificationMarkUnreadEvent'
          notification.message_new: '#/components/schemas/NotificationNewMessageEvent'
          notification.mutes_updated: '#/components/schemas/NotificationMutesUpdatedEvent'
          notification.reminder_due: '#/components/schemas/ReminderNotificationEvent'
          notification.removed_from_channel: '#/components/schemas/NotificationRemovedFromChannelEvent'
          notification.thread_message_new: '#/components/schemas/MessageNewEvent'
          poll.closed: '#/components/schemas/PollClosedEvent'
          poll.deleted: '#/components/schemas/PollDeletedEvent'
          poll.updated: '#/components/schemas/PollUpdatedEvent'
          poll.vote_casted: '#/components/schemas/PollVoteCastedEvent'
          poll.vote_changed: '#/components/schemas/PollVoteChangedEvent'
          poll.vote_removed: '#/components/schemas/PollVoteRemovedEvent'
          reaction.deleted: '#/components/schemas/ReactionDeletedEvent'
          reaction.new: '#/components/schemas/ReactionNewEvent'
          reaction.updated: '#/components/schemas/ReactionUpdatedEvent'
          reminder.created: '#/components/schemas/ReminderCreatedEvent'
          reminder.deleted: '#/components/schemas/ReminderDeletedEvent'
          reminder.updated: '#/components/schemas/ReminderUpdatedEvent'
          thread.updated: '#/components/schemas/ThreadUpdatedEvent'
          typing.start: '#/components/schemas/TypingStartEvent'
          typing.stop: '#/components/schemas/TypingStopEvent'
          user.banned: '#/components/schemas/UserBannedEvent'
          user.deactivated: '#/components/schemas/UserDeactivatedEvent'
          user.deleted: '#/components/schemas/UserDeletedEvent'
          user.messages.deleted: '#/components/schemas/UserMessagesDeletedEvent'
          user.muted: '#/components/schemas/UserMutedEvent'
          user.presence.changed: '#/components/schemas/UserPresenceChangedEvent'
          user.reactivated: '#/components/schemas/UserReactivatedEvent'
          user.unbanned: '#/components/schemas/UserUnbannedEvent'
          user.updated: '#/components/schemas/UserUpdatedEvent'
          user.watching.start: '#/components/schemas/UserWatchingStartEvent'
          user.watching.stop: '#/components/schemas/UserWatchingStopEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/AIIndicatorClearEvent'
      - $ref: '#/components/schemas/AIIndicatorStopEvent'
      - $ref: '#/components/schemas/AIIndicatorUpdateEvent'
      - $ref: '#/components/schemas/ActivityAddedEvent'
      - $ref: '#/components/schemas/ActivityDeletedEvent'
      - $ref: '#/components/schemas/ActivityMarkEvent'
      - $ref: '#/components/schemas/ActivityMarkedEvent'
      - $ref: '#/components/schemas/ActivityPinnedEvent'
      - $ref: '#/components/schemas/ActivityReactionAddedEvent'
      - $ref: '#/components/schemas/ActivityReactionDeletedEvent'
      - $ref: '#/components/schemas/ActivityReactionUpdatedEvent'
      - $ref: '#/components/schemas/ActivityRemovedFromFeedEvent'
      - $ref: '#/components/schemas/ActivityUnpinnedEvent'
      - $ref: '#/components/schemas/ActivityUpdatedEvent'
      - $ref: '#/components/schemas/AnyEvent'
      - $ref: '#/components/schemas/AppUpdatedEvent'
      - $ref: '#/components/schemas/BlockedUserEvent'
      - $ref: '#/components/schemas/BookmarkAddedEvent'
      - $ref: '#/components/schemas/BookmarkDeletedEvent'
      - $ref: '#/components/schemas/BookmarkFolderDeletedEvent'
      - $ref: '#/components/schemas/BookmarkFolderUpdatedEvent'
      - $ref: '#/components/schemas/BookmarkUpdatedEvent'
      - $ref: '#/components/schemas/CallAcceptedEvent'
      - $ref: '#/components/schemas/CallClosedCaptionsFailedEvent'
      - $ref: '#/components/schemas/CallClosedCaptionsStartedEvent'
      - $ref: '#/components/schemas/CallClosedCaptionsStoppedEvent'
      - $ref: '#/components/schemas/CallCreatedEvent'
      - $ref: '#/components/schemas/CallDeletedEvent'
      - $ref: '#/components/schemas/CallEndedEvent'
      - $ref: '#/components/schemas/CallFrameRecordingFailedEvent'
      - $ref: '#/components/schemas/CallFrameRecordingFrameReadyEvent'
      - $ref: '#/components/schemas/CallFrameRecordingStartedEvent'
      - $ref: '#/components/schemas/CallFrameRecordingStoppedEvent'
      - $ref: '#/components/schemas/CallHLSBroadcastingFailedEvent'
      - $ref: '#/components/schemas/CallHLSBroadcastingStartedEvent'
      - $ref: '#/components/schemas/CallHLSBroadcastingStoppedEvent'
      - $ref: '#/components/schemas/CallLiveStartedEvent'
      - $ref: '#/components/schemas/CallMemberAddedEvent'
      - $ref: '#/components/schemas/CallMemberRemovedEvent'
      - $ref: '#/components/schemas/CallMemberUpdatedEvent'
      - $ref: '#/components/schemas/CallMemberUpdatedPermissionEvent'
      - $ref: '#/components/schemas/CallMissedEvent'
      - $ref: '#/components/schemas/CallModerationBlurEvent'
      - $ref: '#/components/schemas/CallModerationWarningEvent'
      - $ref: '#/components/schemas/CallNotificationEvent'
      - $ref: '#/components/schemas/CallReactionEvent'
      - $ref: '#/components/schemas/CallRecordingFailedEvent'
      - $ref: '#/components/schemas/CallRecordingReadyEvent'
      - $ref: '#/components/schemas/CallRecordingStartedEvent'
      - $ref: '#/components/schemas/CallRecordingStoppedEvent'
      - $ref: '#/components/schemas/CallRejectedEvent'
      - $ref: '#/components/schemas/CallRingEvent'
      - $ref: '#/components/schemas/CallRtmpBroadcastFailedEvent'
      - $ref: '#/components/schemas/CallRtmpBroadcastStartedEvent'
      - $ref: '#/components/schemas/CallRtmpBroadcastStoppedEvent'
      - $ref: '#/components/schemas/CallSessionEndedEvent'
      - $ref: '#/components/schemas/CallSessionParticipantCountsUpdatedEvent'
      - $ref: '#/components/schemas/CallSessionParticipantJoinedEvent'
      - $ref: '#/components/schemas/CallSessionParticipantLeftEvent'
      - $ref: '#/components/schemas/CallSessionStartedEvent'
      - $ref: '#/components/schemas/CallStatsReportReadyEvent'
      - $ref: '#/components/schemas/CallTranscriptionFailedEvent'
      - $ref: '#/components/schemas/CallTranscriptionReadyEvent'
      - $ref: '#/components/schemas/CallTranscriptionStartedEvent'
      - $ref: '#/components/schemas/CallTranscriptionStoppedEvent'
      - $ref: '#/components/schemas/CallUpdatedEvent'
      - $ref: '#/components/schemas/CallUserFeedbackSubmittedEvent'
      - $ref: '#/components/schemas/CallUserMutedEvent'
      - $ref: '#/components/schemas/ChannelCreatedEvent'
      - $ref: '#/components/schemas/ChannelDeletedEvent'
      - $ref: '#/components/schemas/ChannelFrozenEvent'
      - $ref: '#/components/schemas/ChannelHiddenEvent'
      - $ref: '#/components/schemas/ChannelKickedEvent'
      - $ref: '#/components/schemas/ChannelTruncatedEvent'
      - $ref: '#/components/schemas/ChannelUnFrozenEvent'
      - $ref: '#/components/schemas/ChannelUpdatedEvent'
      - $ref: '#/components/schemas/ChannelVisibleEvent'
      - $ref: '#/components/schemas/ClosedCaptionEvent'
      - $ref: '#/components/schemas/CommentAddedEvent'
      - $ref: '#/components/schemas/CommentDeletedEvent'
      - $ref: '#/components/schemas/CommentReactionAddedEvent'
      - $ref: '#/components/schemas/CommentReactionDeletedEvent'
      - $ref: '#/components/schemas/CommentReactionUpdatedEvent'
      - $ref: '#/components/schemas/CommentUpdatedEvent'
      - $ref: '#/components/schemas/ConnectedEvent'
      - $ref: '#/components/schemas/ConnectionErrorEvent'
      - $ref: '#/components/schemas/CustomVideoEvent'
      - $ref: '#/components/schemas/DraftDeletedEvent'
      - $ref: '#/components/schemas/DraftUpdatedEvent'
      - $ref: '#/components/schemas/FeedCreatedEvent'
      - $ref: '#/components/schemas/FeedDeletedEvent'
      - $ref: '#/components/schemas/FeedGroupChangedEvent'
      - $ref: '#/components/schemas/FeedGroupDeletedEvent'
      - $ref: '#/components/schemas/FeedMemberAddedEvent'
      - $ref: '#/components/schemas/FeedMemberRemovedEvent'
      - $ref: '#/components/schemas/FeedMemberUpdatedEvent'
      - $ref: '#/components/schemas/FeedUpdatedEvent'
      - $ref: '#/components/schemas/FollowCreatedEvent'
      - $ref: '#/components/schemas/FollowDeletedEvent'
      - $ref: '#/components/schemas/FollowUpdatedEvent'
      - $ref: '#/components/schemas/HealthCheckEvent'
      - $ref: '#/components/schemas/KickedUserEvent'
      - $ref: '#/components/schemas/MemberAddedEvent'
      - $ref: '#/components/schemas/MemberRemovedEvent'
      - $ref: '#/components/schemas/MemberUpdatedEvent'
      - $ref: '#/components/schemas/MessageDeletedEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageNewEvent'
      - $ref: '#/components/schemas/MessageReadEvent'
      - $ref: '#/components/schemas/MessageUndeletedEvent'
      - $ref: '#/components/schemas/MessageUpdatedEvent'
      - $ref: '#/components/schemas/ModerationCustomActionEvent'
      - $ref: '#/components/schemas/ModerationFlaggedEvent'
      - $ref: '#/components/schemas/ModerationMarkReviewedEvent'
      - $ref: '#/components/schemas/NotificationAddedToChannelEvent'
      - $ref: '#/components/schemas/NotificationChannelDeletedEvent'
      - $ref: '#/components/schemas/NotificationChannelMutesUpdatedEvent'
      - $ref: '#/components/schemas/NotificationChannelTruncatedEvent'
      - $ref: '#/components/schemas/NotificationFeedUpdatedEvent'
      - $ref: '#/components/schemas/NotificationInviteAcceptedEvent'
      - $ref: '#/components/schemas/NotificationInviteRejectedEvent'
      - $ref: '#/components/schemas/NotificationInvitedEvent'
      - $ref: '#/components/schemas/NotificationMarkReadEvent'
      - $ref: '#/components/schemas/NotificationMarkUnreadEvent'
      - $ref: '#/components/schemas/NotificationMutesUpdatedEvent'
      - $ref: '#/components/schemas/NotificationNewMessageEvent'
      - $ref: '#/components/schemas/NotificationRemovedFromChannelEvent'
      - $ref: '#/components/schemas/PendingMessageEvent'
      - $ref: '#/components/schemas/PermissionRequestEvent'
      - $ref: '#/components/schemas/PollClosedEvent'
      - $ref: '#/components/schemas/PollClosedFeedEvent'
      - $ref: '#/components/schemas/PollDeletedEvent'
      - $ref: '#/components/schemas/PollDeletedFeedEvent'
      - $ref: '#/components/schemas/PollUpdatedEvent'
      - $ref: '#/components/schemas/PollUpdatedFeedEvent'
      - $ref: '#/components/schemas/PollVoteCastedEvent'
      - $ref: '#/components/schemas/PollVoteCastedFeedEvent'
      - $ref: '#/components/schemas/PollVoteChangedEvent'
      - $ref: '#/components/schemas/PollVoteChangedFeedEvent'
      - $ref: '#/components/schemas/PollVoteRemovedEvent'
      - $ref: '#/components/schemas/PollVoteRemovedFeedEvent'
      - $ref: '#/components/schemas/ReactionDeletedEvent'
      - $ref: '#/components/schemas/ReactionNewEvent'
      - $ref: '#/components/schemas/ReactionUpdatedEvent'
      - $ref: '#/components/schemas/ReminderCreatedEvent'
      - $ref: '#/components/schemas/ReminderDeletedEvent'
      - $ref: '#/components/schemas/ReminderNotificationEvent'
      - $ref: '#/components/schemas/ReminderUpdatedEvent'
      - $ref: '#/components/schemas/ThreadUpdatedEvent'
      - $ref: '#/components/schemas/TypingStartEvent'
      - $ref: '#/components/schemas/TypingStopEvent'
      - $ref: '#/components/schemas/UnblockedUserEvent'
      - $ref: '#/components/schemas/UpdatedCallPermissionsEvent'
      - $ref: '#/components/schemas/UserBannedEvent'
      - $ref: '#/components/schemas/UserDeactivatedEvent'
      - $ref: '#/components/schemas/UserDeletedEvent'
      - $ref: '#/components/schemas/UserMessagesDeletedEvent'
      - $ref: '#/components/schemas/UserMutedEvent'
      - $ref: '#/components/schemas/UserPresenceChangedEvent'
      - $ref: '#/components/schemas/UserReactivatedEvent'
      - $ref: '#/components/schemas/UserUnbannedEvent'
      - $ref: '#/components/schemas/UserUpdatedEvent'
      - $ref: '#/components/schemas/UserWatchingStartEvent'
      - $ref: '#/components/schemas/UserWatchingStopEvent'
    WrappedUnreadCountsResponse:
      description: Basic response information
      nullable: true
      properties:
        channel_type:
          items:
            $ref: '#/components/schemas/UnreadCountsChannelType'
          type: array
          x-stream-index: "001.005"
        channels:
          items:
            $ref: '#/components/schemas/UnreadCountsChannel'
          type: array
          x-stream-index: "001.004"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        threads:
          items:
            $ref: '#/components/schemas/UnreadCountsThread'
          type: array
          x-stream-index: "001.006"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "001.001"
        total_unread_count_by_team:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "001.003"
        total_unread_threads_count:
          format: int32
          type: integer
          x-stream-index: "001.002"
      required:
      - total_unread_count
      - total_unread_threads_count
      - channels
      - channel_type
      - threads
      - duration
      title: Response
      type: object
  securitySchemes:
    JWT:
      description: |
        JWT should be always provided when stream-auth-type=jwt.

        Using JWT auth request could be authenticated as user or as server-side.

        When using user authentication permission checking is going to be applied to requests based on the user that is
        performing a request.

        The `authorization` header should be a JWT string signed using the secret attached to the API key used to perform
        requests.

        **WARNING** all client-side official SDK do not ship with token generation; this is to make sure that the API secret is not
        shared with an untrusted party such as a browser or a iOS/Android application. Tokens **must** be generated server-side.
        If you wish, you can configure your application to ignore authentication (see `disable_auth_check`)
        The JWT string must include only the user_id claim and can include any built-in JWT claim such as iat, exp as well.
      in: header
      name: Authorization
      type: apiKey
    api_key:
      description: Application API key should be always set in order to authenticate
        the request.
      in: query
      name: api_key
      type: apiKey
    stream-auth-type:
      description: |-
        Stream-Auth-Type should be always set in order to authenticate the request. Possible
        values: `jwt` or `anonymous`.

        `jwt` allows you to authenticate as a user. With this auth type you should also provide valid JWT in Authorization
        header.

        `anonymous` allows you to authenticate as anonymous user. Please note that most advanced features are not available
        to anonymous users.
      in: header
      name: Stream-Auth-Type
      type: apiKey
info:
  title: Stream API
  version: v196.16.1
openapi: 3.0.3
paths:
  /api/v2/app:
    get:
      description: |
        This Method returns the application settings
      operationId: GetApp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get App Settings
      tags:
      - product:common
  /api/v2/blocklists:
    get:
      description: |
        Returns all available block lists
      operationId: ListBlockLists
      parameters:
      - in: query
        name: team
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List block lists
      tags:
      - product:common
    post:
      description: |
        Creates a new application blocklist, once created the blocklist can be used by any channel type
      operationId: CreateBlockList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlockListRequest'
        description: Block list
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create block list
      tags:
      - product:common
  /api/v2/blocklists/{name}:
    delete:
      description: |
        Deletes previously created application blocklist
      operationId: DeleteBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete block list
      tags:
      - product:common
    put:
      description: |
        Updates contents of the block list
      operationId: UpdateBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Block list name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockListRequest'
        description: Update block list
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update block list
      tags:
      - product:common
  /api/v2/chat/channels:
    post:
      description: |
        Query channels with filter query
      operationId: QueryChannels
      parameters:
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "011.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryChannelsRequest'
        description: Query Channels Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryChannelsResponse'
          description: Channels list
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query channels
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}:
    delete:
      description: |
        Deletes channel

        Sends events:
        - channel.deleted
        - channel.deleted
      operationId: DeleteChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: hard_delete
        schema:
          type: boolean
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete channel
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the channel

        Sends events:
        - channel.updated
        - channel.updated
      operationId: UpdateChannelPartial
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelPartialRequest'
        description: UpdateChannelPartialRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update channel
      tags:
      - product:chat
    post:
      description: |
        Change channel data

        Sends events:
        - channel.updated
        - member.added
        - member.removed
        - member.updated
        - message.new
        - channel.updated
        - member.added
        - member.removed
        - member.updated
        - message.new
      operationId: UpdateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 013.002.001
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 013.002.002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChannelRequest'
        description: Channel update request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/draft:
    delete:
      description: |
        Deletes a draft

        Sends events:
        - draft.deleted
      operationId: DeleteDraft
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: parent_id
        schema:
          description: Parent message ID
          title: string
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete draft
      tags:
      - product:chat
    get:
      description: |
        Get a draft
      operationId: GetDraft
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: parent_id
        schema:
          description: Parent message ID
          title: string
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDraftResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get draft
      tags:
      - product:chat
    post:
      description: |
        Creates a draft

        Sends events:
        - draft.updated
      operationId: CreateDraft
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDraftRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDraftResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a draft
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/event:
    post:
      description: |
        Sends event to the channel
      operationId: SendEvent
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEventRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send event
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/file:
    delete:
      description: |
        Deletes previously uploaded file
      operationId: DeleteChannelFile
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of file
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: File ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete file
      tags:
      - product:chat
    post:
      description: |
        Uploads file
      operationId: UploadChannelFile
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadChannelFileRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadChannelFileResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload file
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/hide:
    post:
      description: |
        Marks channel as hidden for current user

        Sends events:
        - channel.hidden
        - channel.hidden
      operationId: HideChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HideChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HideChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Hide channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/image:
    delete:
      description: |
        Deletes previously uploaded image
      operationId: DeleteChannelImage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of file
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: File ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete image
      tags:
      - product:chat
    post:
      description: |
        Uploads image
      operationId: UploadChannelImage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 001.001.001
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: 001.001.002
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload image
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/member:
    patch:
      description: |2+

      operationId: UpdateMemberPartial
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMemberPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMemberPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially channel member update
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/message:
    post:
      description: |
        Sends new message to the specified channel

        Sends events:
        - message.new
        - message.updated
        - message.new
        - message.updated
      operationId: SendMessage
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "009.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "009.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send new message
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/messages:
    get:
      description: |
        Returns list messages found by IDs
      operationId: GetManyMessages
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: ids
        required: true
        schema:
          description: List of comma-separated IDs
          items:
            type: string
          maximum: 50
          minimum: 1
          title: IDs
          type: array
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetManyMessagesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get many messages
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/query:
    post:
      description: |
        This Method creates a channel or returns an existing one with matching attributes

        Sends events:
        - channel.created
        - member.added
        - member.removed
        - member.updated
        - user.watching.start
      operationId: GetOrCreateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID (maximum length of 64 characters)
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "012.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelGetOrCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/read:
    post:
      description: |
        Marks channel as read up to the specific message

        Sends events:
        - message.read
        - message.read
      operationId: MarkRead
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkReadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkReadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark read
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/show:
    post:
      description: |
        Shows previously hidden channel

        Sends events:
        - channel.visible
        - channel.visible
      operationId: ShowChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type to interact with
          title: Channel type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Channel ID to interact with
          title: Channel ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowChannelResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Show channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/stop-watching:
    post:
      description: |
        Call this Method to stop receiving channel events

        Sends events:
        - user.watching.stop
        - user.watching.stop
      operationId: StopWatchingChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "001.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelStopWatchingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop watching channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/truncate:
    post:
      description: |
        Truncates messages from a channel. Can be applied to the entire channel or scoped to specific members.

        Sends events:
        - channel.truncated
        - channel.truncated
      operationId: TruncateChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TruncateChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TruncateChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Truncate channel
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/{id}/unread:
    post:
      description: |
        Marks channel as unread from a specific message
      operationId: MarkUnread
      parameters:
      - in: path
        name: type
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkUnreadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark unread
      tags:
      - product:chat
  /api/v2/chat/channels/{type}/query:
    post:
      description: |
        This Method creates a channel or returns an existing one with matching attributes

        Sends events:
        - channel.created
        - member.added
        - member.removed
        - member.updated
        - user.watching.start
      operationId: GetOrCreateDistinctChannel
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: Channel type
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "012.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelGetOrCreateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelStateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create channel
      tags:
      - product:chat
  /api/v2/chat/channels/delete:
    post:
      description: |
        Allows to delete several channels at once asynchronously

        Sends events:
        - channel.deleted
        - channel.deleted
      operationId: DeleteChannels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChannelsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteChannelsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deletes channels asynchronously
      tags:
      - product:chat
  /api/v2/chat/channels/read:
    post:
      description: |
        Marks channels as read up to the specific message. If no channels is given, mark all channel as read

        Sends events:
        - message.read
        - message.read
      operationId: MarkChannelsRead
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkChannelsReadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarkReadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark channels as read
      tags:
      - product:chat
  /api/v2/chat/drafts/query:
    post:
      description: |
        Queries draft messages for a user
      operationId: QueryDrafts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryDraftsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryDraftsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query draft messages
      tags:
      - product:chat
  /api/v2/chat/members:
    get:
      description: |
        Find and filter channel members
      operationId: QueryMembers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMembersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query members
      tags:
      - product:chat
  /api/v2/chat/messages/{id}:
    delete:
      description: |
        Deletes message

        Sends events:
        - message.deleted
        - message.deleted
      operationId: DeleteMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard
        schema:
          description: Delete all message reactions and replies as well
          title: Hard
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: deleted_by
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: delete_for_me
        schema:
          description: Delete the message only for the user making the request
          title: Delete for me
          type: boolean
          writeOnly: true
          x-stream-index: "004"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete message
      tags:
      - product:chat
    get:
      description: |
        Returns message by ID
      operationId: GetMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: ID of the message
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get message
      tags:
      - product:chat
    post:
      description: |
        Updates message with new data

        Sends events:
        - message.updated
        - message.updated
      operationId: UpdateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "004.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update message
      tags:
      - product:chat
    put:
      description: |
        Updates certain fields of the message

        Sends events:
        - message.updated
        - message.updated
      operationId: UpdateMessagePartial
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMessagePartialRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMessagePartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially message update
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/action:
    post:
      description: |
        Executes message command action with given parameters

        Sends events:
        - message.new
        - message.new
      operationId: RunMessageAction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessageActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Run message command action
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/reaction:
    post:
      description: |
        Sends reaction to specified message

        Sends events:
        - reaction.new
        - reaction.updated
      operationId: SendReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to send reaction for
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendReactionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send reaction
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/reaction/{type}:
    delete:
      description: |
        Removes user reaction from the message

        Sends events:
        - reaction.deleted
      operationId: DeleteReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID to remove reaction from
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          description: Reaction type to remove
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReactionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete reaction
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/reactions:
    get:
      description: |
        Returns list of reactions of specific message
      operationId: GetReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: limit
        schema:
          description: Number of records to return
          format: int32
          title: Limit
          type: integer
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: offset
        schema:
          description: Number of records to offset
          format: int32
          title: Offset
          type: integer
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReactionsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get reactions
      tags:
      - product:chat
    post:
      description: |
        Get reactions on a message
      operationId: QueryReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      tags:
      - product:chat
  /api/v2/chat/messages/{id}/translate:
    post:
      description: |
        Translates message to a given language using automated translation software

        Sends events:
        - message.updated
        - message.updated
      operationId: TranslateMessage
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Message ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TranslateMessageRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Translate message
      tags:
      - product:chat
  /api/v2/chat/messages/{message_id}/polls/{poll_id}/vote:
    post:
      description: |
        Cast a vote on a poll

        Sends events:
        - feeds.poll.vote_casted
        - feeds.poll.vote_changed
        - feeds.poll.vote_removed
        - poll.vote_casted
        - poll.vote_changed
        - poll.vote_removed
      operationId: CastPollVote
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastPollVoteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Cast vote
      tags:
      - product:chat
  /api/v2/chat/messages/{message_id}/polls/{poll_id}/vote/{vote_id}:
    delete:
      description: |
        Delete a vote from a poll

        Sends events:
        - feeds.poll.vote_removed
        - poll.vote_removed
      operationId: DeletePollVote
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "004"
      - in: path
        name: vote_id
        required: true
        schema:
          description: Vote ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "005"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete vote
      tags:
      - product:chat
  /api/v2/chat/messages/{message_id}/reminders:
    delete:
      description: |
        Deletes a user's created reminder

        Sends events:
        - reminder.deleted
      operationId: DeleteReminder
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteReminderResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete reminder
      tags:
      - product:chat
    patch:
      description: |
        Updates an existing reminder

        Sends events:
        - reminder.updated
      operationId: UpdateReminder
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReminderRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReminderResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Updates Reminder
      tags:
      - product:chat
    post:
      description: |
        Creates a new reminder

        Sends events:
        - reminder.created
      operationId: CreateReminder
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReminderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReminderResponseData'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create reminder
      tags:
      - product:chat
  /api/v2/chat/messages/{parent_id}/replies:
    get:
      description: |
        Returns replies (thread) of the message
      operationId: GetReplies
      parameters:
      - in: path
        name: parent_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: sort
        schema:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: limit
        schema:
          description: 'The maximum number of messages to return (max limit '
          format: int32
          minimum: 0
          title: Limit
          type: integer
          x-stream-index: "003.001"
      - in: query
        name: offset
        schema:
          description: The offset to start from
          format: int32
          title: Offset
          type: integer
          x-stream-index: "003.002"
      - in: query
        name: id_gte
        schema:
          description: The ID of the message to get messages with a timestamp greater
            than or equal to
          title: IDGTE
          type: string
          x-stream-index: "003.003"
      - in: query
        name: id_gt
        schema:
          description: The ID of the message to get messages with a timestamp greater
            than
          title: IDGT
          type: string
          x-stream-index: "003.004"
      - in: query
        name: id_lte
        schema:
          description: The ID of the message to get messages with a timestamp smaller
            than or equal to
          title: IDLTE
          type: string
          x-stream-index: "003.005"
      - in: query
        name: id_lt
        schema:
          description: The ID of the message to get messages with a timestamp smaller
            than
          title: IDLT
          type: string
          x-stream-index: "003.006"
      - in: query
        name: created_at_after_or_equal
        schema:
          description: The timestamp to get messages with a created_at timestamp greater
            than or equal to
          format: date-time
          title: Created_at after or equal
          type: number
          x-stream-index: "003.007"
      - in: query
        name: created_at_after
        schema:
          description: The timestamp to get messages with a created_at timestamp greater
            than
          format: date-time
          title: Created_at after
          type: number
          x-stream-index: "003.008"
      - in: query
        name: created_at_before_or_equal
        schema:
          description: The timestamp to get messages with a created_at timestamp smaller
            than or equal to
          format: date-time
          title: Created_at after before or equal
          type: number
          x-stream-index: "003.009"
      - in: query
        name: created_at_before
        schema:
          description: The timestamp to get messages with a created_at timestamp smaller
            than
          format: date-time
          title: Created_at after before
          type: number
          x-stream-index: "003.010"
      - in: query
        name: id_around
        schema:
          description: The result will be a set of messages, that are both older and
            newer than the message with the provided ID, and the message with the
            ID provided will be in the middle of the set
          title: Id around
          type: string
          x-stream-index: "003.011"
      - in: query
        name: created_at_around
        schema:
          description: The result will be a set of messages, that are both older and
            newer than the created_at timestamp provided, distributed evenly around
            the timestamp
          format: date-time
          title: Created_at around
          type: number
          x-stream-index: "003.012"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRepliesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get replies
      tags:
      - product:chat
  /api/v2/chat/moderation/flags/message:
    get:
      description: |
        Find and filter message flags
      operationId: QueryMessageFlags
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMessageFlagsPayload'
              description: JSON object with query message flags payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMessageFlagsResponse'
          description: QueryMessageFlagsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Message Flags
      tags:
      - product:chat
  /api/v2/chat/moderation/mute/channel:
    post:
      description: |
        Mutes channel for user

        Sends events:
        - channel.muted
        - channel.muted
      operationId: MuteChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteChannelResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute channel
      tags:
      - product:chat
  /api/v2/chat/moderation/unmute/channel:
    post:
      description: |
        Unmutes channel for user

        Sends events:
        - channel.unmuted
        - channel.unmuted
      operationId: UnmuteChannel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmuteChannelRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmuteResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unmute channel
      tags:
      - product:chat
  /api/v2/chat/query_banned_users:
    get:
      description: |
        Find and filter channel scoped or global user bans
      operationId: QueryBannedUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBannedUsersPayload'
              description: JSON object with query user bans payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBannedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Banned Users
      tags:
      - product:chat
  /api/v2/chat/reminders/query:
    post:
      description: |
        Queries reminders
      operationId: QueryReminders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryRemindersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryRemindersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query reminders
      tags:
      - product:chat
  /api/v2/chat/search:
    get:
      description: |
        Search messages across channels
      operationId: Search
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchPayload'
              description: JSON object with search payload
              title: Payload
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Search messages
      tags:
      - product:chat
  /api/v2/chat/sync:
    post:
      description: |
        Returns all events happened since client disconnect in specified channels
      operationId: Sync
      parameters:
      - in: query
        name: with_inaccessible_cids
        schema:
          description: If set to true this will add 'inaccessible_cids' to response
            type
          title: With inaccessible CIDs
          type: boolean
          x-stream-index: "003"
      - in: query
        name: watch
        schema:
          description: If set to true this will start watching requested and newly
            added channels that user has access to. If error occurred with this option
            enabled and it is not an input error - channels will still be watched.
          title: Watch synced channels
          type: boolean
          x-stream-index: "004"
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "006.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyncRequest'
        description: SyncRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncResponse'
          description: SyncResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Sync
      tags:
      - product:chat
  /api/v2/chat/threads:
    post:
      description: |
        Returns the list of threads for specific user
      operationId: QueryThreads
      parameters:
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryThreadsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryThreadsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Threads
      tags:
      - product:chat
  /api/v2/chat/threads/{message_id}:
    get:
      description: |
        Return a specific thread
      operationId: GetThread
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: watch
        schema:
          description: Start watching the channel this thread belongs to
          title: Watch
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: connection_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: reply_limit
        schema:
          description: Limit the number of replies returned
          format: int32
          minimum: 0
          title: Reply limit
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: participant_limit
        schema:
          description: Limit the number of participants returned
          format: int32
          maximum: 100
          minimum: 0
          title: Participant limit
          type: integer
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: member_limit
        schema:
          description: Limit the number of members returned per thread channel
          format: int32
          maximum: 100
          minimum: 0
          title: Member limit
          type: integer
          writeOnly: true
          x-stream-index: "006"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetThreadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Thread
      tags:
      - product:chat
    patch:
      description: |
        Updates certain fields of the thread

        Sends events:
        - thread.updated
        - thread.updated
      operationId: UpdateThreadPartial
      parameters:
      - in: path
        name: message_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateThreadPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateThreadPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update thread
      tags:
      - product:chat
  /api/v2/chat/unread:
    get:
      description: |
        Fetch unread counts for a single user
      operationId: UnreadCounts
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WrappedUnreadCountsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unread counts
      tags:
      - product:chat
  /api/v2/devices:
    delete:
      description: |
        Deletes one device
      operationId: DeleteDevice
      parameters:
      - in: query
        name: id
        required: true
        schema:
          description: Device ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete device
      tags:
      - product:common
    get:
      description: |
        Returns all available devices
      operationId: ListDevices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: ListDevicesResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List devices
      tags:
      - product:common
    post:
      description: |
        Adds a new device to a user, if the same device already exists the call will have no effect
      operationId: CreateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        description: CreateDeviceRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create device
      tags:
      - product:common
  /api/v2/feeds/activities:
    post:
      description: |
        Create a new activity or update an existing one
      operationId: AddActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddActivityRequest'
        description: Activity Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddActivityResponse'
          description: Add Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add a single activity
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/bookmarks:
    delete:
      description: |
        Deletes a bookmark from an activity
      operationId: DeleteBookmark
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: folder_id
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBookmarkResponse'
          description: Delete Bookmark Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a bookmark
      tags:
      - product:feeds
    patch:
      description: |
        Updates a bookmark for an activity
      operationId: UpdateBookmark
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          description: ID of the activity
          maxLength: 255
          title: Activity ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookmarkRequest'
        description: Update Bookmark Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBookmarkResponse'
          description: Update Bookmark Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update bookmark
      tags:
      - product:feeds
    post:
      description: |
        Adds a bookmark to an activity
      operationId: AddBookmark
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookmarkRequest'
        description: Add Bookmark Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBookmarkResponse'
          description: Add Bookmark Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add bookmark
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/feedback:
    post:
      description: |
        Submit feedback for an activity including options to show less, hide, report, or mute the user
      operationId: ActivityFeedback
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityFeedbackRequest'
        description: Activity Feedback Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityFeedbackResponse'
          description: Activity Feedback Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Provide feedback on an activity
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/polls/{poll_id}/vote:
    post:
      description: |
        Cast a vote on a poll

        Sends events:
        - feeds.poll.vote_casted
        - feeds.poll.vote_changed
        - feeds.poll.vote_removed
        - poll.vote_casted
        - poll.vote_changed
        - poll.vote_removed
      operationId: CastPollVote
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastPollVoteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Cast vote
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/polls/{poll_id}/vote/{vote_id}:
    delete:
      description: |
        Delete a vote from a poll

        Sends events:
        - feeds.poll.vote_removed
        - poll.vote_removed
      operationId: DeletePollVote
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "004"
      - in: path
        name: vote_id
        required: true
        schema:
          description: Vote ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "005"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete vote
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/reactions:
    post:
      description: |
        Adds a reaction to an activity
      operationId: AddActivityReaction
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddReactionRequest'
        description: Add Reaction Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddReactionResponse'
          description: Add Reaction Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add reaction
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/reactions/{type}:
    delete:
      description: |
        Removes a reaction from an activity
      operationId: DeleteActivityReaction
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityReactionResponse'
          description: Delete Activity Reaction Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Remove reaction
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/reactions/query:
    post:
      description: |
        Query activity reactions
      operationId: QueryActivityReactions
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryActivityReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryActivityReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query activity reactions
      tags:
      - product:feeds
  /api/v2/feeds/activities/{id}:
    delete:
      description: |
        Delete a single activity by its ID
      operationId: DeleteActivity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard_delete
        schema:
          description: Whether to permanently delete the activity instead of soft
            delete
          title: boolean
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityResponse'
          description: Delete Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a single activity
      tags:
      - product:feeds
    get:
      description: |
        Returns activity by ID
      operationId: GetActivity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityResponse'
          description: Get Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get activity
      tags:
      - product:feeds
    patch:
      description: |
        Updates certain fields of the activity

        Sends events:
        - feeds.activity.updated
      operationId: UpdateActivityPartial
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially activity update
      tags:
      - product:feeds
    put:
      description: |
        Replaces an activity with the provided data

        Sends events:
        - feeds.activity.updated
      operationId: UpdateActivity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Full activity update
      tags:
      - product:feeds
  /api/v2/feeds/activities/batch:
    post:
      description: |
        Create new activities or update existing ones in a batch operation
      operationId: UpsertActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertActivitiesRequest'
        description: Upsert Activities Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertActivitiesResponse'
          description: Upsert Activities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert multiple activities
      tags:
      - product:feeds
  /api/v2/feeds/activities/delete:
    post:
      description: |
        Delete one or more activities by their IDs
      operationId: DeleteActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActivitiesRequest'
        description: Delete Activities Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivitiesResponse'
          description: Delete Activities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Remove multiple activities
      tags:
      - product:feeds
  /api/v2/feeds/activities/query:
    post:
      description: |
        Query activities based on filters with pagination and sorting options
      operationId: QueryActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryActivitiesRequest'
        description: Query Activities Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryActivitiesResponse'
          description: Query Activities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query activities
      tags:
      - product:feeds
  /api/v2/feeds/bookmark_folders/{folder_id}:
    delete:
      description: |
        Delete a bookmark folder by its ID
      operationId: DeleteBookmarkFolder
      parameters:
      - in: path
        name: folder_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBookmarkFolderResponse'
          description: Delete Bookmark Folder Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a bookmark folder
      tags:
      - product:feeds
    patch:
      description: |
        Update a bookmark folder by its ID
      operationId: UpdateBookmarkFolder
      parameters:
      - in: path
        name: folder_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookmarkFolderRequest'
        description: Update Bookmark Folder Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBookmarkFolderResponse'
          description: Update Bookmark Folder Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a bookmark folder
      tags:
      - product:feeds
  /api/v2/feeds/bookmark_folders/query:
    post:
      description: |
        Query bookmark folders with filter query
      operationId: QueryBookmarkFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBookmarkFoldersRequest'
        description: Query Bookmark Folders Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBookmarkFoldersResponse'
          description: Query Bookmark Folders Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query bookmark folders
      tags:
      - product:feeds
  /api/v2/feeds/bookmarks/query:
    post:
      description: |
        Query bookmarks with filter query
      operationId: QueryBookmarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBookmarksRequest'
        description: Query Bookmarks Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBookmarksResponse'
          description: Query Bookmarks Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query bookmarks
      tags:
      - product:feeds
  /api/v2/feeds/comments:
    get:
      description: |
        Retrieve a threaded list of comments for a specific object (e.g., activity), with configurable depth, sorting, and pagination
      operationId: GetComments
      parameters:
      - in: query
        name: object_id
        required: true
        schema:
          description: ID of the object to get comments for
          title: Object ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: object_type
        required: true
        schema:
          description: Type of the object to get comments for
          enum:
          - activity
          title: Object Type
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: depth
        schema:
          description: Maximum nested depth to return (0 = only first level)
          format: int32
          maximum: 5
          minimum: 0
          title: Max Depth
          type: integer
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: sort
        schema:
          description: Sort order for the comments
          enum:
          - first
          - last
          - top
          - best
          - controversial
          title: Sort Order
          type: string
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: replies_limit
        schema:
          format: int32
          maximum: 20
          minimum: 0
          type: integer
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: limit
        schema:
          description: Max number of top‑level comments to return
          format: int32
          maximum: 100
          minimum: 0
          title: Root Limit
          type: integer
          writeOnly: true
          x-stream-index: "006.001"
      - in: query
        name: prev
        schema:
          type: string
          writeOnly: true
          x-stream-index: "006.002"
      - in: query
        name: next
        schema:
          type: string
          writeOnly: true
          x-stream-index: "006.003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentsResponse'
          description: Get  Comments Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get comments for an object
      tags:
      - product:feeds
    post:
      description: |
        Adds a comment to an object (e.g., activity) or a reply to an existing comment, and broadcasts appropriate events
      operationId: AddComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentRequest'
        description: Add Comment Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentResponse'
          description: Add Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add a comment or reply
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}:
    delete:
      description: |
        Deletes a comment from an object (e.g., activity) and broadcasts appropriate events
      operationId: DeleteComment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard_delete
        schema:
          description: Whether to permanently delete the comment instead of soft delete
          title: Hard Delete
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCommentResponse'
          description: Delete Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a comment
      tags:
      - product:feeds
    get:
      description: |
        Get a comment by ID
      operationId: GetComment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentResponse'
          description: Get Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get comment
      tags:
      - product:feeds
    patch:
      description: |
        Updates a comment on an object (e.g., activity) and broadcasts appropriate events
      operationId: UpdateComment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
        description: Update Comment Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCommentResponse'
          description: Update Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a comment
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/reactions:
    post:
      description: |
        Adds a reaction to a comment
      operationId: AddCommentReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentReactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentReactionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add comment reaction
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/reactions/{type}:
    delete:
      description: |
        Deletes a reaction from a comment
      operationId: DeleteCommentReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCommentReactionResponse'
          description: Delete Comment Reaction Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete comment reaction
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/reactions/query:
    post:
      description: |
        Query comment reactions
      operationId: QueryCommentReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCommentReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCommentReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query comment reactions
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/replies:
    get:
      description: |
        Retrieve a threaded list of replies for a single comment, with configurable depth, sorting, and pagination
      operationId: GetCommentReplies
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: depth
        schema:
          description: Maximum nested depth to return (0 = unlimited)
          format: int32
          maximum: 5
          minimum: 0
          title: Max Depth
          type: integer
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: sort
        schema:
          description: first (oldest), last (newest) or top
          enum:
          - first
          - last
          - top
          - best
          - controversial
          title: Sort Order
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: replies_limit
        schema:
          description: Max number of replies to return
          format: int32
          minimum: 0
          title: Replies Limit
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: limit
        schema:
          description: Max number of direct replies to return
          format: int32
          maximum: 100
          minimum: 0
          title: Reply Limit
          type: integer
          writeOnly: true
          x-stream-index: "005.001"
      - in: query
        name: prev
        schema:
          type: string
          writeOnly: true
          x-stream-index: "005.002"
      - in: query
        name: next
        schema:
          type: string
          writeOnly: true
          x-stream-index: "005.003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentRepliesResponse'
          description: Get Comment Replies Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get replies for a comment
      tags:
      - product:feeds
  /api/v2/feeds/comments/batch:
    post:
      description: |
        Adds multiple comments in a single request. Each comment must specify the object type and ID.
      operationId: AddCommentsBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentsBatchRequest'
        description: Add Comments Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentsBatchResponse'
          description: Add Comments Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add multiple comments in a batch
      tags:
      - product:feeds
  /api/v2/feeds/comments/query:
    post:
      description: |
        Query comments using MongoDB-style filters with pagination and sorting options
      operationId: QueryComments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCommentsRequest'
        description: Query Comments Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCommentsResponse'
          description: Query Comments Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query comments
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}:
    delete:
      description: |
        Delete a single feed by its ID
      operationId: DeleteFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: hard_delete
        schema:
          description: Whether to permanently delete the feed instead of soft delete
          title: boolean
          type: boolean
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeedResponse'
          description: Delete Feed Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a single feed
      tags:
      - product:feeds
    post:
      description: |
        Create a single feed for a given feed group
      operationId: GetOrCreateFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: connection_id
        schema:
          description: Websocket connection ID to interact with. You can pass it as
            Body or URL parameter
          title: Connection ID
          type: string
          x-stream-index: "015.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateFeedRequest'
        description: ClientRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrCreateFeedResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a new feed
      tags:
      - product:feeds
    put:
      description: |
        Update an existing feed
      operationId: UpdateFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedRequest'
        description: Update Feed Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedResponse'
          description: Update Feed Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a feed
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/activities/{activity_id}/pin:
    delete:
      description: |
        Unpin an activity from a feed. This removes the pin, so the activity will no longer be displayed at the top of the feed.
      operationId: UnpinActivity
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpinActivityResponse'
          description: Unpin Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unpin an activity from a feed
      tags:
      - product:feeds
    post:
      description: |
        Pin an activity to a feed. Pinned activities are typically displayed at the top of a feed.
      operationId: PinActivity
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinActivityRequest'
        description: Pin Activity Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinActivityResponse'
          description: Pin Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Pin an activity to a feed
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/activities/mark/batch:
    post:
      description: |
        Mark activities as read/seen/watched. Can mark by timestamp (seen), activity IDs (read), or all as read.
      operationId: MarkActivity
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkActivityRequest'
        description: Mark Activity Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark activities as read/seen/watched
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members:
    patch:
      description: |
        Add, remove, or set members for a feed
      operationId: UpdateFeedMembers
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedMembersRequest'
        description: Update Feed Members Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedMembersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update feed members
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members/accept:
    post:
      description: |
        Accepts a pending feed member request
      operationId: AcceptFeedMemberInvite
      parameters:
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptFeedMemberInviteRequest'
        description: Accept Feed Member Invite Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptFeedMemberInviteResponse'
          description: Accept Feed Member Invite Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Accept a feed member request
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members/query:
    post:
      description: |
        Query feed members based on filters with pagination and sorting options
      operationId: QueryFeedMembers
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFeedMembersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFeedMembersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query feed members
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members/reject:
    post:
      description: |
        Rejects a pending feed member request
      operationId: RejectFeedMemberInvite
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectFeedMemberInviteRequest'
        description: Reject Feed Member Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectFeedMemberInviteResponse'
          description: Reject Feed Member Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reject an invite to become a feed member
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/watch:
    delete:
      description: |
        Call this Method to stop receiving feed events
      operationId: StopWatchingFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "001.003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop watching feed
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/follow_suggestions:
    get:
      description: |
        Get follow suggestions for a feed group
      operationId: GetFollowSuggestions
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          description: The ID of the feed group to get suggestions for
          maxLength: 255
          title: Feed Group ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: limit
        schema:
          description: Maximum number of suggestions to return
          format: int32
          maximum: 100
          minimum: 1
          title: Limit
          type: integer
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFollowSuggestionsResponse'
          description: Follow Suggestions Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get follow suggestions
      tags:
      - product:feeds
  /api/v2/feeds/feeds/batch:
    post:
      description: |
        Create multiple feeds at once for a given feed group
      operationId: CreateFeedsBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedsBatchRequest'
        description: Create Feeds Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedsBatchResponse'
          description: Create Feeds Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create multiple feeds at once
      tags:
      - product:feeds
  /api/v2/feeds/feeds/query:
    post:
      description: |
        Query feeds with filter query
      operationId: QueryFeeds
      parameters:
      - in: query
        name: connection_id
        schema:
          type: string
          x-stream-index: "005.003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFeedsRequest'
        description: Query Feeds Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFeedsResponse'
          description: Query Feeds Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query feeds
      tags:
      - product:feeds
  /api/v2/feeds/follows:
    patch:
      description: |
        Updates a follow's custom data, push preference, and follower role. Source owner can update custom data and push preference. Follower role can only be updated via server-side requests.
      operationId: UpdateFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFollowRequest'
        description: Update Follow Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFollowResponse'
          description: Update Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a follow
      tags:
      - product:feeds
    post:
      description: |
        Creates a follow and broadcasts FollowAddedEvent
      operationId: Follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
        description: Follow Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFollowResponse'
          description: Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a follow
      tags:
      - product:feeds
  /api/v2/feeds/follows/{source}/{target}:
    delete:
      description: |
        Removes a follow and broadcasts FollowRemovedEvent
      operationId: Unfollow
      parameters:
      - in: path
        name: source
        required: true
        schema:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: target
        required: true
        schema:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnfollowResponse'
          description: Unfollow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unfollow a feed
      tags:
      - product:feeds
  /api/v2/feeds/follows/accept:
    post:
      description: |
        Accepts a pending follow request
      operationId: AcceptFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptFollowRequest'
        description: Accept Follow Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptFollowResponse'
          description: Accept Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Accept a follow request
      tags:
      - product:feeds
  /api/v2/feeds/follows/batch:
    post:
      description: |
        Creates multiple follows at once and broadcasts FollowAddedEvent for each follow
      operationId: FollowBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowBatchRequest'
        description: Follow Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowBatchResponse'
          description: Follow Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create multiple follows at once
      tags:
      - product:feeds
  /api/v2/feeds/follows/query:
    post:
      description: |
        Query follows based on filters with pagination and sorting options
      operationId: QueryFollows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFollowsRequest'
        description: Query Follows Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFollowsResponse'
          description: Query Follows Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query follows
      tags:
      - product:feeds
  /api/v2/feeds/follows/reject:
    post:
      description: |
        Rejects a pending follow request
      operationId: RejectFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectFollowRequest'
        description: Reject Follow Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectFollowResponse'
          description: Reject Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reject a follow request
      tags:
      - product:feeds
  /api/v2/guest:
    post:
      description: |2+

      operationId: CreateGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGuestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGuestResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create Guest
      tags:
      - product:common
  /api/v2/longpoll:
    get:
      description: |
        WebSocket fallback transport endpoint

        Sends events:
        - user.updated
      operationId: LongPoll
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/WSAuthMessage'
              x-stream-index: "001"
        in: query
        name: json
      - in: query
        name: connection_id
        schema:
          maxLength: 36
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Long Poll (Transport)
      tags:
      - product:common
  /api/v2/moderation/ban:
    post:
      description: |
        Ban a user from a channel or the entire app
      operationId: ban
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BanRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BanResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Ban
      tags:
      - product:moderation
  /api/v2/moderation/config:
    post:
      description: |
        Create a new moderation configuration or update an existing one. Configure settings for content filtering, AI analysis, toxicity detection, and other moderation features.
      operationId: upsert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertConfigRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertConfigResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create or update moderation configuration
      tags:
      - product:moderation
  /api/v2/moderation/config/{key}:
    delete:
      description: |
        Delete a specific moderation policy by its name
      operationId: delete_config
      parameters:
      - in: path
        name: key
        required: true
        schema:
          description: Key of the moderation configuration to delete
          title: Key
          type: string
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          description: Team associated with the configuration
          title: Team
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteModerationConfigResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a moderation policy
      tags:
      - product:moderation
    get:
      description: |
        Retrieve a specific moderation configuration by its key and team. This configuration contains settings for various moderation features like toxicity detection, AI analysis, and filtering rules.
      operationId: get_config
      parameters:
      - in: path
        name: key
        required: true
        schema:
          description: Key of the moderation configuration to retrieve
          title: Key
          type: string
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          description: Team associated with the configuration
          title: Team
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get moderation configuration
      tags:
      - product:moderation
  /api/v2/moderation/configs:
    post:
      description: |
        Search and filter moderation configurations across your application. This endpoint is designed for building moderation dashboards and managing multiple configuration sets.
      operationId: query_moderation_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationConfigsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationConfigsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query moderation configurations
      tags:
      - product:moderation
  /api/v2/moderation/flag:
    post:
      description: |
        Flag any type of content (messages, users, channels, activities) for moderation review. Supports custom content types and additional metadata for flagged content.
      operationId: flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Flag content for moderation
      tags:
      - product:moderation
  /api/v2/moderation/mute:
    post:
      description: |
        Mute a user. Mutes are generally not visible to the user you mute, while block is something you notice.
      operationId: mute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteRequest'
        description: MuteRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteResponse'
          description: MuteResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute
      tags:
      - product:moderation
  /api/v2/moderation/review_queue:
    post:
      description: |
        Query review queue items allows you to filter the review queue items. This is used for building a moderation dashboard.
      operationId: query_review_queue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReviewQueueRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryReviewQueueResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query review queue items
      tags:
      - product:moderation
  /api/v2/moderation/submit_action:
    post:
      description: |
        Take action on flagged content, such as marking content as safe, deleting content, banning users, or executing custom moderation actions. Supports various action types with configurable parameters.
      operationId: submit_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitActionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Submit moderation action
      tags:
      - product:moderation
  /api/v2/og:
    get:
      description: |
        Get an OpenGraph attachment for a link
      operationId: GetOG
      parameters:
      - in: query
        name: url
        required: true
        schema:
          description: URL to be scraped
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOGResponse'
          description: Get OG Attachment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get OG
      tags:
      - product:common
  /api/v2/polls:
    post:
      description: |
        Creates a new poll
      operationId: CreatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollRequest'
        description: Create Poll Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll
      tags:
      - product:common
    put:
      description: |
        Updates a poll

        Sends events:
        - feeds.poll.closed
        - feeds.poll.updated
        - poll.closed
        - poll.updated
      operationId: UpdatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll
      tags:
      - product:common
  /api/v2/polls/{poll_id}:
    delete:
      description: |
        Deletes a poll

        Sends events:
        - feeds.poll.deleted
        - poll.deleted
      operationId: DeletePoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll
      tags:
      - product:common
    get:
      description: |
        Retrieves a poll
      operationId: GetPoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll
      tags:
      - product:common
    patch:
      description: |
        Updates a poll partially

        Sends events:
        - feeds.poll.closed
        - feeds.poll.updated
        - poll.closed
        - poll.updated
      operationId: UpdatePollPartial
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partial update poll
      tags:
      - product:common
  /api/v2/polls/{poll_id}/options:
    post:
      description: |
        Creates a poll option

        Sends events:
        - feeds.poll.updated
        - poll.updated
      operationId: CreatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll option
      tags:
      - product:common
    put:
      description: |
        Updates a poll option

        Sends events:
        - feeds.poll.updated
        - poll.updated
      operationId: UpdatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll option
      tags:
      - product:common
  /api/v2/polls/{poll_id}/options/{option_id}:
    delete:
      description: |
        Deletes a poll option

        Sends events:
        - feeds.poll.updated
        - poll.updated
      operationId: DeletePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll option
      tags:
      - product:common
    get:
      description: |
        Retrieves a poll option
      operationId: GetPollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll option
      tags:
      - product:common
  /api/v2/polls/{poll_id}/votes:
    post:
      description: |
        Queries votes
      operationId: QueryPollVotes
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollVotesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVotesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query votes
      tags:
      - product:common
  /api/v2/polls/query:
    post:
      description: |
        Queries polls
      operationId: QueryPolls
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPollsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query polls
      tags:
      - product:common
  /api/v2/push_preferences:
    post:
      description: |
        Upserts the push preferences for a user and or channel member. Set to all, mentions or none
      operationId: UpdatePushNotificationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPushPreferencesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertPushPreferencesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Push notification preferences
      tags:
      - product:common
  /api/v2/uploads/file:
    delete:
      description: |
        Deletes previously uploaded file
      operationId: DeleteFile
      parameters:
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete file
      tags:
      - product:common
    post:
      description: |
        Uploads file
      operationId: UploadFile
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload file
      tags:
      - product:common
  /api/v2/uploads/image:
    delete:
      description: |
        Deletes previously uploaded image
      operationId: DeleteImage
      parameters:
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete image
      tags:
      - product:common
    post:
      description: |
        Uploads image
      operationId: UploadImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload image
      tags:
      - product:common
  /api/v2/users:
    get:
      description: |
        Find and filter users
      operationId: QueryUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUsersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query users
      tags:
      - product:common
    patch:
      description: |
        Updates certain fields of the user

        Sends events:
        - user.presence.changed
        - user.updated
        - user.presence.changed
      operationId: UpdateUsersPartial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update user
      tags:
      - product:common
    post:
      description: |
        Update or create users in bulk

        Sends events:
        - user.updated
      operationId: UpdateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert users
      tags:
      - product:common
  /api/v2/users/block:
    get:
      description: |
        Get list of blocked Users
      operationId: GetBlockedUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get list of blocked Users
      tags:
      - product:common
    post:
      description: |
        Block users
      operationId: BlockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Block user
      tags:
      - product:common
  /api/v2/users/live_locations:
    get:
      description: |
        Retrieves all active live locations for a user
      operationId: GetUserLiveLocations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLocationsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get user live locations
      tags:
      - product:common
    put:
      description: |
        Updates an existing live location with new coordinates or expiration time
      operationId: UpdateLiveLocation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLiveLocationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLocationResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update live location
      tags:
      - product:common
  /api/v2/users/unblock:
    post:
      description: |
        Unblock users
      operationId: UnblockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unblock user
      tags:
      - product:common
  /api/v2/video/call/{type}/{id}:
    get:
      description: |2+

      operationId: GetCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: connection_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: members_limit
        schema:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: ring
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: notify
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "006"
      - in: query
        name: video
        schema:
          type: boolean
          writeOnly: true
          x-stream-index: "007"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallResponse'
          description: GetCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Call
      tags:
      - product:video
    patch:
      description: |2


        Sends events:
        - call.updated
      operationId: UpdateCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCallRequest'
        description: UpdateCallRequest
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCallResponse'
          description: UpdateCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update Call
      tags:
      - product:video
    post:
      description: |
        Gets or creates a new call

        Sends events:
        - call.created
        - call.notification
        - call.ring
      operationId: GetOrCreateCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      - in: query
        name: connection_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "008"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateCallRequest'
        description: GetOrCreateCallRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrCreateCallResponse'
          description: GetOrCreateCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/{session}/recordings/{filename}:
    delete:
      description: |
        Deletes recording
      operationId: DeleteRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: filename
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "004"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRecordingResponse'
          description: DeleteRecordingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/{session}/transcriptions/{filename}:
    delete:
      description: |
        Deletes transcription
      operationId: DeleteTranscription
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: filename
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "004"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteTranscriptionResponse'
          description: DeleteTranscriptionResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete transcription
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/accept:
    post:
      description: |2


        Sends events:
        - call.accepted
      operationId: AcceptCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptCallResponse'
          description: AcceptCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Accept Call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/block:
    post:
      description: |
        Block a user, preventing them from joining the call until they are unblocked.

        Sends events:
        - call.blocked_user
      operationId: BlockUser
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUserRequest'
        description: BlockUserRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUserResponse'
          description: BlockUserResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Block user on a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/delete:
    post:
      description: |2


        Sends events:
        - call.deleted
      operationId: DeleteCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCallRequest'
        description: DeleteCallRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCallResponse'
          description: DeleteCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete Call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/event:
    post:
      description: |
        Sends custom event to the call

        Sends events:
        - custom
      operationId: SendCallEvent
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCallEventRequest'
        description: SendCallEventRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendCallEventResponse'
          description: SendCallEventResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send custom event
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/feedback:
    post:
      description: |2


        Sends events:
        - call.user_feedback_submitted
      operationId: CollectUserFeedback
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectUserFeedbackRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectUserFeedbackResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Collect user feedback
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/go_live:
    post:
      description: |2


        Sends events:
        - call.live_started
      operationId: GoLive
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoLiveRequest'
        description: GoLiveRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoLiveResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Set call as live
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/join:
    post:
      description: |
        Request to join a call
      operationId: JoinCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: connection_id
        schema:
          title: ConnectionID
          type: string
          writeOnly: true
          x-stream-index: "008"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JoinCallRequest'
        description: JoinCallRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinCallResponse'
          description: JoinCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Join call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/kick:
    post:
      description: |
        Kicks a user from the call. Optionally block the user from rejoining by setting block=true.

        Sends events:
        - call.blocked_user
        - call.kicked_user
      operationId: KickUser
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KickUserRequest'
        description: KickUserRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KickUserResponse'
          description: KickUserResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Kick user from a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/mark_ended:
    post:
      description: |2


        Sends events:
        - call.ended
      operationId: EndCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndCallResponse'
          description: EndCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: End call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/members:
    post:
      description: |2


        Sends events:
        - call.member_added
        - call.member_removed
        - call.member_updated
      operationId: UpdateCallMembers
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCallMembersRequest'
        description: UpdateCallMembersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCallMembersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update Call Member
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/mute_users:
    post:
      description: |
        Mutes users in a call
      operationId: MuteUsers
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteUsersRequest'
        description: MuteUsersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteUsersResponse'
          description: MuteUsersResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute users
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/participants:
    post:
      description: |
        Returns a list of participants connected to the call
      operationId: QueryCallParticipants
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: limit
        schema:
          format: int32
          maximum: 100
          type: integer
          x-stream-index: "004"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallParticipantsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallParticipantsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call participants
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/pin:
    post:
      description: |
        Pins a track for all users in the call.
      operationId: VideoPin
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinRequest'
        description: PinRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Pin
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/reaction:
    post:
      description: |
        Sends reaction to the call

        Sends events:
        - call.reaction_new
      operationId: SendVideoReaction
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendReactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendReactionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Send reaction to the call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/recordings:
    get:
      description: |
        Lists recordings
      operationId: ListRecordings
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecordingsResponse'
          description: ListRecordingsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List recordings
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/reject:
    post:
      description: |2


        Sends events:
        - call.rejected
      operationId: RejectCall
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectCallRequest'
        description: RejectCallRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectCallResponse'
          description: RejectCallResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reject Call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/report:
    get:
      description: |2+

      operationId: GetCallReport
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: query
        name: session_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallReportResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get call report
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/request_permission:
    post:
      description: |
        Request permission to perform an action

        Sends events:
        - call.permission_request
      operationId: RequestPermission
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPermissionRequest'
        description: RequestPermissionRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestPermissionResponse'
          description: RequestPermissionResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Request permission
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/rtmp_broadcasts:
    post:
      description: |
        Starts RTMP broadcasts for the provided RTMP destinations
      operationId: StartRTMPBroadcasts
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRTMPBroadcastsRequest'
        description: StartRTMPBroadcastsRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRTMPBroadcastsResponse'
          description: StartRTMPBroadcastsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start RTMP broadcasts
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/rtmp_broadcasts/{name}/stop:
    post:
      description: |
        Stop RTMP broadcasts for the provided RTMP destinations
      operationId: StopRTMPBroadcast
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopRTMPBroadcastsRequest'
        description: StopRTMPBroadcastsRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRTMPBroadcastsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop RTMP broadcasts
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/rtmp_broadcasts/stop:
    post:
      description: |
        Stop all RTMP broadcasts for the provided call
      operationId: StopAllRTMPBroadcasts
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopAllRTMPBroadcastsResponse'
          description: StopAllRTMPBroadcastsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop all RTMP broadcasts for a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_broadcasting:
    post:
      description: |
        Starts HLS broadcasting
      operationId: StartHLSBroadcasting
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartHLSBroadcastingResponse'
          description: StartHLSBroadcastingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start HLS broadcasting
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_closed_captions:
    post:
      description: |
        Starts closed captions
      operationId: StartClosedCaptions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartClosedCaptionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartClosedCaptionsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start closed captions
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_frame_recording:
    post:
      description: |
        Starts frame by frame recording

        Sends events:
        - call.frame_recording_started
      operationId: StartFrameRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartFrameRecordingRequest'
        description: StartFrameRecordingRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartFrameRecordingResponse'
          description: StartFrameRecordingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start frame recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_recording:
    post:
      description: |
        Starts recording

        Sends events:
        - call.recording_started
      operationId: StartRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRecordingRequest'
        description: StartRecordingRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRecordingResponse'
          description: StartRecordingResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/start_transcription:
    post:
      description: |
        Starts transcription
      operationId: StartTranscription
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartTranscriptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartTranscriptionResponse'
          description: StartTranscriptionResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Start transcription
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_broadcasting:
    post:
      description: |
        Stops HLS broadcasting
      operationId: StopHLSBroadcasting
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopHLSBroadcastingResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop HLS broadcasting
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_closed_captions:
    post:
      description: |
        Stops closed captions

        Sends events:
        - call.transcription_stopped
      operationId: StopClosedCaptions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopClosedCaptionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopClosedCaptionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop closed captions
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_frame_recording:
    post:
      description: |
        Stops frame recording

        Sends events:
        - call.frame_recording_stopped
      operationId: StopFrameRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopFrameRecordingResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop frame recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_live:
    post:
      description: |2


        Sends events:
        - call.updated
      operationId: StopLive
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopLiveRequest'
        description: StopLiveRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopLiveResponse'
          description: StopLiveResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Set call as not live
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_recording:
    post:
      description: |
        Stops recording

        Sends events:
        - call.recording_stopped
      operationId: StopRecording
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopRecordingResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop recording
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/stop_transcription:
    post:
      description: |
        Stops transcription

        Sends events:
        - call.transcription_stopped
      operationId: StopTranscription
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StopTranscriptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StopTranscriptionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Stop transcription
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/transcriptions:
    get:
      description: |
        Lists transcriptions
      operationId: ListTranscriptions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          description: The type of call
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          description: Call ID
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTranscriptionsResponse'
          description: ListTranscriptionsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List transcriptions
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/unblock:
    post:
      description: |
        Removes the block for a user on a call. The user will be able to join the call again.

        Sends events:
        - call.unblocked_user
      operationId: UnblockUser
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          title: Type
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockUserRequest'
        description: UnblockUserRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockUserResponse'
          description: UnblockUserResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unblocks user on a call
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/unpin:
    post:
      description: |
        Unpins a track for all users in the call.
      operationId: VideoUnpin
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "001.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnpinRequest'
        description: UnpinRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpinResponse'
          description: UnpinResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unpin
      tags:
      - product:video
  /api/v2/video/call/{type}/{id}/user_permissions:
    post:
      description: |
        Updates user permissions

        Sends events:
        - call.permissions_updated
      operationId: UpdateUserPermissions
      parameters:
      - in: path
        name: type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "005.001"
      - in: path
        name: id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "005.002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserPermissionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUserPermissionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update user permissions
      tags:
      - product:video
  /api/v2/video/call/members:
    post:
      description: |
        Query call members with filter query
      operationId: QueryCallMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallMembersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallMembersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call members
      tags:
      - product:video
  /api/v2/video/call/stats:
    post:
      description: |2+

      operationId: QueryCallStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallStatsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Call Stats
      tags:
      - product:video
  /api/v2/video/call/stats/{call_type}/{call_id}/{session}/participant/{user}/{user_session}/details:
    get:
      description: |2+

      operationId: GetCallSessionParticipantStatsDetails
      parameters:
      - in: path
        name: call_type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: call_id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "004"
      - in: path
        name: user
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "005"
      - in: path
        name: user_session
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "006"
      - in: query
        name: metrics
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "007"
      - in: query
        name: since
        schema:
          type: string
          writeOnly: true
          x-stream-index: "008"
      - in: query
        name: until
        schema:
          type: string
          writeOnly: true
          x-stream-index: "009"
      - in: query
        name: step
        schema:
          format: int32
          maximum: 3600
          minimum: 1
          type: integer
          writeOnly: true
          x-stream-index: "010"
      - in: query
        name: max_points
        schema:
          format: int32
          maximum: 4096
          minimum: 1
          type: integer
          writeOnly: true
          x-stream-index: "011"
      - in: query
        name: track_type
        schema:
          enum:
          - video
          - audio
          - screenshare
          - screenshare_audio
          type: string
          writeOnly: true
          x-stream-index: "012"
      - in: query
        name: remote_user_id
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "013"
      - in: query
        name: remote_user_session_id
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "014"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallSessionParticipantStatsDetailsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get call session participant stats details
      tags:
      - product:video
  /api/v2/video/call/stats/{call_type}/{call_id}/{session}/participants:
    get:
      description: |2+

      operationId: QueryCallSessionParticipantStats
      parameters:
      - in: path
        name: call_type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: call_id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: sort
        schema:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: filter_conditions
        schema:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "006"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallSessionParticipantStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call participant statistics
      tags:
      - product:video
  /api/v2/video/call_stats/{call_type}/{call_id}/{session}/participant/{user}/{user_session}/details:
    get:
      description: |2+

      operationId: GetCallSessionParticipantStatsDetails
      parameters:
      - in: path
        name: call_type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: call_id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "004"
      - in: path
        name: user
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "005"
      - in: path
        name: user_session
        required: true
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "006"
      - in: query
        name: metrics
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "007"
      - in: query
        name: since
        schema:
          type: string
          writeOnly: true
          x-stream-index: "008"
      - in: query
        name: until
        schema:
          type: string
          writeOnly: true
          x-stream-index: "009"
      - in: query
        name: step
        schema:
          format: int32
          maximum: 3600
          minimum: 1
          type: integer
          writeOnly: true
          x-stream-index: "010"
      - in: query
        name: max_points
        schema:
          format: int32
          maximum: 4096
          minimum: 1
          type: integer
          writeOnly: true
          x-stream-index: "011"
      - in: query
        name: track_type
        schema:
          enum:
          - video
          - audio
          - screenshare
          - screenshare_audio
          type: string
          writeOnly: true
          x-stream-index: "012"
      - in: query
        name: remote_user_id
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "013"
      - in: query
        name: remote_user_session_id
        schema:
          maxLength: 256
          type: string
          writeOnly: true
          x-stream-index: "014"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCallSessionParticipantStatsDetailsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get call session participant stats details
      tags:
      - product:video
  /api/v2/video/call_stats/{call_type}/{call_id}/{session}/participants:
    get:
      description: |2+

      operationId: QueryCallSessionParticipantStats
      parameters:
      - in: path
        name: call_type
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: call_id
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: session
        required: true
        schema:
          maxLength: 64
          type: string
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: sort
        schema:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 1
          type: array
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: filter_conditions
        schema:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "006"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallSessionParticipantStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call participant statistics
      tags:
      - product:video
  /api/v2/video/calls:
    post:
      description: |
        Query calls with filter query
      operationId: QueryCalls
      parameters:
      - in: query
        name: connection_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCallsRequest'
        description: QueryCallsRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCallsResponse'
          description: QueryCallsResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query call
      tags:
      - product:video
  /api/v2/video/edges:
    get:
      description: |
        Returns the list of all edges available for video calls.
      operationId: GetEdges
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEdgesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get Edges
      tags:
      - product:video
  /api/v2/video/stats:
    post:
      description: |2+

      operationId: QueryAggregateCallStats
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryAggregateCallStatsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryAggregateCallStatsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query Aggregate call Stats
      tags:
      - product:video
security:
- JWT: []
  api_key: []
  stream-auth-type: []
- api_key: []
  stream-auth-type: []
servers:
- description: Stream API
  url: https://chat.stream-io-api.com
