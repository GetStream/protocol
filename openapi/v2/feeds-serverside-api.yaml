components:
  schemas:
    AIImageConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        ocr_rules:
          items:
            $ref: '#/components/schemas/OCRRule'
          type: array
          x-stream-index: "004"
        rules:
          items:
            $ref: '#/components/schemas/AWSRekognitionRule'
          type: array
          x-stream-index: "003"
      type: object
    AITextConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        profile:
          type: string
          x-stream-index: "003"
        rules:
          items:
            $ref: '#/components/schemas/BodyguardRule'
          type: array
          x-stream-index: "004"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "005"
      type: object
    AIVideoConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AWSRekognitionRule'
          type: array
          x-stream-index: "003"
      type: object
    APIError:
      nullable: true
      properties:
        StatusCode:
          description: Response HTTP status code
          format: int32
          title: Status code
          type: integer
          x-stream-index: "004"
        code:
          description: API error code
          format: int32
          title: Code
          type: integer
          x-stream-index: "001"
        details:
          description: Additional error-specific information
          items:
            type: integer
          title: Details
          type: array
          x-stream-index: "007"
        duration:
          description: Request duration
          title: Duration
          type: string
          x-stream-index: "005"
        exception_fields:
          additionalProperties:
            type: string
          description: Additional error info
          title: Exception fields
          type: object
          x-stream-index: "003"
        message:
          description: Message describing an error
          title: Message
          type: string
          x-stream-index: "002"
        more_info:
          description: URL with additional information
          title: More info
          type: string
          x-stream-index: "006"
        unrecoverable:
          description: Flag that indicates if the error is unrecoverable, requests
            that return unrecoverable errors should not be retried, this error only
            applies to the request that caused it
          title: Unrecoverable
          type: boolean
          x-stream-index: "008"
      required:
      - code
      - message
      - StatusCode
      - duration
      - more_info
      - details
      title: Error response
      type: object
    APNConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "005"
        auth_key:
          type: string
          x-stream-index: "006.001"
        auth_type:
          enum:
          - certificate
          - token
          type: string
          x-stream-index: "001"
        bundle_id:
          type: string
          x-stream-index: "004"
        development:
          type: boolean
          x-stream-index: "002"
        host:
          type: string
          x-stream-index: "003"
        key_id:
          type: string
          x-stream-index: "006.002"
        notification_template:
          type: string
          x-stream-index: "008"
        p12_cert:
          type: string
          x-stream-index: "007.001"
        team_id:
          type: string
          x-stream-index: "006.003"
      type: object
    APNConfigFields:
      properties:
        auth_key:
          type: string
          x-stream-index: "009"
        auth_type:
          type: string
          x-stream-index: "003"
        bundle_id:
          type: string
          x-stream-index: "006"
        development:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        host:
          type: string
          x-stream-index: "005"
        key_id:
          type: string
          x-stream-index: "008"
        notification_template:
          type: string
          x-stream-index: "004"
        p12_cert:
          type: string
          x-stream-index: "010"
        team_id:
          type: string
          x-stream-index: "007"
      required:
      - enabled
      - development
      type: object
    APNS:
      properties:
        body:
          type: string
          x-stream-index: "002"
        content-available:
          format: int32
          type: integer
          x-stream-index: "004"
        data:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        mutable-content:
          format: int32
          type: integer
          x-stream-index: "005"
        sound:
          type: string
          x-stream-index: "003"
        title:
          type: string
          x-stream-index: "001"
      required:
      - title
      - body
      type: object
    AWSRekognitionRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        min_confidence:
          format: float
          maximum: 100
          minimum: 0
          type: number
          x-stream-index: "003"
      required:
      - label
      - action
      - min_confidence
      type: object
    AcceptFeedMemberInviteRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      title: Accept Feed Member Invite Request
      type: object
    AcceptFeedMemberInviteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The feed member after accepting the invite
          title: Feed Member
          x-stream-index: "001"
      required:
      - member
      - duration
      title: Accept Feed Member Invite Response
      type: object
    AcceptFollowRequest:
      nullable: true
      properties:
        follower_role:
          description: Optional role for the follower in the follow relationship
          title: Follower Role
          type: string
          x-stream-index: "003"
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed ID
          type: string
          x-stream-index: "001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed ID
          type: string
          x-stream-index: "002"
      required:
      - source
      - target
      title: Accept Follow Request
      type: object
    AcceptFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The accepted follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Accept Follow Response
      type: object
    Action:
      nullable: true
      properties:
        name:
          type: string
          x-stream-index: "001"
        style:
          type: string
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "004"
        value:
          type: string
          x-stream-index: "005"
      required:
      - name
      - text
      - type
      type: object
    ActionLog:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "002"
        reason:
          type: string
          x-stream-index: "008"
        reporter_type:
          type: string
          x-stream-index: "009"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "014"
        review_queue_item_id:
          type: string
          x-stream-index: "012"
        target_user:
          $ref: '#/components/schemas/User'
          x-stream-index: "013"
        target_user_id:
          type: string
          x-stream-index: "011"
        type:
          type: string
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007"
      required:
      - id
      - created_at
      - type
      - reason
      - reporter_type
      - custom
      - target_user_id
      - review_queue_item_id
      type: object
    ActionLogResponse:
      nullable: true
      properties:
        created_at:
          description: Timestamp when the action was taken
          format: date-time
          title: Created At
          type: number
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          description: Additional metadata about the action
          title: Custom
          type: object
          x-stream-index: "007"
        id:
          description: Unique identifier of the action log
          title: ID
          type: string
          x-stream-index: "001"
        reason:
          description: Reason for the moderation action
          title: Reason
          type: string
          x-stream-index: "006"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Associated review queue item
          title: Review Queue Item
          x-stream-index: "008"
        target_user:
          $ref: '#/components/schemas/UserResponse'
          description: User who was the target of the action
          title: Target User
          x-stream-index: "009"
        target_user_id:
          description: ID of the user who was the target of the action
          title: Target User ID
          type: string
          x-stream-index: "010"
        type:
          description: Type of moderation action
          title: Type
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who performed the action
          title: User
          x-stream-index: "004"
        user_id:
          description: ID of the user who performed the action
          title: User ID
          type: string
          x-stream-index: "005"
      required:
      - id
      - created_at
      - type
      - user_id
      - reason
      - custom
      - target_user_id
      type: object
    ActionSequence:
      properties:
        action:
          type: string
          x-stream-index: "001"
        blur:
          type: boolean
          x-stream-index: "005"
        cooldown_period:
          format: int32
          type: integer
          x-stream-index: "004"
        threshold:
          format: int32
          type: integer
          x-stream-index: "002"
        time_window:
          format: int32
          type: integer
          x-stream-index: "003"
        warning:
          type: boolean
          x-stream-index: "006"
        warning_text:
          type: string
          x-stream-index: "007"
      type: object
    ActivityAddedEvent:
      description: Emitted when an activity is added to a feed.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The activity that was added
          title: Activity
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.added
          description: 'The type of event: "feeds.activity.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the activity
          title: User
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityDeletedEvent:
      description: Emitted when an activity is deleted.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The activity that was updated
          title: Activity
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.deleted
          description: 'The type of event: "feeds.activity.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityFeedbackRequest:
      description: Request to provide feedback on an activity
      nullable: true
      properties:
        hide:
          description: Whether to hide this activity
          title: bool
          type: boolean
          x-stream-index: "003"
        mute_user:
          description: Whether to mute the user who created this activity
          title: bool
          type: boolean
          x-stream-index: "005"
        reason:
          description: Reason for the feedback (optional)
          maxLength: 1000
          title: string
          type: string
          x-stream-index: "006"
        report:
          description: Whether to report this activity
          title: bool
          type: boolean
          x-stream-index: "004"
        show_less:
          description: Whether to show less content like this
          title: bool
          type: boolean
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      title: Activity Feedback Request
      type: object
    ActivityFeedbackResponse:
      description: Response for activity feedback submission
      nullable: true
      properties:
        activity_id:
          description: The ID of the activity that received feedback
          title: string
          type: string
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity_id
      - duration
      title: Activity Feedback Response
      type: object
    ActivityLocation:
      properties:
        lat:
          description: Latitude coordinate
          format: float
          title: Latitude
          type: number
          x-stream-index: "001"
        lng:
          description: Longitude coordinate
          format: float
          title: Longitude
          type: number
          x-stream-index: "002"
      required:
      - lat
      - lng
      title: Activity Location
      type: object
    ActivityMarkEvent:
      description: Emitted when activities are marked as read, seen, or watched.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 006.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 006.001.007
        feed_visibility:
          type: string
          x-stream-index: "006.003"
        fid:
          type: string
          x-stream-index: "006.002"
        mark_all_read:
          description: Whether all activities were marked as read
          title: Mark All Read
          type: boolean
          x-stream-index: "004"
        mark_all_seen:
          description: Whether all activities were marked as seen
          title: Mark All Seen
          type: boolean
          x-stream-index: "005"
        mark_read:
          description: The IDs of activities marked as read
          items:
            type: string
          title: Mark Read
          type: array
          x-stream-index: "001"
        mark_seen:
          description: The IDs of activities marked as seen
          items:
            type: string
          title: Mark Seen
          type: array
          x-stream-index: "002"
        mark_watched:
          description: The IDs of activities marked as watched
          items:
            type: string
          title: Mark Watched
          type: array
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: 006.001.004
        type:
          default: feeds.activity.marked
          description: 'The type of event: "feeds.activity.marked" in this case'
          title: Event Type
          type: string
          x-stream-index: 006.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who marked the activities
          title: User
          x-stream-index: "007.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: ActivityMarkEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityPinResponse:
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The pinned activity
          title: Activity
          x-stream-index: "002"
        created_at:
          description: When the pin was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "004"
        feed:
          description: ID of the feed where activity is pinned
          title: Feed ID
          type: string
          x-stream-index: "003"
        updated_at:
          description: When the pin was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who pinned the activity
          title: User
          x-stream-index: "001"
      required:
      - user
      - activity
      - feed
      - created_at
      - updated_at
      title: Activity Pin
      type: object
    ActivityPinnedEvent:
      description: Emitted when an activity is pinned.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          description: The ID of the feed
          title: Feed ID
          type: string
          x-stream-index: "002.002"
        pinned_activity:
          $ref: '#/components/schemas/PinActivityResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.pinned
          description: 'The type of event: "feeds.activity.pinned" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who pinned the activity
          title: User
          x-stream-index: "003.001"
      required:
      - pinned_activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityPinnedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityProcessorConfig:
      properties:
        type:
          description: Type of activity processor (required)
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - type
      title: Activity Processor Configuration
      type: object
    ActivityReactionAddedEvent:
      description: Emitted when a reaction is added to an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was added
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.activity.reaction.added
          description: 'The type of event: "feeds.activity.reaction.added" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the reaction
          title: User
          x-stream-index: "004.001"
      required:
      - activity
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: ActivityReactionAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityReactionDeletedEvent:
      description: Emitted when a reaction is deleted from an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.activity.reaction.deleted
          description: The type of the reaction that was removed
          title: Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the reaction
          title: User
          x-stream-index: "004.001"
      required:
      - activity
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: ActivityReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityReactionUpdatedEvent:
      description: Emitted when a reaction is updated on an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was updated
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.activity.reaction.updated
          description: 'The type of event: "feeds.activity.reaction.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the reaction
          title: User
          x-stream-index: "004.001"
      required:
      - activity
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: ActivityReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityRemovedFromFeedEvent:
      description: Emitted when an activity is removed from a feed.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.removed_from_feed
          description: 'The type of event: "feeds.activity.removed_from_feed" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the activity
          title: User
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityRemovedFromFeedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityRequest:
      properties:
        attachments:
          description: List of attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: Custom Data
          type: object
          x-stream-index: "017"
        expires_at:
          description: Expiration time for the activity
          title: Expires At
          type: string
          x-stream-index: "010"
        feeds:
          description: List of feed IDs to add the activity to
          items:
            type: string
          maximum: 255
          minimum: 1
          title: Feed IDs
          type: array
          x-stream-index: "004"
        filter_tags:
          description: Tags for filtering activities
          items:
            type: string
          maximum: 255
          title: Filter Tags
          type: array
          x-stream-index: "013"
        id:
          description: Optional ID for the activity
          maxLength: 255
          title: Activity ID
          type: string
          x-stream-index: "001"
        interest_tags:
          description: Tags for indicating user interests
          items:
            type: string
          maximum: 255
          title: Interest Tags
          type: array
          x-stream-index: "014"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location related to the activity
          title: Location
          x-stream-index: "009"
        mentioned_user_ids:
          description: List of users mentioned in the activity
          items:
            type: string
          maximum: 255
          title: Mentioned User IDs
          type: array
          x-stream-index: "011"
        parent_id:
          description: ID of parent activity for replies/comments
          maxLength: 255
          title: Parent ID
          type: string
          x-stream-index: "015"
        poll_id:
          description: ID of a poll to attach to activity
          title: Poll ID
          type: string
          x-stream-index: "016"
        search_data:
          additionalProperties: {}
          description: Additional data for search indexing
          title: Search Data
          type: object
          x-stream-index: "012"
        text:
          description: Text content of the activity
          title: Text
          type: string
          x-stream-index: "005"
        type:
          description: Type of activity
          maxLength: 255
          title: Activity Type
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user creating the activity
          maxLength: 255
          title: User ID
          type: string
          x-stream-index: "003"
        visibility:
          description: Visibility setting for the activity
          enum:
          - public
          - private
          - tag
          title: Visibility
          type: string
          x-stream-index: "007"
        visibility_tag:
          description: If visibility is 'tag', this is the tag name and is required
          maxLength: 32
          title: Visibility Tag
          type: string
          x-stream-index: "008"
      required:
      - type
      - feeds
      title: Activity Request
      type: object
    ActivityResponse:
      properties:
        attachments:
          description: Media attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "009"
        bookmark_count:
          description: Number of bookmarks on the activity
          format: int32
          title: Bookmark Count
          type: integer
          x-stream-index: "028"
        comment_count:
          description: Number of comments on the activity
          format: int32
          title: Comment Count
          type: integer
          x-stream-index: "027"
        comments:
          description: Comments on this activity
          items:
            $ref: '#/components/schemas/CommentResponse'
          title: Comments
          type: array
          x-stream-index: "015"
        created_at:
          description: When the activity was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "007"
        current_feed:
          $ref: '#/components/schemas/FeedResponse'
          description: Feed context for this activity view. If an activity is added
            only to one feed, it's always set. If an activity is added to multiple
            feeds, it's only set when calling the GetOrCreateFeed endpoint.
          title: Current Feed
          x-stream-index: "035"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: Custom Data
          type: object
          x-stream-index: "011"
        deleted_at:
          description: When the activity was deleted
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "021"
        edited_at:
          description: When the activity was last edited
          format: date-time
          title: Edited At
          type: number
          x-stream-index: "020"
        expires_at:
          description: When the activity will expire
          format: date-time
          title: Expires At
          type: number
          x-stream-index: "022"
        feeds:
          description: List of feed IDs containing this activity
          items:
            type: string
          title: Feeds
          type: array
          x-stream-index: "004"
        filter_tags:
          description: Tags for filtering
          items:
            type: string
          title: Filter Tags
          type: array
          x-stream-index: "024"
        hidden:
          description: If this activity is hidden for this user. For premium content
            where you want to show a preview
          title: Hidden
          type: boolean
          x-stream-index: "036"
        id:
          description: Unique identifier for the activity
          title: ID
          type: string
          x-stream-index: "001"
        interest_tags:
          description: Tags for user interests
          items:
            type: string
          title: Interest Tags
          type: array
          x-stream-index: "025"
        latest_reactions:
          description: Recent reactions to the activity
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Latest Reactions
          type: array
          x-stream-index: "031"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location related to the activity
          title: Location
          x-stream-index: "017"
        mentioned_users:
          description: Users mentioned in the activity
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "010"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          description: Moderation information
          title: Moderation
          x-stream-index: "026"
        notification_context:
          $ref: '#/components/schemas/NotificationContext'
          description: Notification context data for the activity (if this is a reaction,
            comment, follow, etc.)
          title: Notification Context
          x-stream-index: "012"
        own_bookmarks:
          description: Current user's bookmarks for this activity
          items:
            $ref: '#/components/schemas/BookmarkResponse'
          title: Own Bookmarks
          type: array
          x-stream-index: "034"
        own_reactions:
          description: Current user's reactions to this activity
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Own Reactions
          type: array
          x-stream-index: "033"
        parent:
          $ref: '#/components/schemas/ActivityResponse'
          description: Parent activity (if this is a reply/comment)
          title: Parent
          x-stream-index: "018"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: Poll attached to this activity
          title: Poll
          x-stream-index: "019"
        popularity:
          description: Popularity score of the activity
          format: int32
          title: Popularity
          type: integer
          x-stream-index: "013"
        reaction_count:
          description: Number of reactions to the activity
          format: int32
          title: Reaction Count
          type: integer
          x-stream-index: "030"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          description: Grouped reactions by type
          title: Reaction Groups
          type: object
          x-stream-index: "032"
        score:
          description: Ranking score for this activity
          format: float
          title: Score
          type: number
          x-stream-index: "014"
        search_data:
          additionalProperties: {}
          description: Data for search indexing
          title: Search Data
          type: object
          x-stream-index: "023"
        share_count:
          description: Number of times the activity was shared
          format: int32
          title: Share Count
          type: integer
          x-stream-index: "029"
        text:
          description: Text content of the activity
          title: Text
          type: string
          x-stream-index: "016"
        type:
          description: Type of activity
          title: Type
          type: string
          x-stream-index: "002"
        updated_at:
          description: When the activity was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "008"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the activity
          title: User
          x-stream-index: "003"
        visibility:
          description: Visibility setting for the activity
          enum:
          - public
          - private
          - tag
          title: Visibility
          type: string
          x-stream-index: "005"
        visibility_tag:
          description: If visibility is 'tag', this is the tag name
          title: Visibility Tag
          type: string
          x-stream-index: "006"
      required:
      - id
      - type
      - user
      - feeds
      - visibility
      - created_at
      - updated_at
      - attachments
      - mentioned_users
      - custom
      - popularity
      - score
      - comments
      - search_data
      - filter_tags
      - interest_tags
      - comment_count
      - bookmark_count
      - share_count
      - reaction_count
      - latest_reactions
      - reaction_groups
      - own_reactions
      - own_bookmarks
      title: Base Activity
      type: object
    ActivitySelectorConfig:
      properties:
        cutoff_time:
          description: Time threshold for activity selection
          format: date-time
          title: Cutoff Time
          type: number
          x-stream-index: "004"
        filter:
          additionalProperties: {}
          description: Filter for activity selection
          title: Filter
          type: object
          x-stream-index: "002"
        min_popularity:
          description: Minimum popularity threshold
          format: int32
          title: Minimum Popularity
          type: integer
          x-stream-index: "005"
        sort:
          description: Sort parameters for activity selection
          items:
            $ref: '#/components/schemas/SortParam'
          title: Sort
          type: array
          x-stream-index: "003"
        type:
          description: Type of selector
          title: Type
          type: string
          x-stream-index: "001"
      title: Activity Selector Configuration
      type: object
    ActivityUnpinnedEvent:
      description: Emitted when an activity is unpinned.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          description: The ID of the feed
          title: Feed ID
          type: string
          x-stream-index: "002.002"
        pinned_activity:
          $ref: '#/components/schemas/PinActivityResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.unpinned
          description: 'The type of event: "feeds.activity.unpinned" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who unpinned the activity
          title: User
          x-stream-index: "003.001"
      required:
      - pinned_activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityUnpinnedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ActivityUpdatedEvent:
      description: Emitted when an activity is updated.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The activity that was updated
          title: Activity
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.activity.updated
          description: The type of the event
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the activity
          title: User
          x-stream-index: "003.001"
      required:
      - activity
      - type
      - created_at
      - custom
      - fid
      title: ActivityUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AddActivityRequest:
      nullable: true
      properties:
        attachments:
          description: List of attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "001.006"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: Custom Data
          type: object
          x-stream-index: "001.017"
        expires_at:
          description: Expiration time for the activity
          title: Expires At
          type: string
          x-stream-index: "001.010"
        feeds:
          description: List of feed IDs to add the activity to
          items:
            type: string
          maximum: 255
          minimum: 1
          title: Feed IDs
          type: array
          x-stream-index: "001.004"
        filter_tags:
          description: Tags for filtering activities
          items:
            type: string
          maximum: 255
          title: Filter Tags
          type: array
          x-stream-index: "001.013"
        id:
          description: Optional ID for the activity
          maxLength: 255
          title: Activity ID
          type: string
          x-stream-index: "001.001"
        interest_tags:
          description: Tags for indicating user interests
          items:
            type: string
          maximum: 255
          title: Interest Tags
          type: array
          x-stream-index: "001.014"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location related to the activity
          title: Location
          x-stream-index: "001.009"
        mentioned_user_ids:
          description: List of users mentioned in the activity
          items:
            type: string
          maximum: 255
          title: Mentioned User IDs
          type: array
          x-stream-index: "001.011"
        parent_id:
          description: ID of parent activity for replies/comments
          maxLength: 255
          title: Parent ID
          type: string
          x-stream-index: "001.015"
        poll_id:
          description: ID of a poll to attach to activity
          title: Poll ID
          type: string
          x-stream-index: "001.016"
        search_data:
          additionalProperties: {}
          description: Additional data for search indexing
          title: Search Data
          type: object
          x-stream-index: "001.012"
        text:
          description: Text content of the activity
          title: Text
          type: string
          x-stream-index: "001.005"
        type:
          description: Type of activity
          maxLength: 255
          title: Activity Type
          type: string
          x-stream-index: "001.002"
        user_id:
          description: ID of the user creating the activity
          maxLength: 255
          title: User ID
          type: string
          x-stream-index: "001.003"
        visibility:
          description: Visibility setting for the activity
          enum:
          - public
          - private
          - tag
          title: Visibility
          type: string
          x-stream-index: "001.007"
        visibility_tag:
          description: If visibility is 'tag', this is the tag name and is required
          maxLength: 32
          title: Visibility Tag
          type: string
          x-stream-index: "001.008"
      required:
      - type
      - feeds
      title: Activity Request
      type: object
    AddActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The created activity
          title: Activity
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      title: Add Activity Response
      type: object
    AddBookmarkRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the bookmark
          title: Custom Data
          type: object
          x-stream-index: "004"
        folder_id:
          description: ID of the folder to add the bookmark to
          maxLength: 255
          title: Folder ID
          type: string
          x-stream-index: "002"
        new_folder:
          $ref: '#/components/schemas/AddFolderRequest'
          description: Create a new folder for this bookmark
          title: New Folder
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
      title: Add Bookmark Request
      type: object
    AddBookmarkResponse:
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The created bookmark
          title: Bookmark
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark
      - duration
      title: Add Bookmark Response
      type: object
    AddCommentReactionRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this reaction
          title: boolean
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Optional custom data to add to the reaction
          title: object
          type: object
          x-stream-index: "003"
        enforce_unique:
          description: Whether to enforce unique reactions per user (remove other
            reaction types from the user when adding this one)
          title: boolean
          type: boolean
          x-stream-index: "006"
        skip_push:
          type: boolean
          x-stream-index: "005"
        type:
          description: The type of reaction, eg upvote, like, ...
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      required:
      - type
      type: object
    AddCommentReactionResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment the reaction was added to
          title: object
          x-stream-index: "001"
        duration:
          description: Duration of the request
          title: string
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The created or updated reaction
          title: object
          x-stream-index: "002"
      required:
      - comment
      - reaction
      - duration
      type: object
    AddCommentRequest:
      nullable: true
      properties:
        attachments:
          description: Media attachments for the reply
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "004"
        comment:
          description: Text content of the comment
          title: Comment
          type: string
          x-stream-index: "003"
        create_notification_activity:
          description: Whether to create a notification activity for this comment
          title: Create Notification Activity
          type: boolean
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for the comment
          title: Custom Data
          type: object
          x-stream-index: "007"
        mentioned_user_ids:
          description: List of users mentioned in the reply
          items:
            type: string
          maximum: 255
          title: Mentioned User IDs
          type: array
          x-stream-index: "005"
        object_id:
          description: ID of the object to comment on
          title: Object ID
          type: string
          x-stream-index: "001"
        object_type:
          description: Type of the object to comment on
          title: Object Type
          type: string
          x-stream-index: "002"
        parent_id:
          description: ID of parent comment for replies
          title: Parent ID
          type: string
          x-stream-index: "006"
        skip_push:
          type: boolean
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "010.002"
        user_id:
          type: string
          x-stream-index: "010.001"
      required:
      - object_id
      - object_type
      - comment
      title: Add Comment Request
      type: object
    AddCommentResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The created comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comment
      - duration
      title: Add Comment Response
      type: object
    AddCommentsBatchRequest:
      nullable: true
      properties:
        comments:
          description: List of comments to add
          items:
            $ref: '#/components/schemas/AddCommentRequest'
          title: Comments
          type: array
          x-stream-index: "001"
      required:
      - comments
      title: Add Comments Batch Request
      type: object
    AddCommentsBatchResponse:
      nullable: true
      properties:
        comments:
          description: List of comments added
          items:
            $ref: '#/components/schemas/CommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comments
      - duration
      title: Add Comments Batch Response
      type: object
    AddFolderRequest:
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the folder
          title: Custom Data
          type: object
          x-stream-index: "002"
        name:
          description: Name of the folder
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      title: Add Folder Request
      type: object
    AddReactionRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this reaction
          title: Create Notification Activity
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Custom data for the reaction
          title: Custom Data
          type: object
          x-stream-index: "003"
        enforce_unique:
          description: Whether to enforce unique reactions per user (remove other
            reaction types from the user when adding this one)
          title: Enforce Unique
          type: boolean
          x-stream-index: "006"
        skip_push:
          type: boolean
          x-stream-index: "005"
        type:
          description: Type of reaction
          maxLength: 255
          title: Reaction Type
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "007.002"
        user_id:
          type: string
          x-stream-index: "007.001"
      required:
      - type
      title: Add Reaction Request
      type: object
    AddReactionResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The created reaction
          title: Reaction
          x-stream-index: "002"
      required:
      - activity
      - reaction
      - duration
      title: Add Reaction Response
      type: object
    AggregatedActivityResponse:
      properties:
        activities:
          description: List of activities in this aggregation
          items:
            $ref: '#/components/schemas/ActivityResponse'
          title: Activities
          type: array
          x-stream-index: "001"
        activity_count:
          description: Number of activities in this aggregation
          format: int32
          title: Activity Count
          type: integer
          x-stream-index: "002"
        created_at:
          description: When the aggregation was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "007"
        group:
          description: Grouping identifier
          title: Group
          type: string
          x-stream-index: "005"
        score:
          description: Ranking score for this aggregation
          format: float
          title: Score
          type: number
          x-stream-index: "006"
        updated_at:
          description: When the aggregation was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "008"
        user_count:
          description: Number of unique users in this aggregation
          format: int32
          title: User Count
          type: integer
          x-stream-index: "003"
        user_count_truncated:
          description: Whether this activity group has been truncated due to exceeding
            the group size limit
          title: User Count Truncated
          type: boolean
          x-stream-index: "004"
      required:
      - activities
      - activity_count
      - user_count
      - user_count_truncated
      - group
      - score
      - created_at
      - updated_at
      title: Aggregated Activity
      type: object
    AggregationConfig:
      properties:
        format:
          description: Format for activity aggregation
          title: Format
          type: string
          x-stream-index: "001"
      title: Aggregation Configuration
      type: object
    AppResponseFields:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "019"
        async_url_enrich_enabled:
          type: boolean
          x-stream-index: "017"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "020"
        before_message_send_hook_url:
          type: string
          x-stream-index: "021"
        call_types:
          additionalProperties:
            $ref: '#/components/schemas/CallType'
          type: object
          x-stream-index: "007"
        campaign_enabled:
          type: boolean
          x-stream-index: "034"
        cdn_expiration_seconds:
          format: int32
          type: integer
          x-stream-index: "037"
        channel_configs:
          additionalProperties:
            $ref: '#/components/schemas/ChannelConfig'
          type: object
          x-stream-index: "006"
        custom_action_handler_url:
          type: string
          x-stream-index: "022"
        datadog_info:
          $ref: '#/components/schemas/DataDogInfo'
          x-stream-index: "040"
        disable_auth_checks:
          type: boolean
          x-stream-index: "011"
        disable_permissions_checks:
          type: boolean
          x-stream-index: "012"
        enforce_unique_usernames:
          type: string
          x-stream-index: "023"
        event_hooks:
          items:
            $ref: '#/components/schemas/EventHook'
          type: array
          x-stream-index: "045"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "030"
        geofences:
          items:
            $ref: '#/components/schemas/GeofenceResponse'
          type: array
          x-stream-index: "039"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "033"
        guest_user_creation_disabled:
          type: boolean
          x-stream-index: "043"
        image_moderation_enabled:
          type: boolean
          x-stream-index: "016"
        image_moderation_labels:
          items:
            type: string
          type: array
          x-stream-index: "018"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "031"
        moderation_bulk_submit_action_enabled:
          type: boolean
          x-stream-index: "048"
        moderation_dashboard_preferences:
          $ref: '#/components/schemas/ModerationDashboardPreferences'
          x-stream-index: "044"
        moderation_enabled:
          type: boolean
          x-stream-index: "041"
        moderation_llm_configurability_enabled:
          type: boolean
          x-stream-index: "049"
        moderation_multitenant_blocklist_enabled:
          type: boolean
          x-stream-index: "042"
        moderation_webhook_url:
          type: string
          x-stream-index: "005"
        multi_tenant_enabled:
          type: boolean
          x-stream-index: "015"
        name:
          type: string
          x-stream-index: "001"
        organization:
          type: string
          x-stream-index: "002"
        permission_version:
          type: string
          x-stream-index: "013"
        policies:
          additionalProperties:
            items:
              $ref: '#/components/schemas/Policy'
            type: array
          type: object
          x-stream-index: "008"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationFields'
          x-stream-index: "003"
        reminders_interval:
          format: int32
          type: integer
          x-stream-index: "036"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "032"
        sns_key:
          type: string
          x-stream-index: "028"
        sns_secret:
          type: string
          x-stream-index: "029"
        sns_topic_arn:
          type: string
          x-stream-index: "027"
        sqs_key:
          type: string
          x-stream-index: "025"
        sqs_secret:
          type: string
          x-stream-index: "026"
        sqs_url:
          type: string
          x-stream-index: "024"
        suspended:
          type: boolean
          x-stream-index: "009"
        suspended_explanation:
          type: string
          x-stream-index: "010"
        use_hook_v2:
          type: boolean
          x-stream-index: "046"
        user_response_time_enabled:
          type: boolean
          x-stream-index: "047"
        user_search_disallowed_roles:
          items:
            type: string
          type: array
          x-stream-index: "014"
        webhook_events:
          items:
            type: string
          type: array
          x-stream-index: "035"
        webhook_url:
          type: string
          x-stream-index: "004"
      required:
      - name
      - organization
      - push_notifications
      - webhook_url
      - moderation_webhook_url
      - channel_configs
      - call_types
      - policies
      - suspended
      - suspended_explanation
      - disable_auth_checks
      - disable_permissions_checks
      - permission_version
      - user_search_disallowed_roles
      - multi_tenant_enabled
      - image_moderation_enabled
      - async_url_enrich_enabled
      - auto_translation_enabled
      - custom_action_handler_url
      - enforce_unique_usernames
      - sqs_url
      - sqs_key
      - sqs_secret
      - sns_topic_arn
      - sns_key
      - sns_secret
      - file_upload_config
      - image_upload_config
      - grants
      - campaign_enabled
      - webhook_events
      - reminders_interval
      - cdn_expiration_seconds
      - video_provider
      - moderation_enabled
      - moderation_multitenant_blocklist_enabled
      - guest_user_creation_disabled
      - event_hooks
      - use_hook_v2
      - user_response_time_enabled
      - moderation_bulk_submit_action_enabled
      - moderation_llm_configurability_enabled
      type: object
    AsyncBulkImageModerationEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003.007"
        finished_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "003.004"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        task_id:
          type: string
          x-stream-index: "002.001"
        type:
          default: export.bulk_image_moderation.success
          type: string
          x-stream-index: "003.002"
        url:
          type: string
          x-stream-index: "001"
      required:
      - url
      - task_id
      - started_at
      - finished_at
      - type
      - created_at
      - custom
      title: AsyncBulkImageModerationEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AsyncExportErrorEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003.007"
        error:
          type: string
          x-stream-index: "001"
        finished_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "003.004"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        task_id:
          type: string
          x-stream-index: "002.001"
        type:
          default: export.bulk_image_moderation.error
          type: string
          x-stream-index: "003.002"
      required:
      - error
      - task_id
      - started_at
      - finished_at
      - type
      - created_at
      - custom
      title: AsyncExportErrorEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AsyncExportModerationLogsEvent:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003.007"
        finished_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "003.004"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        task_id:
          type: string
          x-stream-index: "002.001"
        type:
          default: export.moderation_logs.success
          type: string
          x-stream-index: "003.002"
        url:
          type: string
          x-stream-index: "001"
      required:
      - url
      - task_id
      - started_at
      - finished_at
      - type
      - created_at
      - custom
      title: AsyncExportModerationLogsEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    AsyncModerationCallbackConfig:
      properties:
        mode:
          enum:
          - CALLBACK_MODE_NONE
          - CALLBACK_MODE_REST
          - CALLBACK_MODE_TWIRP
          type: string
          x-stream-index: "002"
        server_url:
          type: string
          x-stream-index: "001"
      type: object
    AsyncModerationConfiguration:
      properties:
        callback:
          $ref: '#/components/schemas/AsyncModerationCallbackConfig'
          x-stream-index: "002"
        timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
      type: object
    Attachment:
      description: An attachment is a message object that represents a file uploaded
        by a user.
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "015"
        asset_url:
          type: string
          x-stream-index: "017"
        author_icon:
          type: string
          x-stream-index: "007"
        author_link:
          type: string
          x-stream-index: "006"
        author_name:
          type: string
          x-stream-index: "005"
        color:
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "018"
        fallback:
          type: string
          x-stream-index: "002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "016"
        footer:
          type: string
          x-stream-index: "013"
        footer_icon:
          type: string
          x-stream-index: "014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "019"
        image_url:
          type: string
          x-stream-index: "011"
        og_scrape_url:
          type: string
          x-stream-index: "020"
        original_height:
          format: int32
          type: integer
          x-stream-index: "022"
        original_width:
          format: int32
          type: integer
          x-stream-index: "021"
        pretext:
          type: string
          x-stream-index: "004"
        text:
          type: string
          x-stream-index: "010"
        thumb_url:
          type: string
          x-stream-index: "012"
        title:
          type: string
          x-stream-index: "008"
        title_link:
          type: string
          x-stream-index: "009"
        type:
          description: Attachment type (e.g. image, video, url)
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - custom
      title: Attachment
      type: object
      x-stream-docs-page-id: file_uploads
    AudioSettings:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - access_request_enabled
      - opus_dtx_enabled
      - redundant_coding_enabled
      - mic_default_on
      - speaker_default_on
      - default_device
      type: object
    AudioSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "001"
        default_device:
          enum:
          - speaker
          - earpiece
          type: string
          x-stream-index: "006"
        mic_default_on:
          type: boolean
          x-stream-index: "004"
        noise_cancellation:
          $ref: '#/components/schemas/NoiseCancellationSettings'
          x-stream-index: "007"
        opus_dtx_enabled:
          type: boolean
          x-stream-index: "002"
        redundant_coding_enabled:
          type: boolean
          x-stream-index: "003"
        speaker_default_on:
          type: boolean
          x-stream-index: "005"
      required:
      - access_request_enabled
      - opus_dtx_enabled
      - redundant_coding_enabled
      - mic_default_on
      - speaker_default_on
      - default_device
      type: object
    AutomodPlatformCircumventionConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodRule'
          type: array
          x-stream-index: "003"
      type: object
    AutomodRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "003"
        label:
          type: string
          x-stream-index: "001"
        threshold:
          format: float
          maximum: 1
          minimum: 0
          type: number
          x-stream-index: "002"
      required:
      - label
      - threshold
      - action
      type: object
    AutomodSemanticFiltersConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodSemanticFiltersRule'
          type: array
          x-stream-index: "003"
      type: object
    AutomodSemanticFiltersRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        threshold:
          format: float
          maximum: 1
          minimum: 0
          type: number
          x-stream-index: "002"
      required:
      - name
      - threshold
      - action
      type: object
    AutomodToxicityConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/AutomodRule'
          type: array
          x-stream-index: "003"
      type: object
    AzureRequest:
      description: Config for creating Azure Blob Storage storage
      properties:
        abs_account_name:
          description: The account name
          title: AccountName
          type: string
          x-stream-index: "001"
        abs_client_id:
          description: The client id
          title: ClientID
          type: string
          x-stream-index: "003"
        abs_client_secret:
          description: The client secret
          title: ClientSecret
          type: string
          x-stream-index: "004"
        abs_tenant_id:
          description: The tenant id
          title: TenantID
          type: string
          x-stream-index: "002"
      required:
      - abs_account_name
      - abs_tenant_id
      - abs_client_id
      - abs_client_secret
      title: AzureRequest
      type: object
    BackstageSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - enabled
      type: object
    BackstageSettingsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "002"
      required:
      - enabled
      type: object
    Ban:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "012"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "011"
        expires:
          format: date-time
          type: number
          x-stream-index: "007"
        reason:
          type: string
          x-stream-index: "008"
        shadow:
          type: boolean
          x-stream-index: "009"
        target:
          $ref: '#/components/schemas/User'
          x-stream-index: "006"
      required:
      - shadow
      - created_at
      type: object
    BanActionRequest:
      properties:
        channel_ban_only:
          type: boolean
          x-stream-index: "003"
        delete_messages:
          enum:
          - soft
          - pruning
          - hard
          type: string
          x-stream-index: "005"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "002"
        shadow:
          type: boolean
          x-stream-index: "001"
        timeout:
          format: int32
          type: integer
          x-stream-index: "006"
      type: object
    BanOptions:
      properties:
        delete_messages:
          enum:
          - soft
          - pruning
          - hard
          type: string
          x-stream-index: "005"
        duration:
          format: int32
          type: integer
          x-stream-index: "001"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        reason:
          type: string
          x-stream-index: "002"
        shadow_ban:
          type: boolean
          x-stream-index: "003"
      type: object
    BanRequest:
      nullable: true
      properties:
        banned_by:
          $ref: '#/components/schemas/UserRequest'
          description: Details about the user performing the ban
          title: Banned By
          x-stream-index: "008"
        banned_by_id:
          description: ID of the user performing the ban
          title: Banned By ID
          type: string
          x-stream-index: "007"
        channel_cid:
          description: Channel where the ban applies
          title: Channel CID
          type: string
          x-stream-index: "004"
        delete_messages:
          enum:
          - soft
          - pruning
          - hard
          type: string
          x-stream-index: "009"
        ip_ban:
          description: Whether to ban the user's IP address
          title: IP Ban
          type: boolean
          x-stream-index: "006"
        reason:
          description: Optional explanation for the ban
          title: Reason
          type: string
          x-stream-index: "003"
        shadow:
          description: Whether this is a shadow ban
          title: Shadow
          type: boolean
          x-stream-index: "005"
        target_user_id:
          description: ID of the user to ban
          title: Target User ID
          type: string
          x-stream-index: "001"
        timeout:
          description: Duration of the ban in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "002"
      required:
      - target_user_id
      type: object
    BanResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    BlockListConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/BlockListRule'
          maximum: 10
          type: array
          x-stream-index: "003"
      type: object
    BlockListOptions:
      properties:
        behavior:
          description: Blocklist behavior
          enum:
          - flag
          - block
          - shadow_block
          title: Behavior
          type: string
          x-stream-index: "002"
        blocklist:
          description: Blocklist name
          title: Blocklist
          type: string
          x-stream-index: "001"
      required:
      - blocklist
      - behavior
      type: object
    BlockListResponse:
      description: Block list contains restricted words
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001"
        id:
          type: string
          x-stream-index: "003"
        name:
          description: Block list name
          title: Name
          type: string
          x-stream-index: "004"
        team:
          type: string
          x-stream-index: "007"
        type:
          description: Block list type.
          title: Type
          type: string
          x-stream-index: "005"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "002"
        words:
          description: List of words to block
          items:
            type: string
          title: Words
          type: array
          x-stream-index: "006"
      required:
      - name
      - type
      - words
      title: Block list
      type: object
      x-stream-docs-page-id: block_lists
    BlockListRule:
      properties:
        action:
          enum:
          - flag
          - mask_flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "002"
      required:
      - action
      type: object
    BlockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          description: User id to block
          title: BlockedUserID
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - blocked_user_id
      type: object
    BlockUsersResponse:
      nullable: true
      properties:
        blocked_by_user_id:
          description: User id who blocked another user
          title: BlockedByUserID
          type: string
          x-stream-index: "002"
        blocked_user_id:
          description: User id who got blocked
          title: BlockedUserID
          type: string
          x-stream-index: "003"
        created_at:
          description: Timestamp when the user was blocked
          format: date-time
          title: CreatedAt
          type: number
          x-stream-index: "004"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      - blocked_by_user_id
      - blocked_user_id
      - created_at
      type: object
    BlockedUserResponse:
      nullable: true
      properties:
        blocked_user:
          $ref: '#/components/schemas/UserResponse'
          description: User who got blocked
          title: User
          x-stream-index: "003"
        blocked_user_id:
          description: ID of the user who got blocked
          title: UserID
          type: string
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who blocked another user
          title: User
          x-stream-index: "001"
        user_id:
          description: ID of the user who blocked another user
          title: UserID
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_id
      - blocked_user
      - blocked_user_id
      - created_at
      type: object
    BodyguardImageAnalysisConfig:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/BodyguardRule'
          type: array
          x-stream-index: "001"
      type: object
    BodyguardRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "003"
      required:
      - label
      type: object
    BodyguardSeverityRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        severity:
          enum:
          - low
          - medium
          - high
          - critical
          type: string
          x-stream-index: "001"
      required:
      - severity
      - action
      type: object
    BookmarkAddedEvent:
      description: Emitted when a user bookmarks an activity.
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark.added
          description: 'The type of event: "feeds.bookmark.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the bookmark
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark
      - type
      - created_at
      - custom
      title: BookmarkAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkDeletedEvent:
      description: Emitted when a user deletes a bookmark from an activity.
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark.deleted
          description: 'The type of event: "feeds.bookmark.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the bookmark
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark
      - type
      - created_at
      - custom
      title: BookmarkDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkFolderDeletedEvent:
      description: Emitted when a bookmark folder is deleted.
      nullable: true
      properties:
        bookmark_folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: The bookmark folder that was deleted
          title: Bookmark Folder
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark_folder.deleted
          description: 'The type of event: "feeds.bookmark_folder.deleted" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who deleted the bookmark folder
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark_folder
      - type
      - created_at
      - custom
      title: BookmarkFolderDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkFolderResponse:
      properties:
        created_at:
          description: When the folder was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Custom data for the folder
          title: Custom Data
          type: object
          x-stream-index: "003"
        id:
          description: Unique identifier for the folder
          title: ID
          type: string
          x-stream-index: "001"
        name:
          description: Name of the folder
          title: Name
          type: string
          x-stream-index: "002"
        updated_at:
          description: When the folder was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "005"
      required:
      - id
      - name
      - created_at
      - updated_at
      title: Bookmark Folder
      type: object
    BookmarkFolderUpdatedEvent:
      description: Emitted when a bookmark folder is updated.
      nullable: true
      properties:
        bookmark_folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: The bookmark folder that was updated
          title: Bookmark Folder
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark_folder.updated
          description: 'The type of event: "feeds.bookmark_folder.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the bookmark folder
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark_folder
      - type
      - created_at
      - custom
      title: BookmarkFolderUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BookmarkResponse:
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The bookmarked activity
          title: Activity
          x-stream-index: "002"
        created_at:
          description: When the bookmark was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for the bookmark
          title: Custom Data
          type: object
          x-stream-index: "004"
        folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: Folder containing this bookmark
          title: Folder
          x-stream-index: "003"
        updated_at:
          description: When the bookmark was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the bookmark
          title: User
          x-stream-index: "001"
      required:
      - user
      - activity
      - created_at
      - updated_at
      title: Bookmark
      type: object
    BookmarkUpdatedEvent:
      description: Emitted when a user updates a bookmark.
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The updated bookmark
          title: Bookmark
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.bookmark.updated
          description: 'The type of event: "feeds.bookmark.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the bookmark
          title: User
          x-stream-index: "003.001"
      required:
      - bookmark
      - type
      - created_at
      - custom
      title: BookmarkUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    BroadcastSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettings'
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettings'
          x-stream-index: "003"
      required:
      - enabled
      type: object
    BroadcastSettingsResponse:
      description: BroadcastSettingsResponse is the payload for broadcasting settings
      properties:
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "001"
        hls:
          $ref: '#/components/schemas/HLSSettingsResponse'
          title: HLS
          x-stream-index: "002"
        rtmp:
          $ref: '#/components/schemas/RTMPSettingsResponse'
          title: RTMP
          x-stream-index: "003"
      required:
      - enabled
      - hls
      - rtmp
      title: BroadcastSettingsResponse
      type: object
    BulkImageModerationRequest:
      nullable: true
      properties:
        csv_file:
          description: URL to CSV file containing image URLs to moderate
          title: string
          type: string
          x-stream-index: "001"
      required:
      - csv_file
      type: object
    BulkImageModerationResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        task_id:
          description: ID of the task for processing the bulk image moderation
          title: string
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      type: object
    Call:
      properties:
        AppPK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "002"
        Backstage:
          type: boolean
          writeOnly: true
          x-stream-index: "023"
        BlockedUserIDs:
          items:
            type: string
          type: array
          writeOnly: true
          x-stream-index: "018"
        BlockedUsers:
          items:
            $ref: '#/components/schemas/User'
          type: array
          writeOnly: true
          x-stream-index: "019"
        CID:
          type: string
          writeOnly: true
          x-stream-index: "005"
        CallType:
          $ref: '#/components/schemas/CallType'
          x-stream-index: "020"
        ChannelCID:
          type: string
          writeOnly: true
          x-stream-index: "032"
        CreatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "013"
        CreatedBy:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        CreatedByUserID:
          type: string
          writeOnly: true
          x-stream-index: "007"
        CurrentSessionID:
          type: string
          writeOnly: true
          x-stream-index: "024"
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "012"
        DeletedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "028"
        EgressUpdatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "027"
        Egresses:
          items:
            $ref: '#/components/schemas/CallEgress'
          type: array
          writeOnly: true
          x-stream-index: "015"
        EndedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "017"
        ID:
          type: string
          writeOnly: true
          x-stream-index: "004"
        JoinAheadTimeSeconds:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "031"
        LastHeartbeatAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "030"
        LastSessionID:
          type: string
          writeOnly: true
          x-stream-index: "025"
        MemberCount:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "010"
        MemberLookup:
          $ref: '#/components/schemas/MemberLookup'
          x-stream-index: "011"
        Members:
          items:
            $ref: '#/components/schemas/CallMember'
          type: array
          writeOnly: true
          x-stream-index: "009"
        Session:
          $ref: '#/components/schemas/CallSession'
          x-stream-index: "026"
        Settings:
          $ref: '#/components/schemas/CallSettings'
          x-stream-index: "022"
        SettingsOverrides:
          $ref: '#/components/schemas/CallSettings'
          x-stream-index: "021"
        StartsAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "016"
        Team:
          type: string
          writeOnly: true
          x-stream-index: "006"
        ThumbnailURL:
          type: string
          writeOnly: true
          x-stream-index: "029"
        Type:
          type: string
          writeOnly: true
          x-stream-index: "003"
        UpdatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "014"
      required:
      - AppPK
      - Type
      - ID
      - CID
      - Team
      - CreatedByUserID
      - Members
      - Custom
      - CreatedAt
      - UpdatedAt
      - Egresses
      - BlockedUserIDs
      - BlockedUsers
      - Backstage
      - CurrentSessionID
      - LastSessionID
      - ThumbnailURL
      - ChannelCID
      type: object
    CallEgress:
      nullable: true
      properties:
        app_pk:
          format: int32
          type: integer
          x-stream-index: "002"
        call_id:
          type: string
          x-stream-index: "004"
        call_type:
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/EgressTaskConfig'
          x-stream-index: "007"
        egress_id:
          type: string
          x-stream-index: "005"
        egress_type:
          type: string
          x-stream-index: "006"
        instance_ip:
          type: string
          x-stream-index: "008"
        started_at:
          format: date-time
          type: number
          x-stream-index: "010"
        state:
          type: string
          x-stream-index: "009"
        stopped_at:
          format: date-time
          type: number
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "012"
      required:
      - app_pk
      - call_type
      - call_id
      - egress_id
      - egress_type
      - instance_ip
      - state
      - started_at
      - updated_at
      type: object
    CallIngressResponse:
      description: CallIngressResponse is the payload for ingress settings
      properties:
        rtmp:
          $ref: '#/components/schemas/RTMPIngress'
          title: RTMP
          x-stream-index: "001"
        srt:
          $ref: '#/components/schemas/SRTIngress'
          x-stream-index: "003"
        whip:
          $ref: '#/components/schemas/WHIPIngress'
          title: WHIP
          x-stream-index: "002"
      required:
      - rtmp
      - whip
      - srt
      title: CallIngressResponse
      type: object
    CallMember:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "010"
        role:
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - user_id
      - role
      - custom
      - created_at
      - updated_at
      type: object
    CallParticipant:
      nullable: true
      properties:
        JoinedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "004"
        Role:
          type: string
          writeOnly: true
          x-stream-index: "002"
        UserSessionID:
          type: string
          writeOnly: true
          x-stream-index: "003"
        avg_response_time:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "001.046"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "001.017"
        banned:
          type: boolean
          x-stream-index: "001.016"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.006"
        deactivated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.014"
        deleted_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.013"
        id:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "001.023"
        language:
          type: string
          x-stream-index: "001.035"
        last_active:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.011"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.012"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "001.022"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "001.026"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.042"
        role:
          type: string
          x-stream-index: "001.004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.036"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.005"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.009"
      required:
      - id
      - role
      - teams_role
      - custom
      - banned
      - online
      - Role
      - UserSessionID
      - JoinedAt
      type: object
    CallParticipantResponse:
      properties:
        joined_at:
          format: date-time
          type: number
          x-stream-index: "004"
        role:
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
        user_session_id:
          type: string
          x-stream-index: "002"
      required:
      - user
      - user_session_id
      - role
      - joined_at
      type: object
    CallResponse:
      description: Represents a call
      properties:
        backstage:
          type: boolean
          x-stream-index: "017"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "019"
        captioning:
          type: boolean
          x-stream-index: "013"
        channel_cid:
          type: string
          x-stream-index: "025"
        cid:
          description: The unique identifier for a call (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: The user that created the call
          title: Created By
          x-stream-index: "007"
        current_session_id:
          type: string
          x-stream-index: "005"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        egress:
          $ref: '#/components/schemas/EgressResponse'
          x-stream-index: "022"
        ended_at:
          description: Date/time when the call ended
          format: date-time
          title: Ended At
          type: number
          x-stream-index: "015"
        id:
          description: Call ID
          title: ID
          type: string
          x-stream-index: "003"
        ingress:
          $ref: '#/components/schemas/CallIngressResponse'
          x-stream-index: "020"
        join_ahead_time_seconds:
          format: int32
          type: integer
          x-stream-index: "024"
        recording:
          type: boolean
          x-stream-index: "011"
        session:
          $ref: '#/components/schemas/CallSessionResponse'
          x-stream-index: "021"
        settings:
          $ref: '#/components/schemas/CallSettingsResponse'
          x-stream-index: "018"
        starts_at:
          description: Date/time when the call will start
          format: date-time
          title: Starts At
          type: number
          x-stream-index: "016"
        team:
          type: string
          x-stream-index: "006"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailResponse'
          x-stream-index: "023"
        transcribing:
          type: boolean
          x-stream-index: "012"
        translating:
          type: boolean
          x-stream-index: "014"
        type:
          description: The type of call
          title: Type
          type: string
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
      required:
      - type
      - id
      - cid
      - current_session_id
      - created_by
      - custom
      - created_at
      - updated_at
      - recording
      - transcribing
      - captioning
      - translating
      - backstage
      - settings
      - blocked_user_ids
      - ingress
      - egress
      title: CallResponse
      type: object
    CallSession:
      properties:
        AcceptedBy:
          additionalProperties:
            format: date-time
            type: number
          type: object
          writeOnly: true
          x-stream-index: "008"
        ActiveSFUs:
          items:
            $ref: '#/components/schemas/SFUIDLastSeen'
          type: array
          writeOnly: true
          x-stream-index: "016"
        AnonymousParticipantCount:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "019"
        AppPK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "002.001"
        CallID:
          type: string
          writeOnly: true
          x-stream-index: "002.003"
        CallType:
          type: string
          writeOnly: true
          x-stream-index: "002.002"
        CreatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "003"
        DeletedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "004"
        EndedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "006"
        LiveEndedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "013"
        LiveStartedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "012"
        MissedBy:
          additionalProperties:
            format: date-time
            type: number
          type: object
          writeOnly: true
          x-stream-index: "010"
        Participants:
          items:
            $ref: '#/components/schemas/CallParticipant'
          type: array
          writeOnly: true
          x-stream-index: "011"
        ParticipantsCountByRole:
          additionalProperties:
            format: int32
            type: integer
          type: object
          writeOnly: true
          x-stream-index: "018"
        RejectedBy:
          additionalProperties:
            format: date-time
            type: number
          type: object
          writeOnly: true
          x-stream-index: "009"
        RingAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "007"
        SFUIDs:
          items:
            type: string
          type: array
          writeOnly: true
          x-stream-index: "015"
        SessionID:
          type: string
          writeOnly: true
          x-stream-index: "002.004"
        StartedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "005"
        TimerEndsAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "014"
        UserPermissionOverrides:
          additionalProperties:
            additionalProperties:
              type: boolean
            type: object
          type: object
          writeOnly: true
          x-stream-index: "017"
      required:
      - AppPK
      - CallType
      - CallID
      - SessionID
      - CreatedAt
      - AcceptedBy
      - RejectedBy
      - MissedBy
      - Participants
      - SFUIDs
      - ActiveSFUs
      - UserPermissionOverrides
      - ParticipantsCountByRole
      - AnonymousParticipantCount
      type: object
    CallSessionResponse:
      properties:
        accepted_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "008"
        anonymous_participant_count:
          format: int32
          type: integer
          x-stream-index: "006"
        ended_at:
          format: date-time
          type: number
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        live_ended_at:
          format: date-time
          type: number
          x-stream-index: "011"
        live_started_at:
          format: date-time
          type: number
          x-stream-index: "010"
        missed_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "009"
        participants:
          items:
            $ref: '#/components/schemas/CallParticipantResponse'
          type: array
          x-stream-index: "004"
        participants_count_by_role:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "005"
        rejected_by:
          additionalProperties:
            format: date-time
            type: number
          type: object
          x-stream-index: "007"
        started_at:
          format: date-time
          type: number
          x-stream-index: "002"
        timer_ends_at:
          format: date-time
          type: number
          x-stream-index: "012"
      required:
      - id
      - participants
      - participants_count_by_role
      - anonymous_participant_count
      - rejected_by
      - accepted_by
      - missed_by
      type: object
    CallSettings:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettings'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettings'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettings'
          x-stream-index: "007"
        frame_recording:
          $ref: '#/components/schemas/FrameRecordSettings'
          x-stream-index: "006"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettings'
          x-stream-index: "008"
        ingress:
          $ref: '#/components/schemas/IngressSettings'
          x-stream-index: "014"
        limits:
          $ref: '#/components/schemas/LimitsSettings'
          x-stream-index: "012"
        recording:
          $ref: '#/components/schemas/RecordSettings'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettings'
          x-stream-index: "010"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettings'
          x-stream-index: "004"
        session:
          $ref: '#/components/schemas/SessionSettings'
          x-stream-index: "013"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettings'
          x-stream-index: "011"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettings'
          x-stream-index: "009"
        video:
          $ref: '#/components/schemas/VideoSettings'
          x-stream-index: "003"
      type: object
    CallSettingsResponse:
      properties:
        audio:
          $ref: '#/components/schemas/AudioSettingsResponse'
          x-stream-index: "001"
        backstage:
          $ref: '#/components/schemas/BackstageSettingsResponse'
          x-stream-index: "002"
        broadcasting:
          $ref: '#/components/schemas/BroadcastSettingsResponse'
          x-stream-index: "003"
        frame_recording:
          $ref: '#/components/schemas/FrameRecordingSettingsResponse'
          x-stream-index: "006"
        geofencing:
          $ref: '#/components/schemas/GeofenceSettingsResponse'
          x-stream-index: "004"
        ingress:
          $ref: '#/components/schemas/IngressSettingsResponse'
          x-stream-index: "014"
        limits:
          $ref: '#/components/schemas/LimitsSettingsResponse'
          x-stream-index: "012"
        recording:
          $ref: '#/components/schemas/RecordSettingsResponse'
          x-stream-index: "005"
        ring:
          $ref: '#/components/schemas/RingSettingsResponse'
          x-stream-index: "007"
        screensharing:
          $ref: '#/components/schemas/ScreensharingSettingsResponse'
          x-stream-index: "008"
        session:
          $ref: '#/components/schemas/SessionSettingsResponse'
          x-stream-index: "013"
        thumbnails:
          $ref: '#/components/schemas/ThumbnailsSettingsResponse'
          x-stream-index: "011"
        transcription:
          $ref: '#/components/schemas/TranscriptionSettingsResponse'
          x-stream-index: "009"
        video:
          $ref: '#/components/schemas/VideoSettingsResponse'
          x-stream-index: "010"
      required:
      - audio
      - backstage
      - broadcasting
      - geofencing
      - recording
      - frame_recording
      - ring
      - screensharing
      - transcription
      - video
      - thumbnails
      - limits
      - session
      type: object
    CallType:
      nullable: true
      properties:
        AppPK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "003"
        CreatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "005"
        ExternalStorage:
          type: string
          writeOnly: true
          x-stream-index: "009"
        Name:
          type: string
          writeOnly: true
          x-stream-index: "004"
        NotificationSettings:
          $ref: '#/components/schemas/NotificationSettings'
          x-stream-index: "008"
        PK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "002"
        Settings:
          $ref: '#/components/schemas/CallSettings'
          x-stream-index: "007"
        UpdatedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "006"
      required:
      - PK
      - AppPK
      - Name
      - CreatedAt
      - UpdatedAt
      - ExternalStorage
      type: object
    CastPollVoteRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
        vote:
          $ref: '#/components/schemas/VoteData'
          description: Vote data
          title: VoteData
          x-stream-index: "004"
      type: object
    Channel:
      properties:
        active_live_locations:
          items:
            $ref: '#/components/schemas/SharedLocation'
          type: array
          x-stream-index: "035"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "030"
        auto_translation_language:
          type: string
          x-stream-index: "031"
        cid:
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfig'
          x-stream-index: "027"
        config_overrides:
          $ref: '#/components/schemas/ConfigOverrides'
          x-stream-index: "028"
        cooldown:
          format: int32
          type: integer
          x-stream-index: "032"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "019"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        disabled:
          type: boolean
          x-stream-index: "017"
        frozen:
          type: boolean
          x-stream-index: "016"
        id:
          type: string
          x-stream-index: "004"
        invites:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "023"
        last_campaigns:
          type: string
          x-stream-index: "033"
        last_message_at:
          format: date-time
          type: number
          x-stream-index: "006"
        member_count:
          format: int32
          type: integer
          x-stream-index: "021"
        members:
          items:
            $ref: '#/components/schemas/ChannelMember'
          type: array
          x-stream-index: "020"
        members_lookup:
          additionalProperties:
            $ref: '#/components/schemas/ChannelMemberLookup'
          type: object
          x-stream-index: "022"
        message_count:
          format: int64
          type: integer
          x-stream-index: "036"
        message_count_updated_at:
          format: date-time
          type: number
          x-stream-index: "037"
        team:
          type: string
          x-stream-index: "029"
        truncated_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "015"
        type:
          type: string
          x-stream-index: "005"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
      required:
      - cid
      - id
      - type
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      - auto_translation_language
      type: object
    ChannelConfig:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "001.027"
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: "001.022"
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: "001.023"
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: "001.028"
        blocklist:
          type: string
          x-stream-index: "001.024"
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: "001.025"
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: "001.026"
        commands:
          items:
            type: string
          type: array
          x-stream-index: "003"
        connect_events:
          type: boolean
          x-stream-index: "001.004"
        count_messages:
          type: boolean
          x-stream-index: "001.019"
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.003"
        custom_events:
          type: boolean
          x-stream-index: "001.012"
        mark_messages_pending:
          type: boolean
          x-stream-index: "001.015"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "001.021"
        mutes:
          type: boolean
          x-stream-index: "001.009"
        name:
          type: string
          x-stream-index: "001.001"
        partition_size:
          format: int32
          type: integer
          x-stream-index: "001.029"
        partition_ttl:
          type: integer
          x-stream-index: "001.030"
        polls:
          type: boolean
          x-stream-index: "001.016"
        push_notifications:
          type: boolean
          x-stream-index: "001.013"
        quotes:
          type: boolean
          x-stream-index: "001.008"
        reactions:
          type: boolean
          x-stream-index: "001.006"
        read_events:
          type: boolean
          x-stream-index: "001.003"
        reminders:
          type: boolean
          x-stream-index: "001.014"
        replies:
          type: boolean
          x-stream-index: "001.007"
        search:
          type: boolean
          x-stream-index: "001.005"
        shared_locations:
          type: boolean
          x-stream-index: "001.018"
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: "001.031"
        typing_events:
          type: boolean
          x-stream-index: "001.002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "002.004"
        uploads:
          type: boolean
          x-stream-index: "001.010"
        url_enrichment:
          type: boolean
          x-stream-index: "001.011"
        user_message_reminders:
          type: boolean
          x-stream-index: "001.017"
      required:
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - user_message_reminders
      - shared_locations
      - count_messages
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - created_at
      - updated_at
      - commands
      type: object
    ChannelConfigWithInfo:
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: 001.002.027
        automod:
          enum:
          - disabled
          - simple
          - AI
          type: string
          x-stream-index: 001.002.022
        automod_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.023
        automod_thresholds:
          $ref: '#/components/schemas/Thresholds'
          x-stream-index: 001.002.028
        blocklist:
          type: string
          x-stream-index: 001.002.024
        blocklist_behavior:
          enum:
          - flag
          - block
          - shadow_block
          type: string
          x-stream-index: 001.002.025
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListOptions'
          type: array
          x-stream-index: 001.002.026
        commands:
          items:
            $ref: '#/components/schemas/Command'
          type: array
          x-stream-index: "001.003"
        connect_events:
          type: boolean
          x-stream-index: 001.002.004
        count_messages:
          type: boolean
          x-stream-index: 001.002.019
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.003
        custom_events:
          type: boolean
          x-stream-index: 001.002.012
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "002"
        mark_messages_pending:
          type: boolean
          x-stream-index: 001.002.015
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: 001.002.021
        mutes:
          type: boolean
          x-stream-index: 001.002.009
        name:
          type: string
          x-stream-index: 001.002.001
        partition_size:
          format: int32
          type: integer
          x-stream-index: 001.002.029
        partition_ttl:
          example: 24h
          format: duration
          nullable: true
          type: string
          x-stream-index: 001.002.030
        polls:
          type: boolean
          x-stream-index: 001.002.016
        push_notifications:
          type: boolean
          x-stream-index: 001.002.013
        quotes:
          type: boolean
          x-stream-index: 001.002.008
        reactions:
          type: boolean
          x-stream-index: 001.002.006
        read_events:
          type: boolean
          x-stream-index: 001.002.003
        reminders:
          type: boolean
          x-stream-index: 001.002.014
        replies:
          type: boolean
          x-stream-index: 001.002.007
        search:
          type: boolean
          x-stream-index: 001.002.005
        shared_locations:
          type: boolean
          x-stream-index: 001.002.018
        skip_last_msg_update_for_system_msgs:
          type: boolean
          x-stream-index: 001.002.031
        typing_events:
          type: boolean
          x-stream-index: 001.002.002
        updated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        uploads:
          type: boolean
          x-stream-index: 001.002.010
        url_enrichment:
          type: boolean
          x-stream-index: 001.002.011
        user_message_reminders:
          type: boolean
          x-stream-index: 001.002.017
      required:
      - created_at
      - updated_at
      - name
      - typing_events
      - read_events
      - connect_events
      - search
      - reactions
      - replies
      - quotes
      - mutes
      - uploads
      - url_enrichment
      - custom_events
      - push_notifications
      - reminders
      - mark_messages_pending
      - polls
      - user_message_reminders
      - shared_locations
      - count_messages
      - message_retention
      - max_message_length
      - automod
      - automod_behavior
      - skip_last_msg_update_for_system_msgs
      - commands
      type: object
    ChannelMember:
      nullable: true
      properties:
        archived_at:
          format: date-time
          type: number
          x-stream-index: "015"
        ban_expires:
          description: Expiration date of the ban
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "013"
        banned:
          description: Whether member is banned this channel or not
          title: Banned
          type: boolean
          x-stream-index: "012"
        channel_role:
          description: Role of the member in the channel
          title: Channel Role
          type: string
          x-stream-index: "018"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        deleted_messages:
          items:
            type: string
          type: array
          x-stream-index: "020"
        invite_accepted_at:
          description: Date when invite was accepted
          format: date-time
          title: Invited accepted at
          type: number
          x-stream-index: "006"
        invite_rejected_at:
          description: Date when invite was rejected
          format: date-time
          title: Invited rejected at
          type: number
          x-stream-index: "007"
        invited:
          description: Whether member was invited or not
          title: Invited
          type: boolean
          x-stream-index: "005"
        is_moderator:
          description: Whether member is channel moderator or not
          title: Is moderator
          type: boolean
          x-stream-index: "003"
        notifications_muted:
          type: boolean
          x-stream-index: "019"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "016"
        role:
          description: 'Permission level of the member in the channel (DEPRECATED:
            use channel_role instead)'
          enum:
          - member
          - moderator
          - admin
          - owner
          title: Role
          type: string
          x-stream-index: "017"
        shadow_banned:
          description: Whether member is shadow banned in this channel or not
          title: Shadow banned
          type: boolean
          x-stream-index: "014"
        status:
          type: string
          x-stream-index: "008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        user_id:
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - custom
      - created_at
      - updated_at
      - banned
      - shadow_banned
      - channel_role
      - notifications_muted
      title: Channel member
      type: object
    ChannelMemberLookup:
      nullable: true
      properties:
        archived:
          type: boolean
          x-stream-index: "003"
        archived_at:
          format: date-time
          type: number
          x-stream-index: "006"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "007"
        banned:
          type: boolean
          x-stream-index: "004"
        hidden:
          type: boolean
          x-stream-index: "001"
        pinned:
          type: boolean
          x-stream-index: "002"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "005"
      required:
      - hidden
      - pinned
      - archived
      - banned
      type: object
    ChannelMemberResponse:
      properties:
        channel_role:
          type: string
          x-stream-index: "001"
      required:
      - channel_role
      type: object
    ChannelMute:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          description: Channel that is muted
          title: Channel
          x-stream-index: "002"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: number
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Owner of channel mute
          title: User
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    ChannelOwnCapability:
      description: All possibility of string to use
      enum:
      - ban-channel-members
      - cast-poll-vote
      - connect-events
      - create-attachment
      - delete-any-message
      - delete-channel
      - delete-own-message
      - flag-message
      - freeze-channel
      - join-channel
      - leave-channel
      - mute-channel
      - pin-message
      - query-poll-votes
      - quote-message
      - read-events
      - search-messages
      - send-custom-events
      - send-links
      - send-message
      - send-poll
      - send-reaction
      - send-reply
      - send-restricted-visibility-message
      - send-typing-events
      - set-channel-cooldown
      - share-location
      - skip-slow-mode
      - slow-mode
      - typing-events
      - update-any-message
      - update-channel
      - update-channel-members
      - update-own-message
      - update-thread
      - upload-file
      title: ChannelOwnCapability
      type: string
    ChannelPushPreferences:
      nullable: true
      properties:
        chat_level:
          type: string
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "002"
      type: object
    ChannelResponse:
      description: Represents channel in chat
      properties:
        auto_translation_enabled:
          description: Whether auto translation is enabled or not
          title: Auto translation
          type: boolean
          x-stream-index: "017"
        auto_translation_language:
          description: Language to translate to when auto translation is active
          title: Auto translation language
          type: string
          x-stream-index: "018"
        blocked:
          description: Whether this channel is blocked by current user or not
          title: Blocked
          type: boolean
          x-stream-index: "023"
        cid:
          description: Channel CID (<type>:<id>)
          title: CID
          type: string
          x-stream-index: "003"
        config:
          $ref: '#/components/schemas/ChannelConfigWithInfo'
          description: Channel configuration
          title: ChannelConfigWithInfo
          x-stream-index: "013"
        cooldown:
          description: Cooldown period after sending each message
          format: int32
          title: Cooldown
          type: integer
          x-stream-index: "020"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "005"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: Creator of the channel
          title: UserResponse
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "026"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "007"
        disabled:
          type: boolean
          x-stream-index: "010"
        frozen:
          description: Whether channel is frozen or not
          title: Frozen
          type: boolean
          x-stream-index: "009"
        hidden:
          description: Whether this channel is hidden by current user or not
          title: Hidden
          type: boolean
          x-stream-index: "022"
        hide_messages_before:
          description: Date since when the message history is accessible
          format: date-time
          title: Hide messages before
          type: number
          x-stream-index: "019"
        id:
          description: Channel unique ID
          title: ID
          type: string
          x-stream-index: "001"
        last_message_at:
          description: Date of the last message sent
          format: date-time
          title: Last message at
          type: number
          x-stream-index: "004"
        member_count:
          description: Number of members in the channel
          format: int32
          title: Member count
          type: integer
          x-stream-index: "012"
        members:
          description: List of channel members (max 100)
          items:
            $ref: '#/components/schemas/ChannelMember'
          title: ChannelMembers
          type: array
          x-stream-index: "011"
        message_count:
          description: Number of messages in the channel
          format: int64
          title: Message count
          type: integer
          x-stream-index: "027"
        mute_expires_at:
          description: Date of mute expiration
          format: date-time
          title: Mute expires at
          type: number
          x-stream-index: "015"
        muted:
          description: Whether this channel is muted or not
          title: Muted
          type: boolean
          x-stream-index: "014"
        own_capabilities:
          description: List of channel capabilities of authenticated user
          items:
            $ref: '#/components/schemas/ChannelOwnCapability'
          title: ChannelOwnCapability
          type: array
          x-stream-index: "021"
        team:
          description: Team the channel belongs to (multi-tenant only)
          title: Team
          type: string
          x-stream-index: "016"
        truncated_at:
          description: Date of the latest truncation of the channel
          format: date-time
          title: UserResponse
          type: number
          x-stream-index: "024"
        truncated_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "025"
        type:
          description: Type of the channel
          title: Type
          type: string
          x-stream-docs-page-id: channel_features
          x-stream-index: "002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "006"
      required:
      - id
      - type
      - cid
      - created_at
      - updated_at
      - frozen
      - disabled
      - custom
      title: Channel
      type: object
    CheckExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        file_url:
          type: string
          x-stream-index: "002"
      required:
      - duration
      - file_url
      title: Response
      type: object
    CheckPushRequest:
      description: Check push request
      nullable: true
      properties:
        apn_template:
          description: Push message template for APN
          title: APN template
          type: string
          x-stream-docs-page-id: push_template
          x-stream-index: "002"
        event_type:
          description: 'Type of event for push templates (default: message.new)'
          enum:
          - message.new
          - message.updated
          - reaction.new
          - reaction.updated
          - notification.reminder_due
          title: Event type
          type: string
          x-stream-index: "008"
        firebase_data_template:
          description: Push message data template for Firebase
          title: Firebase data template
          type: string
          x-stream-docs-page-id: push_template
          x-stream-index: "004"
        firebase_template:
          description: Push message template for Firebase
          title: Firebase template
          type: string
          x-stream-docs-page-id: push_template
          x-stream-index: "003"
        message_id:
          description: Message ID to send push notification for
          title: Message ID
          type: string
          x-stream-index: "001"
        push_provider_name:
          description: Name of push provider
          title: Name of push provider
          type: string
          x-stream-index: "007"
        push_provider_type:
          description: Push provider type
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          title: Type of push provider
          type: string
          x-stream-index: "006"
        skip_devices:
          description: Don't require existing devices to render templates
          title: Skip devices
          type: boolean
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "009.002"
        user_id:
          type: string
          x-stream-index: "009.001"
      title: CheckPushRequest
      type: object
    CheckPushResponse:
      nullable: true
      properties:
        device_errors:
          additionalProperties:
            $ref: '#/components/schemas/DeviceErrorInfo'
          description: Object with device errors
          title: Device errors
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: device_id
        duration:
          type: string
          x-stream-index: "008.001"
        event_type:
          description: The event type that was tested
          title: Event type
          type: string
          x-stream-index: "004"
        general_errors:
          description: List of general errors
          items:
            type: string
          title: General errors
          type: array
          x-stream-index: "002"
        rendered_apn_template:
          title: Rendered APN template
          type: string
          x-stream-index: "005"
        rendered_firebase_template:
          title: Rendered Firebase template
          type: string
          x-stream-index: "006"
        rendered_message:
          additionalProperties:
            type: string
          title: Rendered message
          type: object
          x-stream-index: "007"
        skip_devices:
          description: Don't require existing devices to render templates
          title: Skip devices
          type: boolean
          x-stream-index: "003"
      required:
      - duration
      type: object
    CheckRequest:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ModerationConfig'
          description: Custom moderation configuration (test mode only)
          title: Config
          x-stream-index: "009"
        config_key:
          description: Key of the moderation configuration to use
          title: Config Key
          type: string
          x-stream-index: "005"
        config_team:
          description: Team associated with the configuration
          title: Config Team
          type: string
          x-stream-index: "006"
        entity_creator_id:
          description: ID of the user who created the entity
          title: Entity Creator ID
          type: string
          x-stream-index: "003"
        entity_id:
          description: Unique identifier of the entity to moderate
          title: Entity ID
          type: string
          x-stream-index: "002"
        entity_type:
          description: Type of entity to moderate
          title: Entity Type
          type: string
          x-stream-index: "001"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content to be moderated
          title: Moderation Payload
          x-stream-index: "004"
        options:
          additionalProperties: {}
          description: Additional moderation configuration options
          title: Options
          type: object
          x-stream-index: "007"
        test_mode:
          description: Whether to run moderation in test mode
          title: Test Mode
          type: boolean
          x-stream-index: "008"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "010.002"
        user_id:
          type: string
          x-stream-index: "010.001"
      required:
      - entity_type
      - entity_id
      - entity_creator_id
      type: object
    CheckResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "005.001"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Review queue item (present if action != keep)
          title: Item
          x-stream-index: "004"
        recommended_action:
          description: Suggested action based on moderation results
          title: Recommended Action
          type: string
          x-stream-index: "003"
        status:
          description: Status of the moderation check (completed or pending)
          title: Status
          type: string
          x-stream-index: "001"
        task_id:
          description: ID of the running moderation task
          title: Task ID
          type: string
          x-stream-index: "002"
      required:
      - status
      - recommended_action
      - duration
      type: object
    CheckSNSRequest:
      nullable: true
      properties:
        sns_key:
          description: AWS SNS access key
          title: SNS key
          type: string
          x-stream-index: "002"
        sns_secret:
          description: AWS SNS key secret
          title: SNS secret
          type: string
          x-stream-index: "003"
        sns_topic_arn:
          description: AWS SNS topic ARN
          title: SNS Topic ARN
          type: string
          x-stream-index: "001"
      type: object
    CheckSNSResponse:
      nullable: true
      properties:
        data:
          additionalProperties: {}
          description: Error data
          title: ReadOnlyData
          type: object
          x-stream-index: "003"
        duration:
          type: string
          x-stream-index: "004.001"
        error:
          description: Error text
          title: Error
          type: string
          x-stream-index: "002"
        status:
          description: Validation result
          enum:
          - ok
          - error
          title: Status
          type: string
          x-stream-index: "001"
      required:
      - status
      - duration
      type: object
    CheckSQSRequest:
      nullable: true
      properties:
        sqs_key:
          description: AWS SQS access key
          title: SQS key
          type: string
          x-stream-index: "002"
        sqs_secret:
          description: AWS SQS key secret
          title: SQS secret
          type: string
          x-stream-index: "003"
        sqs_url:
          description: AWS SQS endpoint URL
          title: SQS URL
          type: string
          x-stream-index: "001"
      type: object
    CheckSQSResponse:
      nullable: true
      properties:
        data:
          additionalProperties: {}
          description: Error data
          title: ReadOnlyData
          type: object
          x-stream-index: "003"
        duration:
          type: string
          x-stream-index: "004.001"
        error:
          description: Error text
          title: Error
          type: string
          x-stream-index: "002"
        status:
          description: Validation result
          enum:
          - ok
          - error
          title: Status
          type: string
          x-stream-index: "001"
      required:
      - status
      - duration
      type: object
    Command:
      description: Represents custom chat command
      nullable: true
      properties:
        args:
          description: Arguments help text, shown in commands auto-completion
          title: Arguments
          type: string
          x-stream-index: "006"
        created_at:
          description: Date/time of creation
          format: date-time
          readOnly: true
          title: Created at
          type: number
          x-stream-index: "001"
        description:
          description: Description, shown in commands auto-completion
          title: Description
          type: string
          x-stream-index: "005"
        name:
          description: Unique command name
          title: Name
          type: string
          x-stream-index: "004"
        set:
          description: Set name used for grouping commands
          title: Set
          type: string
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          readOnly: true
          title: Updated at
          type: number
          x-stream-index: "002"
      required:
      - name
      - description
      - args
      - set
      title: Command
      type: object
    CommentAddedEvent:
      description: Emitted when a comment is added to an activity.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "002"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment that was added
          title: Text
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.comment.added
          description: 'The type of event: "feeds.comment.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the comment
          title: User
          x-stream-index: "004.001"
      required:
      - comment
      - activity
      - type
      - created_at
      - custom
      - fid
      title: CommentAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentDeletedEvent:
      description: Emitted when a comment is deleted.
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.comment.deleted
          description: 'The type of event: "feeds.comment.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who deleted the comment
          title: User
          x-stream-index: "003.001"
      required:
      - comment
      - type
      - created_at
      - custom
      - fid
      title: CommentDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentReactionAddedEvent:
      description: Emitted when a reaction is added to a comment.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "003"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 004.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 004.001.007
        feed_visibility:
          type: string
          x-stream-index: "004.003"
        fid:
          type: string
          x-stream-index: "004.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was added
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 004.001.004
        type:
          default: feeds.comment.reaction.added
          description: 'The type of event: "feeds.comment.reaction.added" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 004.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the reaction
          title: User
          x-stream-index: "005.001"
      required:
      - comment
      - reaction
      - activity
      - type
      - created_at
      - custom
      - fid
      title: CommentReactionAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentReactionDeletedEvent:
      description: Emitted when a reaction is deleted from a comment.
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.comment.reaction.deleted
          description: The type of reaction that was removed
          title: Type
          type: string
          x-stream-index: 003.001.002
      required:
      - comment
      - reaction
      - type
      - created_at
      - custom
      - fid
      title: CommentReactionDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentReactionUpdatedEvent:
      description: Emitted when a reaction is updated on a comment.
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "003"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 004.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 004.001.007
        feed_visibility:
          type: string
          x-stream-index: "004.003"
        fid:
          type: string
          x-stream-index: "004.002"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The reaction that was updated
          title: Reaction
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 004.001.004
        type:
          default: feeds.comment.reaction.updated
          description: 'The type of event: "feeds.comment.reaction.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 004.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the reaction
          title: User
          x-stream-index: "005.001"
      required:
      - comment
      - reaction
      - activity
      - type
      - created_at
      - custom
      - fid
      title: CommentReactionUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CommentResponse:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "011"
        confidence_score:
          description: Confidence score of the comment
          format: float
          title: Confidence Score
          type: number
          x-stream-index: "022"
        controversy_score:
          description: Controversy score of the comment
          format: float
          title: Controversy Score
          type: number
          x-stream-index: "023"
        created_at:
          description: When the comment was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "014"
        custom:
          additionalProperties: {}
          description: Custom data for the comment
          title: Custom Data
          type: object
          x-stream-index: "006"
        deleted_at:
          description: When the comment was deleted
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "016"
        downvote_count:
          description: Number of downvotes for this comment
          format: int32
          title: Downvote Count
          type: integer
          x-stream-index: "020"
        id:
          description: Unique identifier for the comment
          title: ID
          type: string
          x-stream-index: "001"
        latest_reactions:
          description: Recent reactions to the comment
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Latest Reactions
          type: array
          x-stream-index: "009"
        mentioned_users:
          description: Users mentioned in the comment
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mention Users
          type: array
          x-stream-index: "012"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "017"
        object_id:
          description: ID of the object this comment is associated with
          title: Object ID
          type: string
          x-stream-index: "002"
        object_type:
          description: Type of the object this comment is associated with
          title: Object Type
          type: string
          x-stream-index: "003"
        own_reactions:
          description: Current user's reactions to this activity
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          title: Own Reactions
          type: array
          x-stream-index: "024"
        parent_id:
          description: ID of parent comment for nested replies
          title: Parent ID
          type: string
          x-stream-index: "007"
        reaction_count:
          description: Number of reactions to this comment
          format: int32
          title: Reaction Count
          type: integer
          x-stream-index: "008"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          description: Grouped reactions by type
          title: Reaction Groups
          type: object
          x-stream-index: "010"
        reply_count:
          description: Number of replies to this comment
          format: int32
          title: Reply Count
          type: integer
          x-stream-index: "018"
        score:
          description: Score of the comment based on reactions
          format: int32
          title: Score
          type: integer
          x-stream-index: "021"
        status:
          description: Status of the comment (e.g., active, deleted)
          title: Status
          type: string
          x-stream-index: "013"
        text:
          description: Text content of the comment
          title: Text
          type: string
          x-stream-index: "005"
        updated_at:
          description: When the comment was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "015"
        upvote_count:
          description: Number of upvotes for this comment
          format: int32
          title: Upvote Count
          type: integer
          x-stream-index: "019"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the comment
          title: User
          x-stream-index: "004"
      required:
      - id
      - object_id
      - object_type
      - user
      - reaction_count
      - mentioned_users
      - status
      - created_at
      - updated_at
      - reply_count
      - upvote_count
      - downvote_count
      - score
      - confidence_score
      - own_reactions
      title: Comment
      type: object
    CommentUpdatedEvent:
      description: Emitted when a comment is updated.
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment that was updated
          title: Text
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.comment.updated
          description: 'The type of event: "feeds.comment.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the comment
          title: User
          x-stream-index: "003.001"
      required:
      - comment
      - type
      - created_at
      - custom
      - fid
      title: CommentUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    CompositeAppSettings:
      properties:
        json_encoded_settings:
          type: string
          x-stream-index: "005"
        url:
          type: string
          x-stream-index: "004"
      type: object
    ConfigOverrides:
      properties:
        blocklist:
          type: string
          x-stream-index: "008"
        blocklist_behavior:
          enum:
          - flag
          - block
          type: string
          x-stream-index: "009"
        commands:
          items:
            type: string
          type: array
          x-stream-index: "011"
        count_messages:
          type: boolean
          x-stream-index: "014"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "010"
        max_message_length:
          format: int32
          maximum: 20000
          type: integer
          x-stream-index: "007"
        quotes:
          type: boolean
          x-stream-index: "004"
        reactions:
          type: boolean
          x-stream-index: "002"
        replies:
          type: boolean
          x-stream-index: "003"
        shared_locations:
          type: boolean
          x-stream-index: "013"
        typing_events:
          type: boolean
          x-stream-index: "001"
        uploads:
          type: boolean
          x-stream-index: "005"
        url_enrichment:
          type: boolean
          x-stream-index: "006"
        user_message_reminders:
          type: boolean
          x-stream-index: "012"
      required:
      - grants
      - commands
      type: object
    ConfigResponse:
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          description: Configuration for AI image analysis
          title: AI Image Config
          x-stream-index: "010"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          description: Configuration for AI text analysis
          title: AI Text Config
          x-stream-index: "008"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          description: Configuration for AI video analysis
          title: AI Video Config
          x-stream-index: "011"
        async:
          description: Whether moderation should be performed asynchronously
          title: Async
          type: boolean
          x-stream-index: "003"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          description: Configuration for platform circumvention detection
          title: Automod Platform Circumvention Config
          x-stream-index: "005"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          description: Configuration for semantic filtering
          title: Automod Semantic Filters Config
          x-stream-index: "006"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          description: Configuration for toxicity detection
          title: Automod Toxicity Config
          x-stream-index: "004"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          description: Configuration for block list filtering
          title: Block List Config
          x-stream-index: "007"
        created_at:
          description: When the configuration was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "013"
        key:
          description: Unique identifier for the moderation configuration
          title: Key
          type: string
          x-stream-index: "001"
        llm_config:
          $ref: '#/components/schemas/LLMConfig'
          description: Configuration for customer-configured LLM moderation
          title: LLM Config
          x-stream-index: "009"
        supported_video_call_harm_types:
          items:
            type: string
          type: array
          x-stream-index: "016"
        team:
          description: Team associated with the configuration
          title: Team
          type: string
          x-stream-index: "002"
        updated_at:
          description: When the configuration was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "014"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          description: Configuration for velocity-based filtering
          title: Velocity Filter Config
          x-stream-index: "012"
        video_call_rule_config:
          $ref: '#/components/schemas/VideoCallRuleConfig'
          x-stream-index: "015"
      required:
      - key
      - team
      - async
      - created_at
      - updated_at
      - supported_video_call_harm_types
      type: object
    ContentCountRuleParameters:
      properties:
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    CreateBlockListRequest:
      description: Block list contains restricted words
      nullable: true
      properties:
        name:
          description: Block list name
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "001"
        team:
          type: string
          x-stream-index: "004"
        type:
          description: Block list type.
          enum:
          - regex
          - domain
          - domain_allowlist
          - email
          - word
          title: Type
          type: string
          x-stream-index: "003"
        words:
          description: List of words to block
          items:
            type: string
          minimum: 1
          title: Words
          type: array
          x-stream-index: "002"
      required:
      - name
      - words
      title: Block list
      type: object
      x-stream-docs-page-id: block_lists
    CreateBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklist:
          $ref: '#/components/schemas/BlockListResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    CreateDeviceRequest:
      description: Create device request
      nullable: true
      properties:
        id:
          description: Device ID
          maxLength: 255
          minLength: 1
          title: ID
          type: string
          x-stream-index: "001"
        push_provider:
          description: Push provider
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          title: PushProvider
          type: string
          x-stream-index: "002"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          x-stream-index: "005.001"
        voip_token:
          description: When true the token is for Apple VoIP push notifications
          title: VoipToken
          type: boolean
          x-stream-index: "004"
      required:
      - id
      - push_provider
      title: CreateDeviceRequest
      type: object
    CreateExternalStorageRequest:
      description: Create external storage
      nullable: true
      properties:
        aws_s3:
          $ref: '#/components/schemas/S3Request'
          description: Only required if you want to create an Amazon S3 storage
          title: AwsS3
          x-stream-index: "003.004"
        azure_blob:
          $ref: '#/components/schemas/AzureRequest'
          description: Only required if you want to create an Azure Blob Storage
          title: AzureBlob
          x-stream-index: "003.006"
        bucket:
          description: The name of the bucket on the service provider
          title: Bucket
          type: string
          x-stream-index: "003.002"
        gcs_credentials:
          type: string
          x-stream-index: "003.005"
        name:
          description: The name of the provider, this must be unique
          title: Name
          type: string
          x-stream-index: "001"
        path:
          description: The path prefix to use for storing files
          title: Path
          type: string
          x-stream-index: "003.003"
        storage_type:
          description: The type of storage to use
          enum:
          - s3
          - gcs
          - abs
          title: StorageType
          type: string
          x-stream-index: "003.001"
      required:
      - name
      - storage_type
      - bucket
      title: CreateExternalStorageRequest
      type: object
    CreateExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    CreateFeedGroupRequest:
      nullable: true
      properties:
        activity_processors:
          description: Configuration for activity processors (max 10)
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          maximum: 10
          title: Activity Processors
          type: array
          x-stream-index: "006"
        activity_selectors:
          description: Configuration for activity selectors (max 10)
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          maximum: 10
          title: Activity Selectors
          type: array
          x-stream-index: "007"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for activity aggregation
          title: Aggregation
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          description: Custom data for the feed group
          title: Custom Data
          type: object
          x-stream-index: "004"
        default_visibility:
          description: 'Default visibility for the feed group, can be ''public'',
            ''visible'', ''followers'', ''members'', or ''private''. Defaults to ''visible''
            if not provided. '
          enum:
          - public
          - visible
          - followers
          - members
          - private
          title: Default Visibility
          type: string
          x-stream-index: "005"
        id:
          description: Unique identifier for the feed group
          maxLength: 255
          title: Feed Group ID
          type: string
          x-stream-index: "001"
        notification:
          $ref: '#/components/schemas/NotificationConfig'
          description: Configuration for notifications
          title: Notification
          x-stream-index: "002"
        push_notification:
          $ref: '#/components/schemas/PushNotificationConfig'
          x-stream-index: "003"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for activity ranking
          title: Ranking
          x-stream-index: "008"
      required:
      - id
      title: Create Feed Group Request
      type: object
    CreateFeedGroupResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_group:
          $ref: '#/components/schemas/FeedGroupResponse'
          description: The upserted feed group
          title: Feed Group
          x-stream-index: "001"
      required:
      - feed_group
      - duration
      title: Upsert Feed Group Response
      type: object
    CreateFeedViewRequest:
      nullable: true
      properties:
        activity_processors:
          description: Configured activity Processors
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          title: Activity Processors
          type: array
          x-stream-index: "002.002"
        activity_selectors:
          description: Configuration for selecting activities
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          title: Activity Selectors
          type: array
          x-stream-index: "002.001"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for aggregating activities
          title: Aggregation
          x-stream-index: "002.004"
        id:
          description: Unique identifier for the feed view
          maxLength: 255
          title: View ID
          type: string
          x-stream-index: "001"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for ranking activities
          title: Ranking
          x-stream-index: "002.003"
      required:
      - id
      title: Create Feed View Request
      type: object
    CreateFeedViewResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_view:
          $ref: '#/components/schemas/FeedViewResponse'
          description: The created feed view
          title: Feed View
          x-stream-index: "001"
      required:
      - feed_view
      - duration
      title: Create Feed View Response
      type: object
    CreateFeedsBatchRequest:
      nullable: true
      properties:
        feeds:
          description: List of feeds to create
          items:
            $ref: '#/components/schemas/FeedRequest'
          maximum: 1000
          minimum: 1
          title: Feeds
          type: array
          x-stream-index: "001"
      required:
      - feeds
      title: Create Feeds Batch Request
      type: object
    CreateFeedsBatchResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feeds:
          description: List of created feeds
          items:
            $ref: '#/components/schemas/FeedResponse'
          title: Feeds
          type: array
          x-stream-index: "001"
      required:
      - feeds
      - duration
      title: Create Feeds Batch Response
      type: object
    CreateGuestRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      type: object
    CreateGuestResponse:
      nullable: true
      properties:
        access_token:
          description: the access token to authenticate the user
          title: Access token
          type: string
          x-stream-index: "002"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User object which server acts upon
          title: User
          x-stream-index: "001"
      required:
      - user
      - access_token
      - duration
      type: object
    CreateImportRequest:
      nullable: true
      properties:
        mode:
          enum:
          - insert
          - upsert
          type: string
          x-stream-index: "002"
        path:
          type: string
          x-stream-index: "001"
      required:
      - path
      - mode
      type: object
    CreateImportResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        import_task:
          $ref: '#/components/schemas/ImportTask'
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    CreateImportURLRequest:
      nullable: true
      properties:
        filename:
          type: string
          x-stream-index: "001"
      type: object
    CreateImportURLResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        path:
          type: string
          x-stream-index: "001"
        upload_url:
          type: string
          x-stream-index: "002"
      required:
      - path
      - upload_url
      - duration
      title: Response
      type: object
    CreateMembershipLevelRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the membership level
          title: Custom Data
          type: object
          x-stream-index: "006"
        description:
          description: Optional description of the membership level
          maxLength: 1000
          title: Description
          type: string
          x-stream-index: "003"
        id:
          description: Unique identifier for the membership level
          maxLength: 255
          title: ID
          type: string
          x-stream-index: "001"
        name:
          description: Display name for the membership level
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "002"
        priority:
          description: Priority level (higher numbers = higher priority)
          format: int32
          minimum: 0
          title: Priority
          type: integer
          x-stream-index: "004"
        tags:
          description: Activity tags this membership level gives access to
          items:
            type: string
          maximum: 255
          title: Tags
          type: array
          x-stream-index: "005"
      required:
      - id
      - name
      title: Create Membership Level Request
      type: object
    CreateMembershipLevelResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        membership_level:
          $ref: '#/components/schemas/MembershipLevelResponse'
          description: The created membership level
          title: Membership Level
          x-stream-index: "001"
      required:
      - membership_level
      - duration
      title: Create Membership Level Response
      type: object
    CreatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "003"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      required:
      - text
      type: object
    CreatePollRequest:
      description: Contains all information needed to create a new poll
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Indicates whether users can suggest user defined answers
          title: Allow answers
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "008"
        description:
          description: A description of the poll
          title: Description
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Indicates whether users can cast multiple votes
          title: Multiple choice
          type: boolean
          x-stream-index: "006"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        is_closed:
          description: Indicates whether the poll is open for voting
          title: Is closed
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Indicates the maximum amount of votes a user can cast
          format: int32
          maximum: 10
          title: Maximum votes allowed
          type: integer
          x-stream-index: "007"
        name:
          description: The name of the poll
          title: Name
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionInput'
          maximum: 100
          type: array
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "012.002"
        user_id:
          type: string
          x-stream-index: "012.001"
        voting_visibility:
          enum:
          - anonymous
          - public
          type: string
          x-stream-index: "005"
      required:
      - name
      title: Create Poll Request
      type: object
    CreateRoleRequest:
      nullable: true
      properties:
        name:
          description: Role name
          maxLength: 64
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      type: object
    CreateRoleResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        role:
          $ref: '#/components/schemas/Role'
          x-stream-index: "002"
      required:
      - duration
      - role
      title: Response
      type: object
    CustomActionRequest:
      properties:
        id:
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      type: object
    CustomCheckFlag:
      properties:
        custom:
          additionalProperties: {}
          description: Additional metadata for the flag
          title: Custom
          type: object
          x-stream-index: "003"
        labels:
          description: Labels from various moderation sources
          items:
            type: string
          title: Labels
          type: array
          x-stream-index: "004"
        reason:
          description: Optional explanation for the flag
          title: Reason
          type: string
          x-stream-index: "002"
        type:
          description: Type of check (custom_check_text, custom_check_image, custom_check_video)
          maxLength: 255
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - type
      type: object
    CustomCheckRequest:
      nullable: true
      properties:
        entity_creator_id:
          description: ID of the user who created the entity (required for non-message
            entities)
          title: Entity Creator ID
          type: string
          x-stream-index: "003"
        entity_id:
          description: Unique identifier of the entity
          title: Entity ID
          type: string
          x-stream-index: "002"
        entity_type:
          description: Type of entity to perform custom check on
          title: Entity Type
          type: string
          x-stream-index: "001"
        flags:
          description: List of custom check flags (1-10 flags required)
          items:
            $ref: '#/components/schemas/CustomCheckFlag'
          maximum: 10
          minimum: 1
          title: Flags
          type: array
          x-stream-index: "005"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content to be checked (required for non-message entities)
          title: Moderation Payload
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "006.002"
        user_id:
          type: string
          x-stream-index: "006.001"
      required:
      - entity_type
      - entity_id
      - flags
      type: object
    CustomCheckResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "004.001"
        id:
          description: Unique identifier of the custom check
          title: ID
          type: string
          x-stream-index: "001"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Review queue item details
          title: Item
          x-stream-index: "002"
        status:
          description: Status of the custom check
          title: Status
          type: string
          x-stream-index: "003"
      required:
      - id
      - status
      - duration
      type: object
    Data:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    DataDogInfo:
      properties:
        api_key:
          type: string
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "003"
        site:
          type: string
          x-stream-index: "002"
      type: object
    DeactivateUserRequest:
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who deactivated the user
          title: Created by ID
          type: string
          x-stream-index: "003"
        mark_messages_deleted:
          description: Makes messages appear to be deleted
          title: Mark messages deleted
          type: boolean
          x-stream-index: "002"
      type: object
    DeactivateUserResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Deactivated user object
          title: User
          x-stream-index: "001"
      required:
      - duration
      type: object
    DeactivateUsersRequest:
      description: Deactivate users request
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who deactivated the users
          title: Created by ID
          type: string
          x-stream-index: "003"
        mark_channels_deleted:
          type: boolean
          x-stream-index: "004"
        mark_messages_deleted:
          description: Makes messages appear to be deleted
          title: Mark messages deleted
          type: boolean
          x-stream-index: "002"
        user_ids:
          description: User IDs to deactivate
          items:
            type: string
          maximum: 100
          minimum: 1
          title: User IDs
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      title: DeactivateUsersRequest
      type: object
    DeactivateUsersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      title: Response
      type: object
    DecayFunctionConfig:
      properties:
        base:
          description: Base value for decay function
          title: Base
          type: string
          x-stream-index: "001"
        decay:
          description: Decay rate
          title: Decay
          type: string
          x-stream-index: "005"
        direction:
          description: Direction of decay
          title: Direction
          type: string
          x-stream-index: "006"
        offset:
          description: Offset value for decay function
          title: Offset
          type: string
          x-stream-index: "004"
        origin:
          description: Origin value for decay function
          title: Origin
          type: string
          x-stream-index: "002"
        scale:
          description: Scale factor for decay function
          title: Scale
          type: string
          x-stream-index: "003"
      title: Decay Function Configuration
      type: object
    DeleteActivitiesRequest:
      nullable: true
      properties:
        hard_delete:
          description: Whether to permanently delete the activities
          title: Hard Delete
          type: boolean
          x-stream-index: "002"
        ids:
          description: List of activity IDs to delete
          items:
            type: string
          minimum: 1
          title: Activity IDs
          type: array
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      required:
      - ids
      title: Delete Activities Request
      type: object
    DeleteActivitiesResponse:
      nullable: true
      properties:
        deleted_ids:
          description: List of activity IDs that were successfully deleted
          items:
            type: string
          title: Deleted Activity IDs
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - deleted_ids
      - duration
      title: Delete Activities Response
      type: object
    DeleteActivityReactionResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          x-stream-index: "002"
      required:
      - activity
      - reaction
      - duration
      title: Delete Activity Reaction Response
      type: object
    DeleteActivityRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteActivityResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Delete Activity Response
      type: object
    DeleteBookmarkFolderResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Delete Bookmark Folder Response
      type: object
    DeleteBookmarkResponse:
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The deleted bookmark
          title: Bookmark
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark
      - duration
      title: Delete Bookmark Response
      type: object
    DeleteCommentReactionResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The comment after reaction removal
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        reaction:
          $ref: '#/components/schemas/FeedsReactionResponse'
          description: The removed reaction
          title: Reaction
          x-stream-index: "002"
      required:
      - comment
      - reaction
      - duration
      title: Delete Comment Reaction Response
      type: object
    DeleteCommentResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The parent activity
          title: Activity
          x-stream-index: "002"
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The deleted comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
      required:
      - comment
      - activity
      - duration
      title: Delete Comment Response
      type: object
    DeleteExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteFeedGroupResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteFeedResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        task_id:
          description: The ID of the async task that will handle feed cleanup and
            hard deletion
          title: string
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      title: Delete Feed Response
      type: object
    DeleteFeedUserDataResponse:
      description: Response for deleting feed user data
      nullable: true
      properties:
        deleted_activities:
          description: Number of activities that were deleted
          format: int32
          title: Deleted Activities
          type: integer
          x-stream-index: "001"
        deleted_bookmarks:
          description: Number of bookmarks that were deleted
          format: int32
          title: Deleted Bookmarks
          type: integer
          x-stream-index: "004"
        deleted_comments:
          description: Number of comments that were deleted
          format: int32
          title: Deleted Comments
          type: integer
          x-stream-index: "003"
        deleted_reactions:
          description: Number of reactions that were deleted
          format: int32
          title: Deleted Reactions
          type: integer
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "005.001"
      required:
      - deleted_activities
      - deleted_reactions
      - deleted_comments
      - deleted_bookmarks
      - duration
      type: object
    DeleteFeedViewResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Delete Feed View Response
      type: object
    DeleteMessageRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteModerationConfigResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    DeleteModerationRuleResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      title: Response
      type: object
    DeleteModerationTemplateResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    DeleteReactionRequest:
      properties:
        hard_delete:
          type: boolean
          x-stream-index: "001"
      type: object
    DeleteUserRequest:
      properties:
        delete_conversation_channels:
          type: boolean
          x-stream-index: "003"
        delete_feeds_content:
          type: boolean
          x-stream-index: "004"
        hard_delete:
          type: boolean
          x-stream-index: "001"
        mark_messages_deleted:
          type: boolean
          x-stream-index: "002"
      type: object
    DeleteUsersRequest:
      nullable: true
      properties:
        calls:
          description: |
            Calls delete mode.
            Affected calls are those that include exactly two members, one of whom is the user being deleted.

            * null or empty string - doesn't delete any calls
            * soft - marks user's calls and their related data as deleted (soft-delete)
            * hard - deletes user's calls and their data completely (hard-delete)
          enum:
          - soft
          - hard
          title: Delete User's calls
          type: string
          x-stream-index: 001.002.004
        conversations:
          description: |
            Conversation channels delete mode.
            Conversation channel is any channel which only has two members one of which is the user being deleted.

            * null or empty string - doesn't delete any conversation channels
            * soft - marks all conversation channels as deleted (same effect as Delete Channels with 'hard' option disabled)
            * hard - deletes channel and all its data completely including messages (same effect as Delete Channels with 'hard' option enabled)
          enum:
          - soft
          - hard
          title: Delete Conversations
          type: string
          x-stream-index: 001.002.003
        files:
          description: |
            Delete user files.
            * false or empty string - doesn't delete any files
            * true - deletes all files uploaded by the user, including images and attachments.
          title: Delete User's files
          type: boolean
          x-stream-index: 001.002.005
        messages:
          description: |
            Message delete mode.

            * null or empty string - doesn't delete user messages
            * soft - marks all user messages as deleted without removing any related message data
            * pruning - marks all user messages as deleted, nullifies message information and removes some message data such as reactions and flags
            * hard - deletes messages completely with all related information
          enum:
          - soft
          - pruning
          - hard
          title: Delete Messages
          type: string
          x-stream-index: 001.002.002
        new_call_owner_id:
          type: string
          x-stream-index: 001.002.007
        new_channel_owner_id:
          type: string
          x-stream-index: 001.002.006
        user:
          description: |
            User delete mode.

            * soft - marks user as deleted and retains all user data
            * pruning - marks user as deleted and nullifies user information
            * hard - deletes user completely. Requires 'hard' option for messages and conversations as well
          enum:
          - soft
          - pruning
          - hard
          title: Delete User
          type: string
          x-stream-index: 001.002.001
        user_ids:
          description: IDs of users to delete
          items:
            type: string
          maximum: 100
          minimum: 1
          title: User IDs
          type: array
          x-stream-index: "001.001"
      required:
      - user_ids
      type: object
    DeleteUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          description: ID of the task to delete users
          title: Task ID
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      type: object
    Device:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        disabled:
          type: boolean
          x-stream-index: "002.003"
        disabled_reason:
          type: string
          x-stream-index: "002.004"
        id:
          type: string
          x-stream-index: 002.001.004
        push_provider:
          enum:
          - firebase
          - apn
          - huawei
          - xiaomi
          type: string
          x-stream-index: 002.001.001
        push_provider_name:
          type: string
          x-stream-index: 002.001.003
        user_id:
          type: string
          x-stream-index: "004"
        voip:
          type: boolean
          x-stream-index: 002.001.005
      required:
      - push_provider
      - id
      - created_at
      - user_id
      type: object
    DeviceErrorInfo:
      properties:
        error_message:
          type: string
          x-stream-index: "003"
        provider:
          type: string
          x-stream-index: "001"
        provider_name:
          type: string
          x-stream-index: "002"
      required:
      - provider
      - provider_name
      - error_message
      type: object
    DeviceResponse:
      description: Response for Device
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        disabled:
          description: Whether device is disabled or not
          title: Disabled
          type: boolean
          x-stream-index: "005"
        disabled_reason:
          description: Reason explaining why device had been disabled
          title: Reason
          type: string
          x-stream-index: "006"
        id:
          description: Device ID
          title: ID
          type: string
          x-stream-index: "003"
        push_provider:
          description: Push provider
          title: PushProvider
          type: string
          x-stream-index: "001"
        push_provider_name:
          description: Push provider name
          title: PushProviderName
          type: string
          x-stream-index: "002"
        user_id:
          description: User ID
          title: UserID
          type: string
          x-stream-index: "008"
        voip:
          description: When true the token is for Apple VoIP push notifications
          title: Voip
          type: boolean
          x-stream-index: "007"
      required:
      - push_provider
      - id
      - created_at
      - user_id
      title: DeviceResponse
      type: object
    DraftPayloadResponse:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        html:
          type: string
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "001"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "008"
        mml:
          type: string
          x-stream-index: "003"
        parent_id:
          type: string
          x-stream-index: "005"
        poll_id:
          type: string
          x-stream-index: "013"
        quoted_message_id:
          type: string
          x-stream-index: "009"
        show_in_channel:
          type: boolean
          x-stream-index: "006"
        silent:
          type: boolean
          x-stream-index: "012"
        text:
          type: string
          x-stream-index: "002"
        type:
          type: string
          x-stream-index: "011"
      required:
      - id
      - text
      - custom
      type: object
    DraftResponse:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        message:
          $ref: '#/components/schemas/DraftPayloadResponse'
          x-stream-index: "001"
        parent_id:
          type: string
          x-stream-index: "004"
        parent_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "005"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "006"
      required:
      - message
      - channel_cid
      - created_at
      type: object
    EgressHLSResponse:
      properties:
        playlist_url:
          type: string
          x-stream-index: "001"
        status:
          type: string
          x-stream-index: "002"
      required:
      - playlist_url
      - status
      type: object
    EgressRTMPResponse:
      properties:
        name:
          type: string
          x-stream-index: "001"
        started_at:
          format: date-time
          type: number
          x-stream-index: "004"
        stream_key:
          type: string
          x-stream-index: "003"
        stream_url:
          type: string
          x-stream-index: "002"
      required:
      - name
      - started_at
      type: object
    EgressResponse:
      properties:
        broadcasting:
          type: boolean
          x-stream-index: "001"
        frame_recording:
          $ref: '#/components/schemas/FrameRecordingResponse'
          x-stream-index: "004"
        hls:
          $ref: '#/components/schemas/EgressHLSResponse'
          x-stream-index: "002"
        rtmps:
          items:
            $ref: '#/components/schemas/EgressRTMPResponse'
          type: array
          x-stream-index: "003"
      required:
      - broadcasting
      - rtmps
      type: object
    EgressTaskConfig:
      properties:
        egress_user:
          $ref: '#/components/schemas/EgressUser'
          x-stream-index: "008"
        frame_recording_egress_config:
          $ref: '#/components/schemas/FrameRecordingEgressConfig'
          x-stream-index: "009"
        hls_egress_config:
          $ref: '#/components/schemas/HLSEgressConfig'
          x-stream-index: "007"
        recording_egress_config:
          $ref: '#/components/schemas/RecordingEgressConfig'
          x-stream-index: "006"
        rtmp_egress_config:
          $ref: '#/components/schemas/RTMPEgressConfig'
          x-stream-index: "004"
        stt_egress_config:
          $ref: '#/components/schemas/STTEgressConfig'
          x-stream-index: "005"
      type: object
    EgressUser:
      properties:
        token:
          type: string
          x-stream-index: "004"
      type: object
    EnrichedActivity:
      properties:
        actor:
          $ref: '#/components/schemas/Data'
          x-stream-index: "002"
        foreign_id:
          type: string
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        latest_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "013"
        object:
          $ref: '#/components/schemas/Data'
          x-stream-index: "004"
        origin:
          $ref: '#/components/schemas/Data'
          x-stream-index: "008"
        own_reactions:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "012"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "011"
        score:
          format: float
          type: number
          x-stream-index: "010"
        target:
          $ref: '#/components/schemas/Data'
          x-stream-index: "006"
        to:
          items:
            type: string
          type: array
          x-stream-index: "009"
        verb:
          type: string
          x-stream-index: "003"
      type: object
    EnrichedReaction:
      nullable: true
      properties:
        activity_id:
          type: string
          x-stream-index: "003"
        children_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "010"
        created_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "012"
        data:
          additionalProperties: {}
          type: object
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        kind:
          type: string
          x-stream-index: "002"
        latest_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "008"
        own_children:
          additionalProperties:
            items:
              $ref: '#/components/schemas/EnrichedReaction'
            type: array
          type: object
          x-stream-index: "009"
        parent:
          type: string
          x-stream-index: "007"
        target_feeds:
          items:
            type: string
          type: array
          x-stream-index: "006"
        updated_at:
          $ref: '#/components/schemas/Time'
          x-stream-index: "013"
        user:
          $ref: '#/components/schemas/Data'
          x-stream-index: "011"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - kind
      - activity_id
      - user_id
      type: object
    EntityCreator:
      properties:
        avg_response_time:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "001.046"
        ban_count:
          format: int32
          type: integer
          x-stream-index: "002"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "001.017"
        banned:
          type: boolean
          x-stream-index: "001.016"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.006"
        deactivated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.014"
        deleted_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.013"
        deleted_content_count:
          format: int32
          type: integer
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "001.023"
        language:
          type: string
          x-stream-index: "001.035"
        last_active:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.011"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.012"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "001.022"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "001.026"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.042"
        role:
          type: string
          x-stream-index: "001.004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.036"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.005"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "001.009"
      required:
      - id
      - role
      - teams_role
      - custom
      - banned
      - online
      - ban_count
      - deleted_content_count
      type: object
    EntityCreatorResponse:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: 001.001.018
        ban_count:
          description: Number of minor actions performed on the user
          format: int32
          title: Ban Count
          type: integer
          x-stream-index: "002"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "001.003"
        banned:
          type: boolean
          x-stream-index: 001.001.012
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: 001.001.017
        created_at:
          format: date-time
          type: number
          x-stream-index: 001.001.009
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.004
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.016
        deleted_at:
          format: date-time
          type: number
          x-stream-index: 001.001.011
        deleted_content_count:
          description: Number of major actions performed on the user
          format: int32
          title: Deleted Content Count
          type: integer
          x-stream-index: "003"
        devices:
          items:
            $ref: '#/components/schemas/DeviceResponse'
          type: array
          x-stream-index: "001.006"
        flagged_count:
          description: Number of flag actions performed on the user
          format: int32
          title: Flagged Count
          type: integer
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: 001.001.001
        image:
          type: string
          x-stream-index: 001.001.003
        invisible:
          type: boolean
          x-stream-index: "001.007"
        language:
          type: string
          x-stream-index: 001.001.005
        last_active:
          format: date-time
          type: number
          x-stream-index: 001.001.014
        name:
          type: string
          x-stream-index: 001.001.002
        online:
          type: boolean
          x-stream-index: 001.001.013
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "001.005"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          x-stream-index: "001.004"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: 001.001.015
        role:
          type: string
          x-stream-index: 001.001.006
        shadow_banned:
          type: boolean
          x-stream-index: "001.002"
        teams:
          items:
            type: string
          type: array
          x-stream-index: 001.001.007
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: 001.001.008
        updated_at:
          format: date-time
          type: number
          x-stream-index: 001.001.010
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - invisible
      - ban_count
      - deleted_content_count
      - flagged_count
      type: object
    ErrorResult:
      properties:
        stacktrace:
          type: string
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
        version:
          type: string
          x-stream-index: "004"
      required:
      - type
      - description
      type: object
    EventHook:
      nullable: true
      properties:
        callback:
          $ref: '#/components/schemas/AsyncModerationCallbackConfig'
          x-stream-index: 019.001.002
        created_at:
          format: date-time
          type: number
          x-stream-index: "020"
        enabled:
          type: boolean
          x-stream-index: "003"
        event_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        hook_type:
          type: string
          x-stream-index: "002"
        id:
          type: string
          x-stream-index: "001"
        product:
          type: string
          x-stream-index: "018"
        sns_auth_type:
          type: string
          x-stream-index: "014"
        sns_key:
          type: string
          x-stream-index: "015"
        sns_region:
          type: string
          x-stream-index: "013"
        sns_role_arn:
          type: string
          x-stream-index: "017"
        sns_secret:
          type: string
          x-stream-index: "016"
        sns_topic_arn:
          type: string
          x-stream-index: "012"
        sqs_auth_type:
          type: string
          x-stream-index: "008"
        sqs_key:
          type: string
          x-stream-index: "009"
        sqs_queue_url:
          type: string
          x-stream-index: "006"
        sqs_region:
          type: string
          x-stream-index: "007"
        sqs_role_arn:
          type: string
          x-stream-index: "011"
        sqs_secret:
          type: string
          x-stream-index: "010"
        timeout_ms:
          format: int32
          type: integer
          x-stream-index: 019.001.001
        updated_at:
          format: date-time
          type: number
          x-stream-index: "021"
        webhook_url:
          type: string
          x-stream-index: "005"
      type: object
    EventNotificationSettings:
      properties:
        apns:
          $ref: '#/components/schemas/APNS'
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        fcm:
          $ref: '#/components/schemas/FCM'
          x-stream-index: "003"
      required:
      - enabled
      - apns
      - fcm
      type: object
    ExportFeedUserDataRequest:
      description: Request for exporting feed user data
      nullable: true
      type: object
    ExportFeedUserDataResponse:
      description: Response for exporting feed user data
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        task_id:
          description: The task ID for the export task
          title: Task ID
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      type: object
    ExportUserResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        messages:
          description: List of exported messages
          items:
            $ref: '#/components/schemas/MessageResponse'
          title: Messages
          type: array
          x-stream-index: "002"
        reactions:
          description: List of exported reactions
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Reactions
          type: array
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Exported user object
          title: User
          x-stream-index: "001"
      required:
      - duration
      type: object
    ExportUsersRequest:
      nullable: true
      properties:
        user_ids:
          items:
            type: string
          maximum: 25
          minimum: 1
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      type: object
    ExportUsersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        task_id:
          type: string
          x-stream-index: "001"
      required:
      - task_id
      - duration
      title: Response
      type: object
    ExternalStorage:
      properties:
        abs_account_name:
          type: string
          x-stream-index: "011"
        abs_client_id:
          type: string
          x-stream-index: "013"
        abs_client_secret:
          type: string
          x-stream-index: "014"
        abs_tenant_id:
          type: string
          x-stream-index: "012"
        bucket:
          type: string
          x-stream-index: "005"
        gcs_credentials:
          type: string
          x-stream-index: "010"
        path:
          type: string
          x-stream-index: "006"
        s3_api_key:
          type: string
          x-stream-index: "007"
        s3_custom_endpoint:
          type: string
          x-stream-index: "016"
        s3_region:
          type: string
          x-stream-index: "009"
        s3_secret_key:
          type: string
          x-stream-index: "008"
        storage_name:
          type: string
          x-stream-index: "015"
        storage_type:
          type: integer
          x-stream-index: "004"
      type: object
    ExternalStorageResponse:
      properties:
        bucket:
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        path:
          type: string
          x-stream-index: "004"
        type:
          enum:
          - s3
          - gcs
          - abs
          type: string
          x-stream-index: "002"
      required:
      - name
      - type
      - bucket
      - path
      type: object
    FCM:
      properties:
        data:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
      type: object
    FeedCreatedEvent:
      description: Emitted when a feed is created.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed:
          $ref: '#/components/schemas/FeedResponse'
          description: The feed that was created
          title: Feed
          x-stream-index: "001"
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        members:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed.created
          description: 'The type of event: "feeds.feed.created" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who created the feed
          title: User
          x-stream-index: "004.001"
      required:
      - feed
      - members
      - type
      - created_at
      - custom
      - fid
      - user
      title: FeedCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedDeletedEvent:
      description: Emitted when a feed is deleted.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        feed_visibility:
          type: string
          x-stream-index: "001.003"
        fid:
          type: string
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        type:
          default: feeds.feed.deleted
          description: 'The type of event: "feeds.feed.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who deleted the feed
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: FeedDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedGroup:
      properties:
        ActivityProcessors:
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          type: array
          writeOnly: true
          x-stream-index: "012"
        ActivitySelectors:
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          type: array
          writeOnly: true
          x-stream-index: "013"
        Aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          x-stream-index: "015"
        AggregationVersion:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "016"
        AppPK:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "002"
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "007"
        DefaultVisibility:
          type: string
          writeOnly: true
          x-stream-index: "006"
        DeletedAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "010"
        ID:
          type: string
          writeOnly: true
          x-stream-index: "003"
        LastFeedGetAt:
          format: date-time
          type: number
          writeOnly: true
          x-stream-index: "017"
        Notification:
          $ref: '#/components/schemas/NotificationConfig'
          x-stream-index: "004"
        PushNotification:
          $ref: '#/components/schemas/PushNotificationConfig'
          x-stream-index: "005"
        Ranking:
          $ref: '#/components/schemas/RankingConfig'
          x-stream-index: "014"
        Stories:
          $ref: '#/components/schemas/StoriesConfig'
          x-stream-index: "011"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
      required:
      - AppPK
      - ID
      - DefaultVisibility
      - Custom
      - created_at
      - updated_at
      - ActivityProcessors
      - ActivitySelectors
      - AggregationVersion
      type: object
    FeedGroupChangedEvent:
      description: Emitted when a feed group is changed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 001.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 001.001.007
        feed_group:
          $ref: '#/components/schemas/FeedGroup'
          description: The feed group that was changed
          title: Feed Type
          x-stream-index: "003"
        feed_visibility:
          type: string
          x-stream-index: "001.003"
        fid:
          type: string
          x-stream-index: "001.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 001.001.004
        type:
          default: feeds.feed_group.changed
          description: 'The type of event: "feeds.feed_group.changed" in this case'
          title: Event Type
          type: string
          x-stream-index: 001.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who changed the feed group
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: FeedGroupChangedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedGroupDeletedEvent:
      description: Emitted when a feed group is deleted.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        group_id:
          description: The ID of the feed group that was deleted
          title: Group ID
          type: string
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.feed_group.deleted
          description: 'The type of event: "feeds.feed_group.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - group_id
      - type
      - created_at
      - custom
      - fid
      title: FeedGroupDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedGroupResponse:
      properties:
        activity_processors:
          description: Configuration for activity processors
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          title: Activity Processors
          type: array
          x-stream-index: "009"
        activity_selectors:
          description: Configuration for activity selectors
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          title: Activity Selectors
          type: array
          x-stream-index: "010"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for activity aggregation
          title: Aggregation
          x-stream-index: "012"
        created_at:
          description: When the feed group was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for the feed group
          title: Custom Data
          type: object
          x-stream-index: "005"
        default_visibility:
          description: Default visibility for activities
          title: Default Visibility
          type: string
          x-stream-index: "004"
        id:
          description: Identifier within the group
          title: Feed Group ID
          type: string
          x-stream-index: "001"
        notification:
          $ref: '#/components/schemas/NotificationConfig'
          description: Configuration for notifications
          title: Notification
          x-stream-index: "002"
        push_notification:
          $ref: '#/components/schemas/PushNotificationConfig'
          description: Configuration for push notifications
          title: Push Notification
          x-stream-index: "003"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for activity ranking
          title: Ranking
          x-stream-index: "011"
        stories:
          $ref: '#/components/schemas/StoriesConfig'
          description: Configuration for stories feature
          title: Stories
          x-stream-index: "008"
        updated_at:
          description: When the feed group was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "007"
      required:
      - id
      - created_at
      - updated_at
      title: Feed Group
      type: object
    FeedInput:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        description:
          maxLength: 1000
          type: string
          x-stream-index: "002"
        filter_tags:
          items:
            type: string
          maximum: 255
          type: array
          x-stream-index: "005"
        members:
          items:
            $ref: '#/components/schemas/FeedMemberRequest'
          type: array
          x-stream-index: "006"
        name:
          maxLength: 255
          type: string
          x-stream-index: "001"
        visibility:
          enum:
          - public
          - visible
          - followers
          - members
          - private
          type: string
          x-stream-index: "003"
      type: object
    FeedMemberAddedEvent:
      description: Emitted when a feed member is added.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The member that was added
          title: Member
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed_member.added
          description: 'The type of event: "feeds.feed_member.added" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who added the member
          title: User
          x-stream-index: "002.001"
      required:
      - member
      - type
      - created_at
      - custom
      - fid
      title: FeedMemberAddedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedMemberRemovedEvent:
      description: Emitted when a feed member is removed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        member_id:
          type: string
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed_member.removed
          description: 'The type of event: "feeds.feed_member.removed" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who removed the member
          title: User
          x-stream-index: "002.001"
      required:
      - member_id
      - type
      - created_at
      - custom
      - fid
      title: FeedMemberRemovedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedMemberRequest:
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the member
          title: Custom Data
          type: object
          x-stream-index: "004"
        invite:
          description: Whether this is an invite to become a member
          title: Invite
          type: boolean
          x-stream-index: "005"
        membership_level:
          description: ID of the membership level to assign to the member
          maxLength: 255
          title: Membership Level
          type: string
          x-stream-index: "003"
        role:
          description: Role of the member in the feed
          maxLength: 255
          title: Role
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user to add as a member
          maxLength: 255
          title: User ID
          type: string
          x-stream-index: "001"
      required:
      - user_id
      title: Feed Member Payload
      type: object
    FeedMemberResponse:
      properties:
        created_at:
          description: When the membership was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for the membership
          title: Custom Data
          type: object
          x-stream-index: "007"
        invite_accepted_at:
          description: When the invite was accepted
          format: date-time
          title: Invite Accepted At
          type: number
          x-stream-index: "005"
        invite_rejected_at:
          description: When the invite was rejected
          format: date-time
          title: Invite Rejected At
          type: number
          x-stream-index: "006"
        membership_level:
          $ref: '#/components/schemas/MembershipLevelResponse'
          description: Membership level assigned to the member
          title: Membership Level
          x-stream-index: "004"
        role:
          description: Role of the member in the feed
          title: Role
          type: string
          x-stream-index: "002"
        status:
          description: Status of the membership
          enum:
          - member
          - pending
          - rejected
          title: Status
          type: string
          x-stream-index: "003"
        updated_at:
          description: When the membership was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who is a member
          title: User
          x-stream-index: "001"
      required:
      - user
      - role
      - status
      - created_at
      - updated_at
      title: Feed Member
      type: object
    FeedMemberUpdatedEvent:
      description: Emitted when a feed member is updated.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          type: string
          x-stream-index: "003.002"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The member that was updated
          title: Member
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.feed_member.updated
          description: 'The type of event: "feeds.feed_member.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who updated the member
          title: User
          x-stream-index: "002.001"
      required:
      - member
      - type
      - created_at
      - custom
      - fid
      title: FeedMemberUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedOwnCapability:
      description: All possibility of string to use
      enum:
      - add-activity
      - add-activity-bookmark
      - add-activity-reaction
      - add-comment
      - add-comment-reaction
      - create-feed
      - delete-any-activity
      - delete-any-comment
      - delete-feed
      - delete-own-activity
      - delete-own-activity-bookmark
      - delete-own-activity-reaction
      - delete-own-comment
      - delete-own-comment-reaction
      - follow
      - pin-activity
      - query-feed-members
      - query-follows
      - read-activities
      - read-feed
      - unfollow
      - update-any-activity
      - update-any-comment
      - update-feed
      - update-feed-followers
      - update-feed-members
      - update-own-activity
      - update-own-activity-bookmark
      - update-own-comment
      title: FeedOwnCapability
      type: string
    FeedRequest:
      properties:
        created_by_id:
          description: ID of the feed creator
          title: Created By ID
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          description: Custom data for the feed
          title: Custom Data
          type: object
          x-stream-index: "004.004"
        description:
          description: Description of the feed
          maxLength: 1000
          title: Description
          type: string
          x-stream-index: "004.002"
        feed_group_id:
          description: ID of the feed group
          maxLength: 255
          title: Feed Group ID
          type: string
          x-stream-index: "001"
        feed_id:
          description: ID of the feed
          maxLength: 255
          title: Feed ID
          type: string
          x-stream-index: "002"
        filter_tags:
          description: Tags used for filtering feeds
          items:
            type: string
          maximum: 255
          title: Filter Tags
          type: array
          x-stream-index: "004.005"
        members:
          description: Initial members for the feed
          items:
            $ref: '#/components/schemas/FeedMemberRequest'
          title: Members
          type: array
          x-stream-index: "004.006"
        name:
          description: Name of the feed
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "004.001"
        visibility:
          description: Visibility setting for the feed
          enum:
          - public
          - visible
          - followers
          - members
          - private
          title: Visibility
          type: string
          x-stream-index: "004.003"
      required:
      - feed_group_id
      - feed_id
      title: Feed Payload
      type: object
    FeedResponse:
      properties:
        created_at:
          description: When the feed was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "015"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the feed
          title: Created By
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          description: Custom data for the feed
          title: Custom Data
          type: object
          x-stream-index: "006"
        deleted_at:
          description: When the feed was deleted
          format: date-time
          title: Deleted At
          type: number
          x-stream-index: "017"
        description:
          description: Description of the feed
          title: Description
          type: string
          x-stream-index: "005"
        feed:
          description: Fully qualified feed ID (group_id:id)
          title: FID
          type: string
          x-stream-index: "003"
        filter_tags:
          description: Tags used for filtering feeds
          items:
            type: string
          title: Filter Tags
          type: array
          x-stream-index: "007"
        follower_count:
          description: Number of followers of this feed
          format: int32
          title: Follower Count
          type: integer
          x-stream-index: "011"
        following_count:
          description: Number of feeds this feed follows
          format: int32
          title: Following Count
          type: integer
          x-stream-index: "012"
        group_id:
          description: Group this feed belongs to
          title: Group ID
          type: string
          x-stream-index: "001"
        id:
          description: Unique identifier for the feed
          title: ID
          type: string
          x-stream-index: "002"
        member_count:
          description: Number of members in this feed
          format: int32
          title: Member Count
          type: integer
          x-stream-index: "010"
        name:
          description: Name of the feed
          title: Name
          type: string
          x-stream-index: "004"
        own_follows:
          description: Follow relationships where the current user's feeds are following
            this feed
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Own Follows
          type: array
          x-stream-index: "014"
        pin_count:
          description: Number of pinned activities in this feed
          format: int32
          title: Pin Count
          type: integer
          x-stream-index: "013"
        updated_at:
          description: When the feed was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "016"
        visibility:
          description: Visibility setting for the feed
          title: Visibility
          type: string
          x-stream-index: "008"
      required:
      - group_id
      - id
      - feed
      - name
      - description
      - created_by
      - member_count
      - follower_count
      - following_count
      - pin_count
      - created_at
      - updated_at
      title: Feed
      type: object
    FeedUpdatedEvent:
      description: Emitted when a feed is created.
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed:
          $ref: '#/components/schemas/FeedResponse'
          description: The feed that was created
          title: Feed
          x-stream-index: "001"
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.feed.updated
          description: 'The type of event: "feeds.feed.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who created the feed
          title: User
          x-stream-index: "003.001"
      required:
      - feed
      - type
      - created_at
      - custom
      - fid
      title: FeedUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FeedViewResponse:
      properties:
        activity_processors:
          description: Configured activity processors
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          title: Activity Processors
          type: array
          x-stream-index: "003"
        activity_selectors:
          description: Configured activity selectors
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          title: Activity Selectors
          type: array
          x-stream-index: "002"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for activity aggregation
          title: Aggregation
          x-stream-index: "005"
        id:
          description: Unique identifier for the custom feed view
          title: View ID
          type: string
          x-stream-index: "001"
        last_used_at:
          description: When the feed view was last used
          format: date-time
          title: Last Used At
          type: number
          x-stream-index: "006"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for activity ranking
          title: Ranking
          x-stream-index: "004"
      required:
      - id
      title: Feed View
      type: object
    FeedVisibilityResponse:
      properties:
        description:
          description: Description of the feed visibility level
          title: Description
          type: string
          x-stream-index: "002"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          description: Permission grants for each role
          title: Grants
          type: object
          x-stream-index: "003"
        name:
          description: Name of the feed visibility level
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      - description
      - grants
      title: Feed Visibility Response
      type: object
    FeedsModerationTemplateConfig:
      properties:
        config_key:
          type: string
          x-stream-index: "002"
        data_types:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001"
      required:
      - data_types
      - config_key
      type: object
    FeedsPreferences:
      properties:
        comment:
          description: Push notification preference for comments on user's activities
          enum:
          - all
          - none
          title: Comment
          type: string
          x-stream-index: "002"
        comment_reaction:
          description: Push notification preference for reactions on comments
          enum:
          - all
          - none
          title: Comment Reaction
          type: string
          x-stream-index: "004"
        custom_activity_types:
          additionalProperties:
            type: string
          description: Push notification preferences for custom activity types. Map
            of activity type to preference (all or none)
          title: Custom Activity Types
          type: object
          x-stream-index: "006"
        follow:
          description: Push notification preference for new followers
          enum:
          - all
          - none
          title: Follow
          type: string
          x-stream-index: "001"
        mention:
          description: Push notification preference for mentions in activities or
            comments
          enum:
          - all
          - none
          title: Mention
          type: string
          x-stream-index: "005"
        reaction:
          description: Push notification preference for reactions on user's activities
            or comments
          enum:
          - all
          - none
          title: Reaction
          type: string
          x-stream-index: "003"
      title: Feeds Preferences
      type: object
    FeedsReactionResponse:
      properties:
        activity_id:
          description: ID of the activity that was reacted to
          title: Activity ID
          type: string
          x-stream-index: "002"
        comment_id:
          description: ID of the comment that was reacted to
          title: Comment ID
          type: string
          x-stream-index: "003"
        created_at:
          description: When the reaction was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for the reaction
          title: Custom Data
          type: object
          x-stream-index: "005"
        type:
          description: Type of reaction
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: When the reaction was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User who created the reaction
          title: User
          x-stream-index: "001"
      required:
      - user
      - activity_id
      - type
      - created_at
      - updated_at
      title: Activity Reaction
      type: object
    Field:
      nullable: true
      properties:
        short:
          type: boolean
          x-stream-index: "003"
        title:
          type: string
          x-stream-index: "001"
        value:
          type: string
          x-stream-index: "002"
      required:
      - title
      - value
      - short
      type: object
    FileUploadConfig:
      properties:
        allowed_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "001"
        allowed_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "003"
        blocked_file_extensions:
          items:
            type: string
          type: array
          x-stream-index: "002"
        blocked_mime_types:
          items:
            type: string
          type: array
          x-stream-index: "004"
        size_limit:
          format: int32
          maximum: 104857600
          minimum: 0
          type: integer
          x-stream-index: "005"
      required:
      - size_limit
      type: object
    FileUploadRequest:
      nullable: true
      properties:
        file:
          description: file field
          title: File
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          description: user for the request **server side only**
          title: User
          x-stream-index: "002"
      type: object
    FileUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        file:
          description: URL to the uploaded asset. Should be used to put to `asset_url`
            attachment field
          title: File
          type: string
          x-stream-index: "001"
        thumb_url:
          description: URL of the file thumbnail for supported file formats. Should
            be put to `thumb_url` attachment field
          title: Thumbnail URL
          type: string
          x-stream-index: "002"
      required:
      - duration
      type: object
    FirebaseConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "001"
        apn_template:
          type: string
          x-stream-index: "005"
        credentials_json:
          type: string
          x-stream-index: "006"
        data_template:
          type: string
          x-stream-index: "004"
        notification_template:
          type: string
          x-stream-index: "003"
        server_key:
          type: string
          x-stream-index: "002"
      type: object
    FirebaseConfigFields:
      properties:
        apn_template:
          type: string
          x-stream-index: "004"
        credentials_json:
          type: string
          x-stream-index: "006"
        data_template:
          type: string
          x-stream-index: "003"
        enabled:
          type: boolean
          x-stream-index: "001"
        notification_template:
          type: string
          x-stream-index: "002"
        server_key:
          type: string
          x-stream-index: "005"
      required:
      - enabled
      type: object
    Flag:
      description: Contains information about flagged user or message
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "019"
        custom:
          additionalProperties: {}
          description: Additional metadata about the flag
          title: Custom
          type: object
          x-stream-index: "014"
        entity_creator_id:
          description: ID of the user who created the flagged entity
          title: Entity Creator ID
          type: string
          x-stream-index: "009"
        entity_id:
          description: Unique identifier of the entity being flagged
          title: Entity ID
          type: string
          x-stream-index: "008"
        entity_type:
          description: Type of entity being flagged (e.g., message, user)
          title: Entity Type
          type: string
          x-stream-index: "007"
        is_streamed_content:
          type: boolean
          x-stream-index: "012"
        labels:
          description: Labels from bodyguard, API calls, our own AI etc
          items:
            type: string
          title: Labels
          type: array
          x-stream-index: "015"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content being flagged
          title: Moderation Payload
          x-stream-index: "010"
        moderation_payload_hash:
          type: string
          x-stream-index: "011"
        reason:
          description: Optional explanation for why the content is being flagged
          title: Reason
          type: string
          x-stream-index: "013"
        result:
          description: Result of bodyguard, API calls, our own AI etc
          items:
            additionalProperties: {}
            type: object
          title: Result
          type: array
          x-stream-index: "016"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "018"
        review_queue_item_id:
          description: ID of the review queue item
          title: Review Queue Item ID
          type: string
          x-stream-index: "017"
        type:
          type: string
          x-stream-index: "004"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "020"
        user:
          $ref: '#/components/schemas/User'
          description: User who flagged a message or a user
          title: User
          x-stream-index: "006"
      required:
      - entity_type
      - entity_id
      - result
      - created_at
      - updated_at
      title: Flag
      type: object
    FlagRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Additional metadata about the flag
          title: Custom
          type: object
          x-stream-index: "006"
        entity_creator_id:
          description: ID of the user who created the flagged entity
          title: Entity Creator ID
          type: string
          x-stream-index: "003"
        entity_id:
          description: Unique identifier of the entity being flagged
          title: Entity ID
          type: string
          x-stream-index: "002"
        entity_type:
          description: Type of entity being flagged (e.g., message, user)
          title: Entity Type
          type: string
          x-stream-index: "001"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content being flagged
          title: Moderation Payload
          x-stream-index: "005"
        reason:
          description: Optional explanation for why the content is being flagged
          maxLength: 255
          title: Reason
          type: string
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "007.002"
        user_id:
          type: string
          x-stream-index: "007.001"
      required:
      - entity_type
      - entity_id
      type: object
    FlagResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        item_id:
          description: Unique identifier of the created moderation item
          title: Item ID
          type: string
          x-stream-index: "001"
      required:
      - item_id
      - duration
      type: object
    FlagUserOptions:
      properties:
        reason:
          type: string
          x-stream-index: "001"
      type: object
    FollowBatchRequest:
      nullable: true
      properties:
        follows:
          description: List of follow relationships to create
          items:
            $ref: '#/components/schemas/FollowRequest'
          maximum: 1000
          minimum: 1
          title: Follows
          type: array
          x-stream-index: "001"
      required:
      - follows
      title: Follow Batch Request
      type: object
    FollowBatchResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follows:
          description: List of created follow relationships
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Follows
          type: array
          x-stream-index: "001"
      required:
      - follows
      - duration
      title: Follow Batch Response
      type: object
    FollowCreatedEvent:
      description: Emitted when a feed follows another feed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.follow.created
          description: 'The type of event: "feeds.follow.created" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - follow
      - type
      - created_at
      - custom
      - fid
      title: FollowCreatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FollowDeletedEvent:
      description: Emitted when a feed unfollows another feed.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.follow.deleted
          description: 'The type of event: "feeds.follow.deleted" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - follow
      - type
      - created_at
      - custom
      - fid
      title: FollowDeletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FollowPair:
      properties:
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          x-stream-index: "001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          x-stream-index: "002"
      required:
      - source
      - target
      title: FollowPair
      type: object
    FollowRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this follow
          title: Create Notification Activity
          type: boolean
          x-stream-index: "004"
        custom:
          additionalProperties: {}
          description: Custom data for the follow relationship
          title: Custom Data
          type: object
          x-stream-index: "002"
        push_preference:
          description: Push preference for the follow relationship
          enum:
          - all
          - none
          title: Push Preference
          type: string
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "005"
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          x-stream-index: "001.001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          x-stream-index: "001.002"
      required:
      - source
      - target
      title: Follow Request
      type: object
    FollowResponse:
      properties:
        created_at:
          description: When the follow relationship was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          description: Custom data for the follow relationship
          title: Custom Data
          type: object
          x-stream-index: "004"
        follower_role:
          description: Role of the follower (source user) in the follow relationship
          title: Follower Role
          type: string
          x-stream-index: "008"
        push_preference:
          description: Push preference for notifications
          enum:
          - all
          - none
          title: Push Preference
          type: string
          x-stream-index: "003"
        request_accepted_at:
          description: When the follow request was accepted
          format: date-time
          title: Request Accepted At
          type: number
          x-stream-index: "005"
        request_rejected_at:
          description: When the follow request was rejected
          format: date-time
          title: Request Rejected At
          type: number
          x-stream-index: "006"
        source_feed:
          $ref: '#/components/schemas/FeedResponse'
          description: Source feed object
          title: Source Feed
          x-stream-index: "001"
        status:
          description: Status of the follow relationship
          enum:
          - accepted
          - pending
          - rejected
          title: Status
          type: string
          x-stream-index: "007"
        target_feed:
          $ref: '#/components/schemas/FeedResponse'
          description: Target feed object
          title: Target Feed
          x-stream-index: "002"
        updated_at:
          description: When the follow relationship was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "010"
      required:
      - source_feed
      - target_feed
      - push_preference
      - status
      - follower_role
      - created_at
      - updated_at
      title: Follow
      type: object
    FollowUpdatedEvent:
      description: Emitted when a follow relationship is updated.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 002.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 002.001.007
        feed_visibility:
          type: string
          x-stream-index: "002.003"
        fid:
          type: string
          x-stream-index: "002.002"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          x-stream-index: "001"
        received_at:
          format: date-time
          type: number
          x-stream-index: 002.001.004
        type:
          default: feeds.follow.updated
          description: 'The type of event: "feeds.follow.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: 002.001.002
      required:
      - follow
      - type
      - created_at
      - custom
      - fid
      title: FollowUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    FrameRecordSettings:
      properties:
        capture_interval_in_seconds:
          format: int32
          maximum: 60
          minimum: 2
          type: integer
          x-stream-index: "003"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        quality:
          type: string
          x-stream-index: "002"
      required:
      - mode
      - capture_interval_in_seconds
      type: object
    FrameRecordingEgressConfig:
      properties:
        capture_interval_in_seconds:
          format: int32
          type: integer
          x-stream-index: "007"
        external_storage:
          $ref: '#/components/schemas/ExternalStorage'
          x-stream-index: "006"
        quality:
          $ref: '#/components/schemas/Quality'
          x-stream-index: "004"
        storage_name:
          type: string
          x-stream-index: "005"
      type: object
    FrameRecordingResponse:
      properties:
        status:
          type: string
          x-stream-index: "001"
      required:
      - status
      type: object
    FrameRecordingSettingsResponse:
      properties:
        capture_interval_in_seconds:
          format: int32
          maximum: 60
          minimum: 2
          type: integer
          x-stream-index: "003"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        quality:
          type: string
          x-stream-index: "002"
      required:
      - mode
      - capture_interval_in_seconds
      type: object
    FullUserResponse:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "015"
        banned:
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "014"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.011"
        devices:
          items:
            $ref: '#/components/schemas/DeviceResponse'
          type: array
          x-stream-index: "004"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "005"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.014"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "012"
        mutes:
          items:
            $ref: '#/components/schemas/UserMuteResponse'
          type: array
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.013"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "003"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.015"
        role:
          type: string
          x-stream-index: "001.006"
        shadow_banned:
          type: boolean
          x-stream-index: "013"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "009"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "010"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "008"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "011"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - invisible
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - unread_channels
      - unread_threads
      - shadow_banned
      - blocked_user_ids
      type: object
    GeofenceResponse:
      nullable: true
      properties:
        country_codes:
          items:
            type: string
          type: array
          x-stream-index: "004"
        description:
          type: string
          x-stream-index: "003"
        name:
          type: string
          x-stream-index: "001"
        type:
          type: string
          x-stream-index: "002"
      required:
      - name
      type: object
    GeofenceSettings:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - names
      type: object
    GeofenceSettingsResponse:
      properties:
        names:
          items:
            type: string
          type: array
          x-stream-index: "001"
      required:
      - names
      type: object
    GetActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The requested activity
          title: Activity
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      title: Get Activity Response
      type: object
    GetApplicationResponse:
      description: Basic response information
      nullable: true
      properties:
        app:
          $ref: '#/components/schemas/AppResponseFields'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - app
      - duration
      title: Response
      type: object
    GetBlockListResponse:
      description: Response for get block list
      nullable: true
      properties:
        blocklist:
          $ref: '#/components/schemas/BlockListResponse'
          description: Block list object
          title: BlockListResponse
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: GetBlockListResponse
      type: object
      x-stream-docs-page-id: get_block_list
    GetBlockedUsersResponse:
      nullable: true
      properties:
        blocks:
          description: Array of blocked user object
          items:
            $ref: '#/components/schemas/BlockedUserResponse'
          title: Blocks
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocks
      - duration
      type: object
    GetCommentRepliesResponse:
      nullable: true
      properties:
        comments:
          description: Threaded listing of replies to the comment
          items:
            $ref: '#/components/schemas/ThreadedCommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - comments
      - duration
      title: Get Comment Replies Response
      type: object
    GetCommentResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: Comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comment
      - duration
      title: Get Comment Response
      type: object
    GetCommentsResponse:
      nullable: true
      properties:
        comments:
          description: Threaded listing for the activity
          items:
            $ref: '#/components/schemas/ThreadedCommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - comments
      - duration
      title: Get  Comments Response
      type: object
    GetConfigResponse:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ConfigResponse'
          description: The retrieved moderation configuration
          title: Config
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    GetCustomPermissionResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        permission:
          $ref: '#/components/schemas/Permission'
          x-stream-index: "001"
      required:
      - permission
      - duration
      title: Response
      type: object
    GetFeedGroupResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_group:
          $ref: '#/components/schemas/FeedGroupResponse'
          description: The requested feed group
          title: Feed Group
          x-stream-index: "001"
      required:
      - feed_group
      - duration
      title: Get Feed Group Response
      type: object
    GetFeedViewResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_view:
          $ref: '#/components/schemas/FeedViewResponse'
          description: The requested feed view
          title: Feed View
          x-stream-index: "001"
      required:
      - feed_view
      - duration
      title: Get Feed View Response
      type: object
    GetFeedVisibilityResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_visibility:
          $ref: '#/components/schemas/FeedVisibilityResponse'
          description: Feed visibility configuration and permissions
          title: Feed Visibility
          x-stream-index: "001"
      required:
      - feed_visibility
      - duration
      title: Get Feed Visibility Response
      type: object
    GetFollowSuggestionsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        suggestions:
          description: List of suggested feeds to follow
          items:
            $ref: '#/components/schemas/FeedResponse'
          title: Suggestions
          type: array
          x-stream-index: "001"
      required:
      - suggestions
      - duration
      title: Follow Suggestions Response
      type: object
    GetImportResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        import_task:
          $ref: '#/components/schemas/ImportTask'
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    GetModerationRuleResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        rule:
          $ref: '#/components/schemas/ModerationRuleV2Response'
          x-stream-index: "002"
      required:
      - duration
      title: Response
      type: object
    GetOGResponse:
      nullable: true
      properties:
        actions:
          items:
            $ref: '#/components/schemas/Action'
          type: array
          x-stream-index: "001.015"
        asset_url:
          description: URL of detected video or audio
          title: Image URL
          type: string
          x-stream-index: "001.017"
        author_icon:
          type: string
          x-stream-index: "001.007"
        author_link:
          description: og:site
          title: Author Link
          type: string
          x-stream-index: "001.006"
        author_name:
          description: og:site_name
          title: Author Name
          type: string
          x-stream-index: "001.005"
        color:
          type: string
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.018"
        duration:
          type: string
          x-stream-index: "002.001"
        fallback:
          type: string
          x-stream-index: "001.002"
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
          x-stream-index: "001.016"
        footer:
          type: string
          x-stream-index: "001.013"
        footer_icon:
          type: string
          x-stream-index: "001.014"
        giphy:
          $ref: '#/components/schemas/Images'
          x-stream-index: "001.019"
        image_url:
          description: URL of detected image
          title: Image URL
          type: string
          x-stream-index: "001.011"
        og_scrape_url:
          description: extracted url from the text
          title: OG Scrape URL
          type: string
          x-stream-index: "001.020"
        original_height:
          format: int32
          type: integer
          x-stream-index: "001.022"
        original_width:
          format: int32
          type: integer
          x-stream-index: "001.021"
        pretext:
          type: string
          x-stream-index: "001.004"
        text:
          description: og:description
          title: Text
          type: string
          x-stream-index: "001.010"
        thumb_url:
          description: URL of detected thumb image
          title: Image URL
          type: string
          x-stream-index: "001.012"
        title:
          description: og:title
          title: Title
          type: string
          x-stream-index: "001.008"
        title_link:
          description: og:url
          title: Title Link
          type: string
          x-stream-index: "001.009"
        type:
          description: Attachment type, could be empty, image, audio or video
          title: Type
          type: string
          x-stream-index: "001.001"
      required:
      - custom
      - duration
      title: Get OG Attachment
      type: object
      x-stream-docs-page-id: og
    GetOrCreateFeedGroupRequest:
      nullable: true
      properties:
        activity_processors:
          description: Configuration for activity processors (max 10)
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          maximum: 10
          title: Activity Processors
          type: array
          x-stream-index: "006"
        activity_selectors:
          description: Configuration for activity selectors (max 10)
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          maximum: 10
          title: Activity Selectors
          type: array
          x-stream-index: "007"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for activity aggregation
          title: Aggregation
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          description: Custom data for the feed group
          title: Custom Data
          type: object
          x-stream-index: "004"
        default_visibility:
          description: 'Default visibility for the feed group, can be ''public'',
            ''visible'', ''followers'', ''members'', or ''private''. Defaults to ''visible''
            if not provided. '
          enum:
          - public
          - visible
          - followers
          - members
          - private
          title: Default Visibility
          type: string
          x-stream-index: "005"
        notification:
          $ref: '#/components/schemas/NotificationConfig'
          description: Configuration for notifications
          title: Notification
          x-stream-index: "002"
        push_notification:
          $ref: '#/components/schemas/PushNotificationConfig'
          x-stream-index: "003"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for activity ranking
          title: Ranking
          x-stream-index: "008"
      title: Get Or Create Feed Group Request
      type: object
    GetOrCreateFeedGroupResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        feed_group:
          $ref: '#/components/schemas/FeedGroupResponse'
          description: The feed group that was retrieved or created
          title: Feed Group
          x-stream-index: "001"
        was_created:
          description: Indicates whether the feed group was created (true) or already
            existed (false)
          title: Was Created
          type: boolean
          x-stream-index: "002"
      required:
      - feed_group
      - was_created
      - duration
      title: Get Or Create Feed Group Response
      type: object
    GetOrCreateFeedRequest:
      description: Client request
      nullable: true
      properties:
        activity_selector_options:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        data:
          $ref: '#/components/schemas/FeedInput'
          x-stream-index: "003"
        external_ranking:
          additionalProperties: {}
          type: object
          x-stream-index: "007"
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        followers_pagination:
          $ref: '#/components/schemas/PagerRequest'
          x-stream-index: "011"
        following_pagination:
          $ref: '#/components/schemas/PagerRequest'
          x-stream-index: "012"
        interest_weights:
          additionalProperties:
            format: float
            type: number
          type: object
          x-stream-index: "008"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "013.001"
        member_pagination:
          $ref: '#/components/schemas/PagerRequest'
          x-stream-index: "010"
        next:
          type: string
          x-stream-index: "013.002"
        prev:
          type: string
          x-stream-index: "013.003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "014.002"
        user_id:
          type: string
          x-stream-index: "014.001"
        view:
          type: string
          x-stream-index: "005"
        watch:
          type: boolean
          x-stream-index: "004"
      title: ClientRequest
      type: object
    GetOrCreateFeedResponse:
      description: Basic response information
      nullable: true
      properties:
        activities:
          items:
            $ref: '#/components/schemas/ActivityResponse'
          type: array
          x-stream-index: "002"
        aggregated_activities:
          items:
            $ref: '#/components/schemas/AggregatedActivityResponse'
          type: array
          x-stream-index: "003"
        created:
          type: boolean
          x-stream-index: "015"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "017.001"
        feed:
          $ref: '#/components/schemas/FeedResponse'
          x-stream-index: "001"
        followers:
          items:
            $ref: '#/components/schemas/FollowResponse'
          type: array
          x-stream-index: "005"
        followers_pagination:
          $ref: '#/components/schemas/PagerResponse'
          x-stream-index: "012"
        following:
          items:
            $ref: '#/components/schemas/FollowResponse'
          type: array
          x-stream-index: "006"
        following_pagination:
          $ref: '#/components/schemas/PagerResponse'
          x-stream-index: "013"
        member_pagination:
          $ref: '#/components/schemas/PagerResponse'
          x-stream-index: "011"
        members:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "004"
        next:
          type: string
          x-stream-index: "016.001"
        notification_status:
          $ref: '#/components/schemas/NotificationStatusResponse'
          x-stream-index: "014"
        own_capabilities:
          items:
            $ref: '#/components/schemas/FeedOwnCapability'
          type: array
          x-stream-index: "008"
        own_follows:
          items:
            $ref: '#/components/schemas/FollowResponse'
          type: array
          x-stream-index: "009"
        own_membership:
          $ref: '#/components/schemas/FeedMemberResponse'
          x-stream-index: "010"
        pinned_activities:
          items:
            $ref: '#/components/schemas/ActivityPinResponse'
          type: array
          x-stream-index: "007"
        prev:
          type: string
          x-stream-index: "016.002"
      required:
      - feed
      - activities
      - aggregated_activities
      - members
      - followers
      - following
      - pinned_activities
      - own_capabilities
      - created
      - duration
      title: Response
      type: object
    GetOrCreateFeedViewRequest:
      nullable: true
      properties:
        activity_processors:
          description: Configured activity Processors
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          title: Activity Processors
          type: array
          x-stream-index: "002.002"
        activity_selectors:
          description: Configuration for selecting activities
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          title: Activity Selectors
          type: array
          x-stream-index: "002.001"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for aggregating activities
          title: Aggregation
          x-stream-index: "002.004"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for ranking activities
          title: Ranking
          x-stream-index: "002.003"
      title: Get Or Create Feed View Request
      type: object
    GetOrCreateFeedViewResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        feed_view:
          $ref: '#/components/schemas/FeedViewResponse'
          description: The feed view (either existing or newly created)
          title: Feed View
          x-stream-index: "001"
        was_created:
          description: Indicates whether the feed view was newly created (true) or
            already existed (false)
          title: Was Created
          type: boolean
          x-stream-index: "002"
      required:
      - feed_view
      - was_created
      - duration
      title: Get Or Create Feed View Response
      type: object
    GetPushTemplatesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        templates:
          items:
            $ref: '#/components/schemas/PushTemplate'
          type: array
          x-stream-index: "002"
      required:
      - duration
      - templates
      title: Response
      type: object
    GetRateLimitsResponse:
      nullable: true
      properties:
        android:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the Android platform
          title: Android
          type: object
          x-stream-index: "002"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
        duration:
          type: string
          x-stream-index: "005.001"
        ios:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the iOS platform
          title: iOS
          type: object
          x-stream-index: "003"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
        server_side:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the server-side platform
          title: Server-side
          type: object
          x-stream-index: "001"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
        web:
          additionalProperties:
            $ref: '#/components/schemas/LimitInfo'
          description: Map of endpoint rate limits for the web platform
          title: Web
          type: object
          x-stream-index: "004"
          x-stream-map:
            description: The name of the endpoint for which the limits apply
            key: endpoint
            title: Endpoint name
      required:
      - duration
      title: Get Rate Limits Response
      type: object
      x-stream-docs-page-id: rate_limits
    GetReviewQueueItemResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Current state of the review queue item
          title: Item
          x-stream-index: "001"
      required:
      - duration
      type: object
    GetTaskResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.003"
        duration:
          type: string
          x-stream-index: "004.001"
        error:
          $ref: '#/components/schemas/ErrorResult'
          description: Error produced by task
          title: Error
          x-stream-index: "003"
        result:
          additionalProperties: {}
          description: Result produced by task after completion
          title: Result
          type: object
          x-stream-index: "002"
        status:
          description: Current status of task
          title: Status
          type: string
          x-stream-index: "001.002"
        task_id:
          description: ID of task
          title: Task ID
          type: string
          x-stream-index: "001.001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
      required:
      - task_id
      - status
      - created_at
      - updated_at
      - duration
      title: Get Task Response
      type: object
      x-stream-docs-page-id: tasks
    GoogleVisionConfig:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    HLSEgressConfig:
      properties:
        composite_app_settings:
          $ref: '#/components/schemas/CompositeAppSettings'
          x-stream-index: "005"
        playlist_url:
          type: string
          x-stream-index: "007"
        qualities:
          items:
            $ref: '#/components/schemas/Quality'
          type: array
          x-stream-index: "004"
        start_unix_nano:
          format: int64
          type: integer
          x-stream-index: "006"
      type: object
    HLSSettings:
      properties:
        auto_on:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        layout:
          $ref: '#/components/schemas/LayoutSettings'
          x-stream-index: "004"
        quality_tracks:
          items:
            type: string
          type: array
          x-stream-index: "003"
      required:
      - auto_on
      - enabled
      - quality_tracks
      type: object
    HLSSettingsResponse:
      description: HLSSettings is the payload for HLS settings
      properties:
        auto_on:
          title: Auto On
          type: boolean
          x-stream-index: "001"
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "002"
        layout:
          $ref: '#/components/schemas/LayoutSettingsResponse'
          title: Layout
          x-stream-index: "004"
        quality_tracks:
          items:
            type: string
          title: Quality Tracks
          type: array
          x-stream-index: "003"
      required:
      - auto_on
      - enabled
      - quality_tracks
      - layout
      title: HLSSettingsResponse
      type: object
    HarmConfig:
      properties:
        action_sequences:
          items:
            $ref: '#/components/schemas/ActionSequence'
          type: array
          x-stream-index: "001"
        cooldown_period:
          format: int32
          type: integer
          x-stream-index: "005"
        harm_types:
          items:
            type: string
          type: array
          x-stream-index: "003"
        severity:
          type: integer
          x-stream-index: "002"
        threshold:
          format: int32
          type: integer
          x-stream-index: "004"
      type: object
    HuaweiConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        secret:
          type: string
          x-stream-index: "002"
      type: object
    HuaweiConfigFields:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        id:
          type: string
          x-stream-index: "002"
        secret:
          type: string
          x-stream-index: "003"
      required:
      - enabled
      type: object
    ImageContentParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "001"
      type: object
    ImageData:
      properties:
        frames:
          type: string
          x-stream-index: "005"
        height:
          type: string
          x-stream-index: "003"
        size:
          type: string
          x-stream-index: "004"
        url:
          type: string
          x-stream-index: "001"
        width:
          type: string
          x-stream-index: "002"
      required:
      - url
      - width
      - height
      - size
      - frames
      type: object
    ImageRuleParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    ImageSize:
      properties:
        crop:
          description: Crop mode
          enum:
          - top
          - bottom
          - left
          - right
          - center
          title: Crop
          type: string
          x-stream-index: "001"
        height:
          description: Target image height
          format: int32
          title: Height
          type: integer
          x-stream-index: "003"
        resize:
          description: Resize method
          enum:
          - clip
          - crop
          - scale
          - fill
          title: Resize
          type: string
          x-stream-index: "002"
        width:
          description: Target image width
          format: int32
          title: Width
          type: integer
          x-stream-index: "004"
      title: Image size configuration
      type: object
    ImageUploadRequest:
      nullable: true
      properties:
        file:
          type: string
          x-stream-index: "001.001"
        upload_sizes:
          description: field with JSON-encoded array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/OnlyUserID'
          x-stream-index: "001.002"
      type: object
    ImageUploadResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.003.001
        file:
          type: string
          x-stream-index: "001.001"
        thumb_url:
          type: string
          x-stream-index: "001.002"
        upload_sizes:
          description: Array of image size configurations
          items:
            $ref: '#/components/schemas/ImageSize'
          title: Upload sizes
          type: array
          x-stream-index: "002"
      required:
      - duration
      type: object
    Images:
      properties:
        fixed_height:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "002"
        fixed_height_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "004"
        fixed_height_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "003"
        fixed_width:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "005"
        fixed_width_downsampled:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "007"
        fixed_width_still:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "006"
        original:
          $ref: '#/components/schemas/ImageData'
          x-stream-index: "001"
      required:
      - original
      - fixed_height
      - fixed_height_still
      - fixed_height_downsampled
      - fixed_width
      - fixed_width_still
      - fixed_width_downsampled
      type: object
    ImportTask:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "011"
        history:
          items:
            $ref: '#/components/schemas/ImportTaskHistory'
          type: array
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "003"
        mode:
          type: string
          x-stream-index: "006"
        path:
          type: string
          x-stream-index: "005"
        size:
          format: int64
          type: integer
          x-stream-index: "007"
        state:
          type: string
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "012"
      required:
      - id
      - path
      - mode
      - state
      - history
      - created_at
      - updated_at
      type: object
    ImportTaskHistory:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        next_state:
          type: string
          x-stream-index: "006"
        prev_state:
          type: string
          x-stream-index: "005"
      required:
      - prev_state
      - next_state
      - created_at
      type: object
    IngressAudioEncodingOptions:
      properties:
        bitrate:
          maximum: 128000
          minimum: 16000
          type: integer
          x-stream-index: "003"
        channels:
          enum:
          - "1"
          - "2"
          format: int32
          type: integer
          x-stream-index: "001"
        enable_dtx:
          type: boolean
          x-stream-index: "002"
      required:
      - channels
      - enable_dtx
      - bitrate
      type: object
    IngressAudioEncodingResponse:
      properties:
        bitrate:
          format: int32
          type: integer
          x-stream-index: "003"
        channels:
          format: int32
          type: integer
          x-stream-index: "001"
        enable_dtx:
          type: boolean
          x-stream-index: "002"
      required:
      - channels
      - enable_dtx
      - bitrate
      type: object
    IngressSettings:
      properties:
        audio_encoding_options:
          $ref: '#/components/schemas/IngressAudioEncodingOptions'
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        video_encoding_options:
          additionalProperties:
            $ref: '#/components/schemas/IngressVideoEncodingOptions'
          type: object
          x-stream-index: "003"
      required:
      - enabled
      type: object
    IngressSettingsResponse:
      properties:
        audio_encoding_options:
          $ref: '#/components/schemas/IngressAudioEncodingResponse'
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        video_encoding_options:
          additionalProperties:
            $ref: '#/components/schemas/IngressVideoEncodingResponse'
          type: object
          x-stream-index: "003"
      required:
      - enabled
      type: object
    IngressVideoEncodingOptions:
      properties:
        layers:
          items:
            $ref: '#/components/schemas/IngressVideoLayer'
          minimum: 1
          type: array
          x-stream-index: "001"
      required:
      - layers
      type: object
    IngressVideoEncodingResponse:
      properties:
        layers:
          items:
            $ref: '#/components/schemas/IngressVideoLayerResponse'
          type: array
          x-stream-index: "001"
      required:
      - layers
      type: object
    IngressVideoLayer:
      nullable: true
      properties:
        bitrate:
          minimum: 1000
          type: integer
          x-stream-index: "002"
        codec:
          enum:
          - h264
          - vp8
          type: string
          x-stream-index: "001"
        frame_rate:
          maximum: 60
          minimum: 1
          type: integer
          x-stream-index: "003"
        max_dimension:
          minimum: 240
          type: integer
          x-stream-index: "005"
        min_dimension:
          minimum: 240
          type: integer
          x-stream-index: "004"
      required:
      - codec
      - bitrate
      - frame_rate
      - min_dimension
      - max_dimension
      type: object
    IngressVideoLayerResponse:
      nullable: true
      properties:
        bitrate:
          type: integer
          x-stream-index: "002"
        codec:
          type: string
          x-stream-index: "001"
        frame_rate_limit:
          type: integer
          x-stream-index: "005"
        max_dimension:
          type: integer
          x-stream-index: "004"
        min_dimension:
          type: integer
          x-stream-index: "003"
      required:
      - codec
      - bitrate
      - min_dimension
      - max_dimension
      - frame_rate_limit
      type: object
    LLMConfig:
      properties:
        app_context:
          type: string
          x-stream-index: "005"
        async:
          type: boolean
          x-stream-index: "001"
        enabled:
          type: boolean
          x-stream-index: "002"
        rules:
          items:
            $ref: '#/components/schemas/LLMRule'
          type: array
          x-stream-index: "003"
        severity_descriptions:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
      type: object
    LLMRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          - keep
          type: string
          x-stream-index: "003"
        description:
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
        severity_rules:
          items:
            $ref: '#/components/schemas/BodyguardSeverityRule'
          type: array
          x-stream-index: "004"
      required:
      - label
      - description
      type: object
    LabelThresholds:
      properties:
        block:
          description: Threshold for automatic message block
          format: float
          maximum: 1
          minimum: 0
          title: Block
          type: number
          x-stream-index: "002"
        flag:
          description: Threshold for automatic message flag
          format: float
          maximum: 1
          minimum: 0
          title: Flag
          type: number
          x-stream-index: "001"
      type: object
    LayoutSettings:
      properties:
        detect_orientation:
          type: boolean
          x-stream-index: "005"
        external_app_url:
          type: string
          x-stream-index: "003"
        external_css_url:
          type: string
          x-stream-index: "004"
        name:
          enum:
          - spotlight
          - grid
          - single-participant
          - mobile
          - custom
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      required:
      - name
      - external_app_url
      - external_css_url
      type: object
    LayoutSettingsResponse:
      properties:
        detect_orientation:
          type: boolean
          x-stream-index: "005"
        external_app_url:
          type: string
          x-stream-index: "003"
        external_css_url:
          type: string
          x-stream-index: "004"
        name:
          enum:
          - spotlight
          - grid
          - single-participant
          - mobile
          - custom
          type: string
          x-stream-index: "001"
        options:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
      required:
      - name
      - external_app_url
      - external_css_url
      type: object
    LimitInfo:
      properties:
        limit:
          description: The maximum number of calls allowed for the time window
          format: int32
          title: Limit
          type: integer
          x-stream-index: "001"
        remaining:
          description: The number of remaining calls in the current window
          format: int64
          title: Remaining
          type: integer
          x-stream-index: "002"
        reset:
          description: The Unix timestamp of the next window
          format: int64
          title: Reset
          type: integer
          x-stream-index: "003"
      required:
      - limit
      - remaining
      - reset
      title: Rate Limit info
      type: object
      x-stream-docs-page-id: rate_limits
    LimitsSettings:
      properties:
        max_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "004"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
        max_participants_exclude_owner:
          type: boolean
          x-stream-index: "003"
        max_participants_exclude_roles:
          items:
            type: string
          type: array
          x-stream-index: "002"
      required:
      - max_participants_exclude_roles
      type: object
    LimitsSettingsResponse:
      properties:
        max_duration_seconds:
          format: int32
          type: integer
          x-stream-index: "004"
        max_participants:
          format: int32
          type: integer
          x-stream-index: "001"
        max_participants_exclude_owner:
          type: boolean
          x-stream-index: "003"
        max_participants_exclude_roles:
          items:
            type: string
          type: array
          x-stream-index: "002"
      required:
      - max_participants_exclude_roles
      type: object
    ListBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklists:
          items:
            $ref: '#/components/schemas/BlockListResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - blocklists
      - duration
      title: Response
      type: object
    ListDevicesResponse:
      description: List devices response
      nullable: true
      properties:
        devices:
          description: List of devices
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - devices
      - duration
      title: ListDevicesResponse
      type: object
    ListExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        external_storages:
          additionalProperties:
            $ref: '#/components/schemas/ExternalStorageResponse'
          type: object
          x-stream-index: "002"
      required:
      - duration
      - external_storages
      title: Response
      type: object
    ListFeedGroupsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        groups:
          additionalProperties:
            $ref: '#/components/schemas/FeedGroupResponse'
          type: object
          x-stream-index: "001"
      required:
      - groups
      - duration
      title: Response
      type: object
    ListFeedViewsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        views:
          additionalProperties:
            $ref: '#/components/schemas/FeedViewResponse'
          description: Map of feed view ID to feed view
          title: Views
          type: object
          x-stream-index: "001"
      required:
      - views
      - duration
      title: List Feed Views Response
      type: object
    ListFeedVisibilitiesResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_visibilities:
          additionalProperties:
            $ref: '#/components/schemas/FeedVisibilityResponse'
          description: Map of feed visibility configurations by name
          title: Feed Visibilities
          type: object
          x-stream-index: "001"
      required:
      - feed_visibilities
      - duration
      title: List Feed Visibilities Response
      type: object
    ListImportsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        import_tasks:
          items:
            $ref: '#/components/schemas/ImportTask'
          type: array
          x-stream-index: "001"
      required:
      - import_tasks
      - duration
      title: Response
      type: object
    ListPermissionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          type: array
          x-stream-index: "001"
      required:
      - permissions
      - duration
      title: Response
      type: object
    ListPushProvidersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        push_providers:
          items:
            $ref: '#/components/schemas/PushProviderResponse'
          type: array
          x-stream-index: "001"
      required:
      - push_providers
      - duration
      title: Response
      type: object
    ListRolesResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
          x-stream-index: "001"
      required:
      - roles
      - duration
      title: Response
      type: object
    MarkActivityRequest:
      nullable: true
      properties:
        mark_all_read:
          description: Whether to mark all activities as read
          title: Mark All Read
          type: boolean
          x-stream-index: "005"
        mark_all_seen:
          description: Whether to mark all activities as seen
          title: Mark All Seen
          type: boolean
          x-stream-index: "003"
        mark_read:
          description: List of activity IDs to mark as read
          items:
            type: string
          title: Mark Read
          type: array
          x-stream-index: "004"
        mark_seen:
          description: List of activity IDs to mark as seen
          items:
            type: string
          title: Mark Seen
          type: array
          x-stream-index: "006"
        mark_watched:
          description: List of activity IDs to mark as watched (for stories)
          items:
            type: string
          title: Mark Watched
          type: array
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "009.002"
        user_id:
          type: string
          x-stream-index: "009.001"
      title: Mark Activity Request
      type: object
    MarkReviewedRequest:
      properties:
        content_to_mark_as_reviewed_limit:
          format: int32
          maximum: 2500
          type: integer
          x-stream-index: "002"
        disable_marking_content_as_reviewed:
          type: boolean
          x-stream-index: "001"
      type: object
    MemberLookup:
      properties:
        Limit:
          format: int32
          type: integer
          writeOnly: true
          x-stream-index: "001"
      required:
      - Limit
      type: object
    MembershipLevelResponse:
      properties:
        created_at:
          description: When the membership level was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "007"
        custom:
          additionalProperties: {}
          description: Custom data for the membership level
          title: Custom Data
          type: object
          x-stream-index: "006"
        description:
          description: Description of the membership level
          title: Description
          type: string
          x-stream-index: "003"
        id:
          description: Unique identifier for the membership level
          title: ID
          type: string
          x-stream-index: "001"
        name:
          description: Display name for the membership level
          title: Name
          type: string
          x-stream-index: "002"
        priority:
          description: Priority level
          format: int32
          title: Priority
          type: integer
          x-stream-index: "004"
        tags:
          description: Activity tags this membership level gives access to
          items:
            type: string
          title: Tags
          type: array
          x-stream-index: "005"
        updated_at:
          description: When the membership level was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "008"
      required:
      - id
      - name
      - priority
      - tags
      - created_at
      - updated_at
      title: Membership Level Response
      type: object
    Message:
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "012"
        before_message_send_failed:
          type: boolean
          x-stream-index: "046"
        cid:
          type: string
          x-stream-index: "028"
        command:
          type: string
          x-stream-index: "006"
        created_at:
          format: date-time
          type: number
          x-stream-index: "030"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "034"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "033"
        deleted_for_me:
          type: boolean
          x-stream-index: "060"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "023"
        html:
          type: string
          x-stream-index: "007"
        i18n:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "044"
        id:
          type: string
          x-stream-index: "002"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "040"
        latest_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "013"
        member:
          $ref: '#/components/schemas/ChannelMember'
          x-stream-index: "059"
        mentioned_users:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "043"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "052"
        mml:
          type: string
          x-stream-index: "005"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "056"
        own_reactions:
          items:
            $ref: '#/components/schemas/Reaction'
          type: array
          x-stream-index: "014"
        parent_id:
          type: string
          x-stream-index: "019"
        pin_expires:
          format: date-time
          type: number
          x-stream-index: "051"
        pinned:
          type: boolean
          x-stream-index: "047"
        pinned_at:
          format: date-time
          type: number
          x-stream-index: "048"
        pinned_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "050"
        poll:
          $ref: '#/components/schemas/Poll'
          x-stream-index: "054"
        poll_id:
          type: string
          x-stream-index: "053"
        quoted_message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "025"
        quoted_message_id:
          type: string
          x-stream-index: "024"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "015"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "017"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "016"
        reminder:
          $ref: '#/components/schemas/MessageReminder'
          x-stream-index: "058"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "022"
        restricted_visibility:
          items:
            type: string
          type: array
          x-stream-index: "011"
        shadowed:
          type: boolean
          x-stream-index: "036"
        shared_location:
          $ref: '#/components/schemas/SharedLocation'
          x-stream-index: "055"
        show_in_channel:
          type: boolean
          x-stream-index: "021"
        silent:
          type: boolean
          x-stream-index: "045"
        text:
          type: string
          x-stream-index: "004"
        thread_participants:
          items:
            $ref: '#/components/schemas/User'
          type: array
          x-stream-index: "027"
        type:
          type: string
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "031"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "010"
      required:
      - id
      - text
      - html
      - type
      - restricted_visibility
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reaction_groups
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      type: object
    MessageReminder:
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "004"
        channel_cid:
          type: string
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "011"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "006"
        message_id:
          type: string
          x-stream-index: "005"
        remind_at:
          format: date-time
          type: number
          x-stream-index: "009"
        task_id:
          type: string
          x-stream-index: "010"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "012"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "008"
        user_id:
          type: string
          x-stream-index: "007"
      required:
      - channel_cid
      - message_id
      - user_id
      - task_id
      - created_at
      - updated_at
      type: object
    MessageResponse:
      description: Represents any chat message
      properties:
        attachments:
          description: Array of message attachments
          items:
            $ref: '#/components/schemas/Attachment'
          title: Message attachments
          type: array
          x-stream-docs-page-id: message_format#attachment-format
          x-stream-index: "009"
        cid:
          description: Channel unique identifier in <type>:<id> format
          title: Channel CID
          type: string
          x-stream-index: "023"
        command:
          description: Contains provided slash command
          title: Command
          type: string
          x-stream-docs-page-id: custom_commands_webhook
          x-stream-index: "004"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "024"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "027"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "026"
        deleted_for_me:
          type: boolean
          x-stream-index: "045"
        deleted_reply_count:
          format: int32
          type: integer
          x-stream-index: "019"
        draft:
          $ref: '#/components/schemas/DraftResponse'
          x-stream-index: "042"
        html:
          description: Contains HTML markup of the message. Can only be set when using
            server-side API
          title: HTML content
          type: string
          x-stream-index: "005"
        i18n:
          additionalProperties:
            type: string
          description: Object with translations. Key `language` contains the original
            language key. Other keys contain translations
          title: Internationalization info
          type: object
          x-stream-docs-page-id: translation
          x-stream-index: "031"
        id:
          description: Message ID is unique string identifier of the message
          title: ID
          type: string
          x-stream-index: "001"
        image_labels:
          additionalProperties:
            items:
              type: string
            type: array
          description: Contains image moderation information
          title: Image moderation labels
          type: object
          x-stream-index: "029"
        latest_reactions:
          description: List of 10 latest reactions to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Latest reactions
          type: array
          x-stream-index: "010"
        member:
          $ref: '#/components/schemas/ChannelMemberResponse'
          description: Channel member data for the message sender including only the
            `channel_role`
          title: Member object
          x-stream-index: "008"
        mentioned_users:
          description: List of mentioned users
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Mentioned Users
          type: array
          x-stream-index: "030"
        message_text_updated_at:
          format: date-time
          type: number
          x-stream-index: "037"
        mml:
          description: Should be empty if `text` is provided. Can only be set when
            using server-side API
          title: Messaging Markup Language
          type: string
          x-stream-docs-page-id: mml_overview
          x-stream-index: "003"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "040"
        own_reactions:
          description: List of 10 latest reactions of authenticated user to this message
          items:
            $ref: '#/components/schemas/ReactionResponse'
          title: Own reactions
          type: array
          x-stream-index: "011"
        parent_id:
          description: ID of parent message (thread)
          title: Parent message ID
          type: string
          x-stream-docs-page-id: threads
          x-stream-index: "016"
        pin_expires:
          description: Date when pinned message expires
          format: date-time
          title: Pin expiration date
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "036"
        pinned:
          description: Whether message is pinned or not
          title: Pinned
          type: boolean
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "033"
        pinned_at:
          description: Date when message got pinned
          format: date-time
          title: Pinned at
          type: number
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "034"
        pinned_by:
          $ref: '#/components/schemas/UserResponse'
          description: Contains user who pinned the message
          title: Pinned by
          x-stream-docs-page-id: pinned_messages
          x-stream-index: "035"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          x-stream-index: "039"
        poll_id:
          description: Identifier of the poll to include in the message
          title: Poll ID
          type: string
          x-stream-index: "038"
        quoted_message:
          $ref: '#/components/schemas/MessageResponse'
          description: Contains quoted message
          title: Quoted message
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "021"
        quoted_message_id:
          title: ID of quoted message
          type: string
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "020"
        reaction_counts:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing number of reactions of each type. Key:
            reaction type (string), value: number of reactions (int)'
          title: Reaction counts
          type: object
          x-stream-index: "012"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "015"
        reaction_scores:
          additionalProperties:
            format: int32
            type: integer
          description: 'An object containing scores of reactions of each type. Key:
            reaction type (string), value: total score of reactions (int)'
          title: Reaction scores
          type: object
          x-stream-index: "013"
        reminder:
          $ref: '#/components/schemas/ReminderResponseData'
          x-stream-index: "043"
        reply_count:
          description: Number of replies to this message
          format: int32
          title: Reply count
          type: integer
          x-stream-index: "018"
        restricted_visibility:
          description: A list of user ids that have restricted visibility to the message,
            if the list is not empty, the message is only visible to the users in
            the list
          items:
            type: string
          title: Restricted visibility
          type: array
          x-stream-index: "041"
        shadowed:
          description: Whether the message was shadowed or not
          title: Shadowed
          type: boolean
          x-stream-docs-page-id: moderation#shadow-ban
          x-stream-index: "028"
        shared_location:
          $ref: '#/components/schemas/SharedLocationResponseData'
          description: Contains shared location data
          title: Shared Location
          x-stream-index: "044"
        show_in_channel:
          description: Whether thread reply should be shown in the channel as well
          title: Show in channel
          type: boolean
          x-stream-docs-page-id: threads
          x-stream-index: "017"
        silent:
          description: Whether message is silent or not
          title: Silent
          type: boolean
          x-stream-index: "032"
        text:
          description: Text of the message. Should be empty if `mml` is provided
          title: Text
          type: string
          x-stream-index: "002"
        thread_participants:
          description: List of users who participate in thread
          items:
            $ref: '#/components/schemas/UserResponse'
          title: Thread participants
          type: array
          x-stream-docs-page-id: threads#quote-message
          x-stream-index: "022"
        type:
          description: Contains type of the message
          enum:
          - regular
          - ephemeral
          - error
          - reply
          - system
          - deleted
          title: Message Type
          type: string
          x-stream-docs-page-id: message_format#message-types
          x-stream-index: "006"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "025"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Sender of the message. Required when using server-side API
          title: User object
          x-stream-index: "007"
      required:
      - id
      - text
      - html
      - type
      - user
      - attachments
      - latest_reactions
      - own_reactions
      - reaction_counts
      - reaction_scores
      - reply_count
      - deleted_reply_count
      - cid
      - created_at
      - updated_at
      - custom
      - shadowed
      - mentioned_users
      - silent
      - pinned
      - restricted_visibility
      title: Message
      type: object
      x-stream-docs-page-id: send_message
    ModerationActionConfig:
      nullable: true
      properties:
        action:
          type: string
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "009"
        description:
          type: string
          x-stream-index: "008"
        entity_type:
          type: string
          x-stream-index: "004"
        icon:
          type: string
          x-stream-index: "007"
        order:
          format: int32
          type: integer
          x-stream-index: "005"
      required:
      - entity_type
      - order
      - action
      - icon
      - description
      - custom
      type: object
    ModerationCheckCompletedEvent:
      description: This event is sent when a moderation check is completed
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        entity_id:
          description: The ID of entity which was moderated
          title: EntityID
          type: string
          x-stream-index: "002"
        entity_type:
          description: The type of the entity which was moderated
          title: EntityType
          type: string
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        recommended_action:
          description: The recommended action
          title: RecommendedAction
          type: string
          x-stream-index: "004"
        review_queue_item_id:
          description: The review queue item ID
          title: ReviewQueueItemID
          type: string
          x-stream-index: "005"
        type:
          default: moderation_check.completed
          type: string
          x-stream-index: "001.002"
      required:
      - type
      - created_at
      - custom
      - entity_id
      - entity_type
      - recommended_action
      - review_queue_item_id
      title: ModerationCheckCompletedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationConfig:
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          x-stream-index: "012"
        ai_image_lite_config:
          $ref: '#/components/schemas/BodyguardImageAnalysisConfig'
          x-stream-index: "011"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          x-stream-index: "010"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          x-stream-index: "013"
        async:
          type: boolean
          x-stream-index: "005"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          x-stream-index: "007"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          x-stream-index: "008"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          x-stream-index: "006"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          x-stream-index: "009"
        created_at:
          format: date-time
          type: number
          x-stream-index: "019"
        google_vision_config:
          $ref: '#/components/schemas/GoogleVisionConfig'
          x-stream-index: "014"
        key:
          type: string
          x-stream-index: "004"
        llm_config:
          $ref: '#/components/schemas/LLMConfig'
          x-stream-index: "017"
        supported_video_call_harm_types:
          items:
            type: string
          type: array
          x-stream-index: "022"
        team:
          type: string
          x-stream-index: "018"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "020"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          x-stream-index: "015"
        video_call_rule_config:
          $ref: '#/components/schemas/VideoCallRuleConfig'
          x-stream-index: "021"
      type: object
    ModerationCustomActionEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002"
        type:
          default: moderation.custom_action
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationCustomActionEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationDashboardPreferences:
      properties:
        disable_flagging_reviewed_entity:
          type: boolean
          x-stream-index: "003"
        flag_user_on_flagged_content:
          type: boolean
          x-stream-index: "002"
        media_queue_blur_enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    ModerationFlagResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "015"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        entity_creator_id:
          type: string
          x-stream-index: "007"
        entity_id:
          type: string
          x-stream-index: "006"
        entity_type:
          type: string
          x-stream-index: "005"
        labels:
          items:
            type: string
          type: array
          x-stream-index: "011"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "008"
        reason:
          type: string
          x-stream-index: "009"
        result:
          items:
            additionalProperties: {}
            type: object
          type: array
          x-stream-index: "012"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          x-stream-index: "014"
        review_queue_item_id:
          type: string
          x-stream-index: "013"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "016"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "004"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - type
      - user_id
      - entity_type
      - entity_id
      - result
      - created_at
      - updated_at
      type: object
    ModerationFlaggedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          type: string
          x-stream-index: "001"
        object_id:
          type: string
          x-stream-index: "002"
        type:
          default: moderation.flagged
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationFlaggedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationMarkReviewedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        item:
          $ref: '#/components/schemas/ReviewQueueItem'
          x-stream-index: "001"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "002"
        type:
          default: moderation.mark_reviewed
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: ModerationMarkReviewedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ModerationPayload:
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        images:
          items:
            type: string
          maximum: 30
          type: array
          x-stream-index: "002"
        texts:
          items:
            type: string
          type: array
          x-stream-index: "001"
        videos:
          items:
            type: string
          type: array
          x-stream-index: "003"
      type: object
    ModerationRuleV2Response:
      properties:
        action:
          $ref: '#/components/schemas/RuleBuilderAction'
          x-stream-index: "010"
        conditions:
          items:
            $ref: '#/components/schemas/RuleBuilderCondition'
          type: array
          x-stream-index: "007"
        config_keys:
          items:
            type: string
          type: array
          x-stream-index: "004"
        cooldown_period:
          type: string
          x-stream-index: "011"
        created_at:
          format: date-time
          type: number
          x-stream-index: "013"
        description:
          type: string
          x-stream-index: "003"
        enabled:
          type: boolean
          x-stream-index: "012"
        groups:
          items:
            $ref: '#/components/schemas/RuleBuilderConditionGroup'
          type: array
          x-stream-index: "009"
        id:
          type: string
          x-stream-index: "001"
        logic:
          type: string
          x-stream-index: "008"
        name:
          type: string
          x-stream-index: "002"
        rule_type:
          type: string
          x-stream-index: "006"
        team:
          type: string
          x-stream-index: "005"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "014"
      required:
      - id
      - name
      - description
      - config_keys
      - team
      - rule_type
      - action
      - enabled
      - created_at
      - updated_at
      type: object
    ModerationV2Response:
      properties:
        action:
          type: string
          x-stream-index: "001"
        blocklist_matched:
          type: string
          x-stream-index: "005"
        image_harms:
          items:
            type: string
          type: array
          x-stream-index: "004"
        original_text:
          type: string
          x-stream-index: "002"
        platform_circumvented:
          type: boolean
          x-stream-index: "007"
        semantic_filter_matched:
          type: string
          x-stream-index: "006"
        text_harms:
          items:
            type: string
          type: array
          x-stream-index: "003"
      required:
      - action
      - original_text
      type: object
    MuteRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to mute (if multiple users)
          items:
            type: string
          title: Target IDs
          type: array
          x-stream-index: "001"
        timeout:
          description: Duration of mute in minutes
          minimum: 0
          title: Timeout
          type: integer
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - target_ids
      title: MuteRequest
      type: object
    MuteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "004.001"
        mutes:
          description: Object with mutes (if multiple users were muted)
          items:
            $ref: '#/components/schemas/UserMute'
          title: Mutes
          type: array
          x-stream-index: "001"
        non_existing_users:
          description: A list of users that can't be found. Common cause for this
            is deleted users
          items:
            type: string
          title: Non Existing Users
          type: array
          x-stream-index: "003"
        own_user:
          $ref: '#/components/schemas/OwnUser'
          description: Authorized user object with fresh mutes information
          title: Own User
          x-stream-index: "002"
      required:
      - duration
      title: MuteResponse
      type: object
    NoiseCancellationSettings:
      properties:
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
      required:
      - mode
      type: object
    NotificationConfig:
      properties:
        track_read:
          description: Whether to track read status
          title: Track Read
          type: boolean
          x-stream-index: "002"
        track_seen:
          description: Whether to track seen status
          title: Track Seen
          type: boolean
          x-stream-index: "001"
      title: Notification Configuration
      type: object
    NotificationContext:
      properties:
        target:
          $ref: '#/components/schemas/NotificationTarget'
          description: Information about the target of the notification
          title: Notification Target
          x-stream-index: "002"
        trigger:
          $ref: '#/components/schemas/NotificationTrigger'
          description: Information about what triggered the notification
          title: Notification Trigger
          x-stream-index: "001"
      title: NotificationContext
      type: object
    NotificationFeedUpdatedEvent:
      description: Emitted when notification feed is updated.
      nullable: true
      properties:
        aggregated_activities:
          description: Aggregated activities for notification feeds
          items:
            $ref: '#/components/schemas/AggregatedActivityResponse'
          title: Aggregated Activities
          type: array
          x-stream-index: "001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: 003.001.003
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: 003.001.007
        feed_visibility:
          type: string
          x-stream-index: "003.003"
        fid:
          description: The ID of the feed
          title: Feed ID
          type: string
          x-stream-index: "003.002"
        notification_status:
          $ref: '#/components/schemas/NotificationStatusResponse'
          description: Notification status including unread/unseen counts
          title: Notification Status
          x-stream-index: "002"
        received_at:
          format: date-time
          type: number
          x-stream-index: 003.001.004
        type:
          default: feeds.notification_feed.updated
          description: 'The type of event: "feeds.notification_feed.updated" in this
            case'
          title: Event Type
          type: string
          x-stream-index: 003.001.002
        user:
          $ref: '#/components/schemas/UserResponseCommonFields'
          description: The user who triggered the notification
          title: User
          x-stream-index: "004.001"
      required:
      - type
      - created_at
      - custom
      - fid
      title: NotificationFeedUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    NotificationSettings:
      properties:
        call_live_started:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "002"
        call_missed:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "006"
        call_notification:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "004"
        call_ring:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        session_started:
          $ref: '#/components/schemas/EventNotificationSettings'
          x-stream-index: "003"
      required:
      - enabled
      - call_live_started
      - session_started
      - call_notification
      - call_ring
      - call_missed
      type: object
    NotificationStatusResponse:
      properties:
        last_read_at:
          format: date-time
          type: number
          x-stream-index: "006"
        last_seen_at:
          description: When notifications were last seen
          format: date-time
          title: Last Seen At
          type: number
          x-stream-index: "005"
        read_activities:
          description: IDs of activities that have been read
          items:
            type: string
          title: Read Activities
          type: array
          x-stream-index: "003"
        seen_activities:
          items:
            type: string
          type: array
          x-stream-index: "004"
        unread:
          description: Number of unread notifications
          format: int32
          title: Unread
          type: integer
          x-stream-index: "001"
        unseen:
          description: Number of unseen notifications
          format: int32
          title: Unseen
          type: integer
          x-stream-index: "002"
      required:
      - unread
      - unseen
      title: Notification Status
      type: object
    NotificationTarget:
      properties:
        attachments:
          description: Attachments on the target activity (for activity targets)
          items:
            $ref: '#/components/schemas/Attachment'
          title: Attachments
          type: array
          x-stream-index: "005"
        id:
          description: The ID of the target (activity ID or user ID)
          title: Target ID
          type: string
          x-stream-index: "001"
        name:
          description: The name of the target user (for user targets like follows)
          title: User Name
          type: string
          x-stream-index: "006"
        text:
          description: The text content of the target activity (for activity targets)
          title: Activity Text
          type: string
          x-stream-index: "004"
        type:
          description: The type of the target activity (for activity targets)
          title: Activity Type
          type: string
          x-stream-index: "003"
        user_id:
          description: The ID of the user who created the target activity (for activity
            targets)
          title: User ID
          type: string
          x-stream-index: "002"
      required:
      - id
      title: NotificationTarget
      type: object
    NotificationTrigger:
      properties:
        text:
          description: Human-readable text describing the notification
          title: Notification Text
          type: string
          x-stream-index: "002"
        type:
          description: The type of notification (mention, reaction, comment, follow,
            etc.)
          title: Notification Type
          type: string
          x-stream-index: "001"
      required:
      - type
      - text
      title: NotificationTrigger
      type: object
    NullTime:
      type: object
    OCRRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - bounce
          - bounce_flag
          - bounce_remove
          type: string
          x-stream-index: "002"
        label:
          type: string
          x-stream-index: "001"
      required:
      - label
      - action
      type: object
    OnlyUserID:
      properties:
        id:
          type: string
          x-stream-index: "001"
      required:
      - id
      type: object
    OwnUser:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "046"
        banned:
          type: boolean
          x-stream-index: "016"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "045"
        channel_mutes:
          items:
            $ref: '#/components/schemas/ChannelMute'
          type: array
          x-stream-index: "029"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "014"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "013"
        devices:
          items:
            $ref: '#/components/schemas/Device'
          type: array
          x-stream-index: "027"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "023"
        language:
          type: string
          x-stream-index: "035"
        last_active:
          format: date-time
          type: number
          x-stream-index: "011"
        last_engaged_at:
          format: date-time
          type: number
          x-stream-index: "012"
        latest_hidden_channels:
          items:
            type: string
          type: array
          x-stream-index: "037"
        mutes:
          items:
            $ref: '#/components/schemas/UserMute'
          type: array
          x-stream-index: "028"
        online:
          type: boolean
          x-stream-index: "022"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "026"
        push_preferences:
          $ref: '#/components/schemas/PushPreferences'
          x-stream-index: "025"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "036"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "005"
        total_unread_count:
          format: int32
          type: integer
          x-stream-index: "031"
        total_unread_count_by_team:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "032"
        unread_channels:
          format: int32
          type: integer
          x-stream-index: "033"
        unread_count:
          format: int32
          type: integer
          x-stream-index: "030"
        unread_threads:
          format: int32
          type: integer
          x-stream-index: "034"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
      required:
      - id
      - role
      - custom
      - created_at
      - updated_at
      - banned
      - online
      - devices
      - mutes
      - channel_mutes
      - unread_count
      - total_unread_count
      - total_unread_count_by_team
      - unread_channels
      - unread_threads
      - language
      type: object
    PagerRequest:
      properties:
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002"
        prev:
          type: string
          x-stream-index: "003"
      type: object
    PagerResponse:
      properties:
        next:
          type: string
          x-stream-index: "001"
        prev:
          type: string
          x-stream-index: "002"
      type: object
    Permission:
      properties:
        action:
          description: Action name this permission is for (e.g. SendMessage)
          title: Action
          type: string
          x-stream-index: "004"
        condition:
          additionalProperties: {}
          description: MongoDB style condition which decides whether or not the permission
            is granted
          title: Condition
          type: object
          x-stream-index: "007"
        custom:
          description: Whether this is a custom permission or built-in
          title: Custom
          type: boolean
          x-stream-index: "009"
        description:
          description: Description of the permission
          title: Description
          type: string
          x-stream-index: "003"
        id:
          description: Unique permission ID
          title: ID
          type: string
          x-stream-index: "001"
        level:
          description: Level at which permission could be applied (app or channel)
          enum:
          - app
          - channel
          title: Level
          type: string
          x-stream-index: "010"
        name:
          description: Name of the permission
          title: Name
          type: string
          x-stream-index: "002"
        owner:
          description: Whether this permission applies to resource owner or not
          title: Owner
          type: boolean
          x-stream-index: "005"
        same_team:
          description: Whether this permission applies to teammates (multi-tenancy
            mode only)
          title: Same team
          type: boolean
          x-stream-index: "006"
        tags:
          description: List of tags of the permission
          items:
            type: string
          title: Tags
          type: array
          x-stream-index: "011"
      required:
      - id
      - name
      - description
      - action
      - owner
      - same_team
      - custom
      - level
      - tags
      type: object
    PinActivityRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
      title: Pin Activity Request
      type: object
    PinActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The pinned activity
          title: Activity
          x-stream-index: "001"
        created_at:
          description: When the activity was pinned
          format: date-time
          title: Created At
          type: number
          x-stream-index: "004"
        duration:
          type: string
          x-stream-index: "005.001"
        feed:
          description: Fully qualified ID of the feed the activity was pinned to
          title: Feed ID
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user who pinned the activity
          title: User ID
          type: string
          x-stream-index: "003"
      required:
      - activity
      - feed
      - user_id
      - created_at
      - duration
      title: Pin Activity Response
      type: object
    Policy:
      properties:
        action:
          type: integer
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        name:
          type: string
          x-stream-index: "004"
        owner:
          type: boolean
          x-stream-index: "008"
        priority:
          format: int32
          type: integer
          x-stream-index: "009"
        resources:
          items:
            type: string
          type: array
          x-stream-index: "005"
        roles:
          items:
            type: string
          type: array
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
      required:
      - name
      - resources
      - roles
      - action
      - owner
      - priority
      - created_at
      - updated_at
      type: object
    Poll:
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "023"
        allow_answers:
          type: boolean
          x-stream-index: "010"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "009"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "015"
        created_at:
          format: date-time
          type: number
          x-stream-index: "021"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "020"
        created_by_id:
          type: string
          x-stream-index: "019"
        description:
          type: string
          x-stream-index: "005"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "007"
        id:
          type: string
          x-stream-index: "003"
        is_closed:
          type: boolean
          x-stream-index: "011"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "017"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVote'
            type: array
          type: object
          x-stream-index: "016"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "008"
        name:
          type: string
          x-stream-index: "004"
        options:
          items:
            $ref: '#/components/schemas/PollOption'
          type: array
          x-stream-index: "013"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVote'
          type: array
          x-stream-index: "018"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "022"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "012"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "014"
        voting_visibility:
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      - description
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - vote_counts_by_option
      - answers_count
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - Custom
      type: object
    PollOption:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollOptionInput:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        text:
          type: string
          x-stream-index: "002"
      type: object
    PollOptionRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          maxLength: 255
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      type: object
    PollOptionResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll_option:
          $ref: '#/components/schemas/PollOptionResponseData'
          description: Poll option
          title: PollOptionResponseData
          x-stream-index: "001"
      required:
      - poll_option
      - duration
      type: object
    PollOptionResponseData:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "003"
        id:
          type: string
          x-stream-index: "001"
        text:
          type: string
          x-stream-index: "002"
      required:
      - id
      - text
      - custom
      type: object
    PollResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        poll:
          $ref: '#/components/schemas/PollResponseData'
          description: Poll
          title: PollResponseData
          x-stream-index: "001"
      required:
      - poll
      - duration
      type: object
    PollResponseData:
      properties:
        allow_answers:
          type: boolean
          x-stream-index: "008"
        allow_user_suggested_options:
          type: boolean
          x-stream-index: "007"
        answers_count:
          format: int32
          type: integer
          x-stream-index: "012"
        created_at:
          format: date-time
          type: number
          x-stream-index: "019"
        created_by:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "018"
        created_by_id:
          type: string
          x-stream-index: "017"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "021"
        description:
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          type: boolean
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        is_closed:
          type: boolean
          x-stream-index: "009"
        latest_answers:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "015"
        latest_votes_by_option:
          additionalProperties:
            items:
              $ref: '#/components/schemas/PollVoteResponseData'
            type: array
          type: object
          x-stream-index: "014"
        max_votes_allowed:
          format: int32
          type: integer
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "002"
        options:
          items:
            $ref: '#/components/schemas/PollOptionResponseData'
          type: array
          x-stream-index: "011"
        own_votes:
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          type: array
          x-stream-index: "016"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "020"
        vote_count:
          format: int32
          type: integer
          x-stream-index: "010"
        vote_counts_by_option:
          additionalProperties:
            format: int32
            type: integer
          type: object
          x-stream-index: "013"
        voting_visibility:
          type: string
          x-stream-index: "004"
      required:
      - id
      - name
      - description
      - voting_visibility
      - enforce_unique_vote
      - allow_user_suggested_options
      - allow_answers
      - vote_count
      - options
      - answers_count
      - vote_counts_by_option
      - latest_votes_by_option
      - latest_answers
      - own_votes
      - created_by_id
      - created_at
      - updated_at
      - custom
      type: object
    PollVote:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "007"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        id:
          type: string
          x-stream-index: "004"
        is_answer:
          type: boolean
          x-stream-index: "006"
        option_id:
          type: string
          x-stream-index: "005"
        poll_id:
          type: string
          x-stream-index: "003"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "009"
        user_id:
          type: string
          x-stream-index: "008"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVoteResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        vote:
          $ref: '#/components/schemas/PollVoteResponseData'
          description: Poll vote
          title: PollVoteResponseData
          x-stream-index: "001"
      required:
      - duration
      type: object
    PollVoteResponseData:
      nullable: true
      properties:
        answer_text:
          type: string
          x-stream-index: "005"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        id:
          type: string
          x-stream-index: "002"
        is_answer:
          type: boolean
          x-stream-index: "004"
        option_id:
          type: string
          x-stream-index: "003"
        poll_id:
          type: string
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "006"
      required:
      - poll_id
      - id
      - option_id
      - created_at
      - updated_at
      type: object
    PollVotesResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        votes:
          description: Poll votes
          items:
            $ref: '#/components/schemas/PollVoteResponseData'
          title: PollVoteResponseList
          type: array
          x-stream-index: "001"
      required:
      - votes
      - duration
      type: object
    PrivacySettings:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceipts'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicators'
          x-stream-index: "001"
      type: object
    PrivacySettingsResponse:
      properties:
        read_receipts:
          $ref: '#/components/schemas/ReadReceiptsResponse'
          x-stream-index: "002"
        typing_indicators:
          $ref: '#/components/schemas/TypingIndicatorsResponse'
          x-stream-index: "001"
      type: object
    PushConfig:
      properties:
        offline_only:
          type: boolean
          x-stream-index: "002"
        version:
          enum:
          - v1
          - v2
          - v3
          type: string
          x-stream-index: "001"
      required:
      - version
      type: object
    PushNotificationConfig:
      properties:
        enable_push:
          description: Whether push notifications are enabled for this feed group
          title: Enable Push
          type: boolean
          x-stream-index: "001"
        push_types:
          description: List of notification types that should trigger push notifications
            (e.g., follow, comment, reaction, comment_reaction, mention)
          items:
            type: string
          title: Push Types
          type: array
          x-stream-index: "002"
      title: Push Notification Configuration
      type: object
    PushNotificationFields:
      properties:
        apn:
          $ref: '#/components/schemas/APNConfigFields'
          x-stream-index: "002"
        firebase:
          $ref: '#/components/schemas/FirebaseConfigFields'
          x-stream-index: "003"
        huawei:
          $ref: '#/components/schemas/HuaweiConfigFields'
          x-stream-index: "004"
        offline_only:
          type: boolean
          x-stream-index: "001.002"
        providers:
          items:
            $ref: '#/components/schemas/PushProvider'
          type: array
          x-stream-index: "006"
        version:
          type: string
          x-stream-index: "001.001"
        xiaomi:
          $ref: '#/components/schemas/XiaomiConfigFields'
          x-stream-index: "005"
      required:
      - version
      - offline_only
      - apn
      - firebase
      - huawei
      - xiaomi
      type: object
    PushNotificationSettingsResponse:
      properties:
        disabled:
          type: boolean
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "002"
      type: object
    PushPreferenceInput:
      nullable: true
      properties:
        call_level:
          description: Set the level of call push notifications for the user. One
            of all, none, default
          enum:
          - all
          - none
          - default
          type: string
          x-stream-index: "004"
        channel_cid:
          description: Set the push preferences for a specific channel. If empty it
            sets the default for the user
          type: string
          x-stream-index: "002"
        chat_level:
          description: Set the level of chat push notifications for the user. One
            of all, mentions, none, default
          enum:
          - all
          - mentions
          - none
          - default
          type: string
          x-stream-index: "003"
        disabled_until:
          description: Disable push notifications till a certain time
          format: date-time
          type: number
          x-stream-index: "007"
        feeds_level:
          description: Set the level of feeds push notifications for the user. One
            of all, none, default
          enum:
          - all
          - none
          - default
          type: string
          x-stream-index: "005"
        feeds_preferences:
          $ref: '#/components/schemas/FeedsPreferences'
          description: Set granular feeds preferences for reactions, comments, new
            followers, mentions, and custom activity types
          x-stream-index: "006"
        remove_disable:
          description: Remove the disabled until time. (IE stop snoozing notifications)
          type: boolean
          x-stream-index: "008"
        user_id:
          description: The user id for which to set the push preferences. Required
            when using server side auths, defaults to current user with client side
            auth.
          type: string
          x-stream-index: "001"
      type: object
    PushPreferences:
      nullable: true
      properties:
        call_level:
          type: string
          x-stream-index: "002"
        chat_level:
          type: string
          x-stream-index: "001"
        disabled_until:
          format: date-time
          type: number
          x-stream-index: "005"
        feeds_level:
          type: string
          x-stream-index: "003"
        feeds_preferences:
          $ref: '#/components/schemas/FeedsPreferences'
          x-stream-index: "004"
      type: object
    PushProvider:
      nullable: true
      properties:
        apn_auth_key:
          type: string
          x-stream-index: "012"
        apn_auth_type:
          type: string
          x-stream-index: "017"
        apn_development:
          type: boolean
          x-stream-index: "018"
        apn_host:
          type: string
          x-stream-index: "019"
        apn_key_id:
          type: string
          x-stream-index: "013"
        apn_notification_template:
          type: string
          x-stream-index: "020"
        apn_p12_cert:
          type: string
          x-stream-index: "014"
        apn_team_id:
          type: string
          x-stream-index: "015"
        apn_topic:
          type: string
          x-stream-index: "016"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        description:
          maxLength: 128
          type: string
          x-stream-index: "007"
        disabled_at:
          format: date-time
          type: number
          x-stream-index: "010"
        disabled_reason:
          maxLength: 255
          type: string
          x-stream-index: "011"
        firebase_apn_template:
          type: string
          x-stream-index: "025"
        firebase_credentials:
          type: string
          x-stream-index: "022"
        firebase_data_template:
          type: string
          x-stream-index: "023"
        firebase_host:
          type: string
          x-stream-index: "026"
        firebase_notification_template:
          type: string
          x-stream-index: "024"
        firebase_server_key:
          type: string
          x-stream-index: "021"
        huawei_app_id:
          type: string
          x-stream-index: "027"
        huawei_app_secret:
          type: string
          x-stream-index: "028"
        name:
          maxLength: 36
          minLength: 1
          type: string
          x-stream-index: "005"
        push_templates:
          items:
            $ref: '#/components/schemas/PushTemplate'
          type: array
          x-stream-index: "031"
        type:
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        xiaomi_app_secret:
          type: string
          x-stream-index: "030"
        xiaomi_package_name:
          type: string
          x-stream-index: "029"
      required:
      - name
      - type
      - created_at
      - updated_at
      type: object
    PushProviderResponse:
      properties:
        apn_auth_key:
          type: string
          x-stream-index: "008"
        apn_auth_type:
          type: string
          x-stream-index: "013"
        apn_development:
          type: boolean
          x-stream-index: "014"
        apn_host:
          type: string
          x-stream-index: "015"
        apn_key_id:
          type: string
          x-stream-index: "009"
        apn_p12_cert:
          type: string
          x-stream-index: "010"
        apn_sandbox_certificate:
          type: boolean
          x-stream-index: "016"
        apn_supports_remote_notifications:
          type: boolean
          x-stream-index: "018"
        apn_supports_voip_notifications:
          type: boolean
          x-stream-index: "017"
        apn_team_id:
          type: string
          x-stream-index: "011"
        apn_topic:
          type: string
          x-stream-index: "012"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        description:
          type: string
          x-stream-index: "003"
        disabled_at:
          format: date-time
          type: number
          x-stream-index: "006"
        disabled_reason:
          type: string
          x-stream-index: "007"
        firebase_apn_template:
          type: string
          x-stream-index: "023"
        firebase_credentials:
          type: string
          x-stream-index: "020"
        firebase_data_template:
          type: string
          x-stream-index: "021"
        firebase_host:
          type: string
          x-stream-index: "024"
        firebase_notification_template:
          type: string
          x-stream-index: "022"
        firebase_server_key:
          type: string
          x-stream-index: "019"
        huawei_app_id:
          type: string
          x-stream-index: "025"
        huawei_app_secret:
          type: string
          x-stream-index: "026"
        name:
          type: string
          x-stream-index: "001"
        type:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
        xiaomi_app_secret:
          type: string
          x-stream-index: "028"
        xiaomi_package_name:
          type: string
          x-stream-index: "027"
      required:
      - name
      - type
      - created_at
      - updated_at
      type: object
    PushTemplate:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "007"
        enable_push:
          type: boolean
          x-stream-index: "003"
        event_type:
          enum:
          - message.new
          - message.updated
          - reaction.new
          - notification.reminder_due
          - feeds.activity.added
          - feeds.comment.added
          - feeds.activity.reaction.added
          - feeds.comment.reaction.added
          - feeds.follow.created
          - feeds.notification_feed.updated
          type: string
          x-stream-index: "005"
        template:
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "008"
      required:
      - enable_push
      - event_type
      - created_at
      - updated_at
      type: object
    Quality:
      properties:
        bitdepth:
          format: int32
          type: integer
          x-stream-index: "007"
        framerate:
          format: int32
          type: integer
          x-stream-index: "008"
        height:
          format: int32
          type: integer
          x-stream-index: "006"
        name:
          type: string
          x-stream-index: "004"
        video_bitrate:
          format: int32
          type: integer
          x-stream-index: "009"
        width:
          format: int32
          type: integer
          x-stream-index: "005"
      type: object
    QueryActivitiesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query. Supports location-based queries
            with 'near' and 'within_bounds' operators.
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Activities Request
      type: object
    QueryActivitiesResponse:
      nullable: true
      properties:
        activities:
          description: List of activities matching the query
          items:
            $ref: '#/components/schemas/ActivityResponse'
          title: Activities
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - activities
      - duration
      title: Query Activities Response
      type: object
    QueryActivityReactionsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003"
      type: object
    QueryActivityReactionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryBookmarkFoldersRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Bookmark Folders Request
      type: object
    QueryBookmarkFoldersResponse:
      nullable: true
      properties:
        bookmark_folders:
          description: List of bookmark folders matching the query
          items:
            $ref: '#/components/schemas/BookmarkFolderResponse'
          title: Bookmark Folders
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - bookmark_folders
      - duration
      title: Query Bookmark Folders Response
      type: object
    QueryBookmarksRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Bookmarks Request
      type: object
    QueryBookmarksResponse:
      nullable: true
      properties:
        bookmarks:
          description: List of bookmarks matching the query
          items:
            $ref: '#/components/schemas/BookmarkResponse'
          title: Bookmarks
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - bookmarks
      - duration
      title: Query Bookmarks Response
      type: object
    QueryCommentReactionsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "003"
      type: object
    QueryCommentReactionsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
        reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001"
      required:
      - reactions
      - duration
      title: Response
      type: object
    QueryCommentsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: MongoDB-style filter for querying comments
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          description: Maximum number of comments to return
          format: int32
          maximum: 100
          minimum: 0
          title: Limit
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: first (oldest), last (newest) or top
          enum:
          - first
          - last
          - top
          - best
          - controversial
          title: Sort Order
          type: string
          x-stream-index: "002"
      required:
      - filter
      title: Query Comments Request
      type: object
    QueryCommentsResponse:
      nullable: true
      properties:
        comments:
          description: List of comments matching the query
          items:
            $ref: '#/components/schemas/CommentResponse'
          title: Comments
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - comments
      - duration
      title: Query Comments Response
      type: object
    QueryFeedMembersRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter parameters for the query
          title: object
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Sort parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: array
          type: array
          x-stream-index: "004"
      type: object
    QueryFeedMembersResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        members:
          description: List of feed members
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          title: array
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - members
      - duration
      type: object
    QueryFeedModerationTemplate:
      properties:
        config:
          $ref: '#/components/schemas/FeedsModerationTemplateConfig'
          description: Configuration for the moderation template
          title: Config
          x-stream-index: "002"
        created_at:
          description: When the template was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "003"
        name:
          description: Name of the moderation template
          title: Name
          type: string
          x-stream-index: "001"
        updated_at:
          description: When the template was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "004"
      required:
      - name
      - created_at
      - updated_at
      type: object
    QueryFeedModerationTemplatesResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        templates:
          description: List of moderation templates
          items:
            $ref: '#/components/schemas/QueryFeedModerationTemplate'
          title: Templates
          type: array
          x-stream-index: "001"
      required:
      - templates
      - duration
      type: object
    QueryFeedsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "004.002"
        prev:
          type: string
          x-stream-index: "004.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "003"
        watch:
          description: Whether to subscribe to realtime updates
          title: Watch
          type: boolean
          x-stream-index: "002"
      title: Query Feeds Request
      type: object
    QueryFeedsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        feeds:
          description: List of feeds matching the query
          items:
            $ref: '#/components/schemas/FeedResponse'
          title: Feeds
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - feeds
      - duration
      title: Query Feeds Response
      type: object
    QueryFollowsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Follows Request
      type: object
    QueryFollowsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        follows:
          description: List of follow relationships matching the query
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Follows
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - follows
      - duration
      title: Query Follows Response
      type: object
    QueryMembershipLevelsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filters to apply to the query
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the query
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "002"
      title: Query Membership Levels Request
      type: object
    QueryMembershipLevelsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        membership_levels:
          items:
            $ref: '#/components/schemas/MembershipLevelResponse'
          type: array
          x-stream-index: "001"
        next:
          description: Cursor for next page
          title: Next
          type: string
          x-stream-index: "002.001"
        prev:
          description: Cursor for previous page
          title: Previous
          type: string
          x-stream-index: "002.002"
      required:
      - membership_levels
      - duration
      title: Query Membership Levels Response
      type: object
    QueryModerationConfigsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions for moderation configs
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the results
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryModerationConfigsResponse:
      nullable: true
      properties:
        configs:
          description: List of moderation configurations
          items:
            $ref: '#/components/schemas/ConfigResponse'
          title: Configs
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - configs
      - duration
      type: object
    QueryModerationFlagsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          items:
            $ref: '#/components/schemas/SortParam'
          type: array
          x-stream-index: "002"
      type: object
    QueryModerationFlagsResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        flags:
          items:
            $ref: '#/components/schemas/ModerationFlagResponse'
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - flags
      - duration
      title: Response
      type: object
    QueryModerationLogsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions for moderation logs
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the results
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryModerationLogsResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "003.001"
        logs:
          description: List of moderation action logs
          items:
            $ref: '#/components/schemas/ActionLogResponse'
          title: Logs
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "002.001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - logs
      - duration
      type: object
    QueryModerationRulesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions for moderation rules
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "003.002"
        prev:
          type: string
          x-stream-index: "003.003"
        sort:
          description: Sorting parameters for the results
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      type: object
    QueryModerationRulesResponse:
      nullable: true
      properties:
        default_llm_labels:
          additionalProperties:
            type: string
          description: Default LLM label descriptions
          title: DefaultLLMLabels
          type: object
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "004.001"
        next:
          type: string
          x-stream-index: "003.001"
        prev:
          type: string
          x-stream-index: "003.002"
        rules:
          description: List of moderation rules
          items:
            $ref: '#/components/schemas/ModerationRuleV2Response'
          title: Rules
          type: array
          x-stream-index: "001"
      required:
      - rules
      - default_llm_labels
      - duration
      type: object
    QueryPollVotesRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "003"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "004"
      type: object
    QueryPollsRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter to apply to the query
          title: Filter
          type: object
          x-stream-index: "002"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.001"
        next:
          type: string
          x-stream-index: "005.002"
        prev:
          type: string
          x-stream-index: "005.003"
        sort:
          description: Array of sort parameters
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          title: Sort
          type: array
          x-stream-index: "003"
      type: object
    QueryPollsResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        next:
          type: string
          x-stream-index: "002.001"
        polls:
          description: Polls data returned by the query
          items:
            $ref: '#/components/schemas/PollResponseData'
          title: PollsResponseData
          type: array
          x-stream-index: "001"
        prev:
          type: string
          x-stream-index: "002.002"
      required:
      - polls
      - duration
      type: object
    QueryReviewQueueRequest:
      nullable: true
      properties:
        filter:
          additionalProperties: {}
          description: Filter conditions for review queue items
          title: Filter
          type: object
          x-stream-index: "001"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "007.001"
        lock_count:
          description: Number of items to lock (1-25)
          format: int32
          maximum: 25
          minimum: 1
          title: Lock Count
          type: integer
          x-stream-index: "005"
        lock_duration:
          description: Duration for which items should be locked
          title: Lock Duration
          type: integer
          x-stream-index: "004"
        lock_items:
          description: Whether to lock items for review (true), unlock items (false),
            or just fetch (nil)
          title: Lock Items
          type: boolean
          x-stream-index: "003"
        next:
          type: string
          x-stream-index: "007.002"
        prev:
          type: string
          x-stream-index: "007.003"
        sort:
          description: Sorting parameters for the results
          items:
            $ref: '#/components/schemas/SortParamRequest'
          title: Sort
          type: array
          x-stream-index: "002"
        stats_only:
          description: Whether to return only statistics
          title: Stats Only
          type: boolean
          x-stream-index: "006"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "008.002"
        user_id:
          type: string
          x-stream-index: "008.001"
      type: object
    QueryReviewQueueResponse:
      nullable: true
      properties:
        action_config:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ModerationActionConfig'
            type: array
          description: Configuration for moderation actions
          title: Action Config
          type: object
          x-stream-index: "002"
        duration:
          type: string
          x-stream-index: "005.001"
        items:
          description: List of review queue items
          items:
            $ref: '#/components/schemas/ReviewQueueItemResponse'
          title: Items
          type: array
          x-stream-index: "001"
        next:
          type: string
          x-stream-index: "004.001"
        prev:
          type: string
          x-stream-index: "004.002"
        stats:
          additionalProperties: {}
          description: Statistics about the review queue
          title: Stats
          type: object
          x-stream-index: "003"
      required:
      - items
      - action_config
      - stats
      - duration
      type: object
    QueryUsersPayload:
      properties:
        filter_conditions:
          additionalProperties: {}
          type: object
          x-stream-index: "001"
        include_deactivated_users:
          type: boolean
          x-stream-index: "004"
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "005.003"
        offset:
          format: int32
          maximum: 1000
          type: integer
          x-stream-index: "005.004"
        presence:
          type: boolean
          x-stream-index: "003"
        sort:
          items:
            $ref: '#/components/schemas/SortParamRequest'
          maximum: 5
          type: array
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "006.002"
        user_id:
          type: string
          x-stream-index: "006.001"
      required:
      - filter_conditions
      type: object
    QueryUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        users:
          description: Array of users as result of filters applied.
          items:
            $ref: '#/components/schemas/FullUserResponse'
          title: Users
          type: array
          x-stream-index: "001"
      required:
      - users
      - duration
      type: object
    RTMPEgressConfig:
      properties:
        composite_app_settings:
          $ref: '#/components/schemas/CompositeAppSettings'
          x-stream-index: "005"
        quality:
          $ref: '#/components/schemas/Quality'
          x-stream-index: "004"
        rtmp_location:
          type: string
          x-stream-index: "006"
      type: object
    RTMPIngress:
      description: RTMP input settings
      properties:
        address:
          title: Address
          type: string
          x-stream-index: "001"
      required:
      - address
      title: RTMPIngress
      type: object
    RTMPLocation:
      properties:
        name:
          type: string
          x-stream-index: "001"
        stream_key:
          type: string
          x-stream-index: "003"
        stream_url:
          type: string
          x-stream-index: "002"
      required:
      - name
      - stream_url
      - stream_key
      type: object
    RTMPSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettings'
          x-stream-index: "003"
        location:
          $ref: '#/components/schemas/RTMPLocation'
          x-stream-index: "004"
        quality_name:
          type: string
          x-stream-index: "002"
      required:
      - enabled
      type: object
    RTMPSettingsResponse:
      description: RTMPSettingsResponse is the payload for RTMP settings
      properties:
        enabled:
          title: Enabled
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettingsResponse'
          title: Layout
          x-stream-index: "003"
        quality:
          title: Quality
          type: string
          x-stream-index: "002"
      required:
      - enabled
      - quality
      - layout
      title: RTMPSettingsResponse
      type: object
    RankingConfig:
      properties:
        defaults:
          additionalProperties: {}
          description: Default values for ranking
          title: Defaults
          type: object
          x-stream-index: "003"
        functions:
          additionalProperties:
            $ref: '#/components/schemas/DecayFunctionConfig'
          description: Decay functions configuration
          title: Functions
          type: object
          x-stream-index: "004"
        score:
          description: Scoring formula. Required when type is 'expression' or 'interest'
          title: Score
          type: string
          x-stream-index: "002"
        type:
          description: 'Type of ranking algorithm. Required. Must be one of: recency,
            expression, interest'
          enum:
          - recency
          - expression
          - interest
          title: Type
          type: string
          x-stream-index: "001"
      required:
      - type
      title: Ranking Configuration
      type: object
    Reaction:
      nullable: true
      properties:
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "010"
        message_id:
          type: string
          x-stream-index: "003"
        score:
          format: int32
          type: integer
          x-stream-index: "007"
        type:
          maxLength: 30
          type: string
          x-stream-index: "006"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "005"
        user_id:
          type: string
          x-stream-index: "004"
      required:
      - message_id
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactionGroupResponse:
      description: ReactionGroupResponse contains all information about a reaction
        of the same type.
      nullable: true
      properties:
        count:
          description: Count is the number of reactions of this type.
          format: int32
          title: Count
          type: integer
          x-stream-index: "001"
        first_reaction_at:
          description: FirstReactionAt is the time of the first reaction of this type.
            This is the same also if all reaction of this type are deleted, because
            if someone will react again with the same type, will be preserved the
            sorting.
          format: date-time
          title: FirstReactionAt
          type: number
          x-stream-index: "003"
        last_reaction_at:
          description: LastReactionAt is the time of the last reaction of this type.
          format: date-time
          title: LastReactionAt
          type: number
          x-stream-index: "004"
        sum_scores:
          description: 'SumScores is the sum of all scores of reactions of this type.
            Medium allows you to clap articles more than once and shows the sum of
            all claps from all users. For example, you can send `clap` x5 using `score:
            5`.'
          format: int32
          title: SumScores
          type: integer
          x-stream-index: "002"
      required:
      - count
      - sum_scores
      - first_reaction_at
      - last_reaction_at
      title: ReactionGroupResponse
      type: object
    ReactionResponse:
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "006"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "008"
        message_id:
          description: Message ID
          title: Message ID
          type: string
          x-stream-index: "001"
        score:
          description: Score of the reaction
          format: int32
          title: Score
          type: integer
          x-stream-index: "005"
        type:
          description: Type of reaction
          title: Type
          type: string
          x-stream-index: "004"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "007"
        user:
          $ref: '#/components/schemas/UserResponse'
          description: User
          title: UserResponse
          x-stream-index: "003"
        user_id:
          description: User ID
          title: User ID
          type: string
          x-stream-index: "002"
      required:
      - message_id
      - user_id
      - user
      - type
      - score
      - created_at
      - updated_at
      - custom
      type: object
    ReactivateUserRequest:
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who's reactivating the user
          title: Created by ID
          type: string
          x-stream-index: "004"
        name:
          description: Set this field to put new name for the user
          title: Name
          type: string
          x-stream-index: "003"
        restore_messages:
          description: Restore previously deleted messages
          title: Restore messages
          type: boolean
          x-stream-index: "002"
      type: object
    ReactivateUserResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.002.001
        user:
          $ref: '#/components/schemas/UserResponse'
          description: Deactivated user object
          title: User
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    ReactivateUsersRequest:
      description: Reactivate users in batches
      nullable: true
      properties:
        created_by_id:
          description: ID of the user who's reactivating the users
          title: Created by ID
          type: string
          x-stream-index: "003"
        restore_channels:
          type: boolean
          x-stream-index: "004"
        restore_messages:
          description: Restore previously deleted messages
          title: Restore messages
          type: boolean
          x-stream-index: "002"
        user_ids:
          description: User IDs to reactivate
          items:
            type: string
          maximum: 100
          minimum: 1
          title: User IDs
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      title: ReactivateUsersRequest
      type: object
    ReactivateUsersResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: 001.002.001
        task_id:
          type: string
          x-stream-index: "001.001"
      required:
      - task_id
      - duration
      title: Response
      type: object
    ReadReceipts:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ReadReceiptsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    RecordSettings:
      properties:
        audio_only:
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettings'
          x-stream-index: "004"
        mode:
          type: string
          x-stream-index: "002"
        quality:
          type: string
          x-stream-index: "003"
      required:
      - mode
      type: object
    RecordSettingsResponse:
      description: RecordSettings is the payload for recording settings
      properties:
        audio_only:
          title: Audio Only
          type: boolean
          x-stream-index: "001"
        layout:
          $ref: '#/components/schemas/LayoutSettingsResponse'
          title: Layout
          x-stream-index: "004"
        mode:
          title: Mode
          type: string
          x-stream-index: "002"
        quality:
          title: Quality
          type: string
          x-stream-index: "003"
      required:
      - audio_only
      - mode
      - quality
      - layout
      title: RecordSettingsResponse
      type: object
    RecordingEgressConfig:
      properties:
        audio_only:
          type: boolean
          x-stream-index: "006"
        composite_app_settings:
          $ref: '#/components/schemas/CompositeAppSettings'
          x-stream-index: "005"
        external_storage:
          $ref: '#/components/schemas/ExternalStorage'
          x-stream-index: "008"
        quality:
          $ref: '#/components/schemas/Quality'
          x-stream-index: "004"
        storage_name:
          type: string
          x-stream-index: "007"
        video_orientation_hint:
          $ref: '#/components/schemas/VideoOrientation'
          x-stream-index: "009"
      type: object
    RejectFeedMemberInviteRequest:
      nullable: true
      properties:
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      title: Reject Feed Member Request
      type: object
    RejectFeedMemberInviteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        member:
          $ref: '#/components/schemas/FeedMemberResponse'
          description: The feed member after rejecting the invite
          title: Feed Member
          x-stream-index: "001"
      required:
      - member
      - duration
      title: Reject Feed Member Response
      type: object
    RejectFollowRequest:
      nullable: true
      properties:
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed ID
          type: string
          x-stream-index: "001"
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed ID
          type: string
          x-stream-index: "002"
      required:
      - source
      - target
      title: Reject Follow Request
      type: object
    RejectFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The rejected follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Reject Follow Response
      type: object
    ReminderResponseData:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "003"
        channel_cid:
          type: string
          x-stream-index: "002"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "005"
        message_id:
          type: string
          x-stream-index: "004"
        remind_at:
          format: date-time
          type: number
          x-stream-index: "001"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007"
        user_id:
          type: string
          x-stream-index: "006"
      required:
      - channel_cid
      - message_id
      - user_id
      - created_at
      - updated_at
      type: object
    RepliesMeta:
      description: Cursor & depth information for a comment's direct replies. Mirrors
        Reddit's 'load more replies' semantics.
      properties:
        depth_truncated:
          description: True if the subtree was cut because the requested depth was
            reached.
          title: Depth Truncated
          type: boolean
          x-stream-index: "004"
        has_more:
          description: True if more siblings exist in the database.
          title: Has More
          type: boolean
          x-stream-index: "001"
        next_cursor:
          description: Opaque cursor to request the next page of siblings.
          title: Next Cursor
          type: string
          x-stream-index: "002"
        remaining:
          description: Number of unread siblings that match current filters.
          format: int32
          title: Remaining
          type: integer
          x-stream-index: "003"
      required:
      - has_more
      - remaining
      - depth_truncated
      title: Replies Meta
      type: object
    Response:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001"
      required:
      - duration
      title: Response
      type: object
    RestoreActionRequest:
      type: object
    RestoreUsersRequest:
      nullable: true
      properties:
        user_ids:
          items:
            type: string
          maximum: 100
          minimum: 1
          type: array
          x-stream-index: "001"
      required:
      - user_ids
      type: object
    ReviewQueueItem:
      properties:
        actions:
          items:
            $ref: '#/components/schemas/ActionLog'
          type: array
          x-stream-index: "035"
        activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "028"
        ai_text_severity:
          type: string
          x-stream-index: "021"
        archived_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "043"
        assigned_to:
          $ref: '#/components/schemas/User'
          x-stream-index: "032"
        bans:
          items:
            $ref: '#/components/schemas/Ban'
          type: array
          x-stream-index: "033"
        bounce_count:
          format: int32
          type: integer
          x-stream-index: "025"
        call:
          $ref: '#/components/schemas/Call'
          x-stream-index: "031"
        completed_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "018"
        config_key:
          type: string
          x-stream-index: "009"
        content_changed:
          type: boolean
          x-stream-index: "036"
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        entity_creator:
          $ref: '#/components/schemas/EntityCreator'
          x-stream-index: "030"
        entity_id:
          type: string
          x-stream-index: "007"
        entity_type:
          type: string
          x-stream-index: "006"
        feeds_v2_activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "041"
        feeds_v2_reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "042"
        flag_labels:
          items:
            type: string
          type: array
          x-stream-index: "045"
        flag_types:
          items:
            type: string
          type: array
          x-stream-index: "044"
        flags:
          items:
            $ref: '#/components/schemas/Flag'
          type: array
          x-stream-index: "034"
        flags_count:
          format: int32
          type: integer
          x-stream-index: "026"
        has_image:
          type: boolean
          x-stream-index: "012"
        has_text:
          type: boolean
          x-stream-index: "014"
        has_video:
          type: boolean
          x-stream-index: "013"
        id:
          type: string
          x-stream-index: "003"
        languages:
          items:
            type: string
          type: array
          x-stream-index: "019"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "027"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          x-stream-index: "010"
        moderation_payload_hash:
          type: string
          x-stream-index: "011"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "029"
        recommended_action:
          type: string
          x-stream-index: "017"
        reporter_ids:
          items:
            type: string
          type: array
          x-stream-index: "046"
        reviewed_at:
          $ref: '#/components/schemas/NullTime'
          x-stream-index: "022"
        reviewed_by:
          type: string
          x-stream-index: "023"
        severity:
          format: int32
          type: integer
          x-stream-index: "020"
        status:
          type: string
          x-stream-index: "016"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "015"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
      required:
      - id
      - created_at
      - updated_at
      - entity_type
      - entity_id
      - config_key
      - moderation_payload_hash
      - has_image
      - has_video
      - has_text
      - teams
      - status
      - recommended_action
      - completed_at
      - languages
      - severity
      - ai_text_severity
      - reviewed_at
      - reviewed_by
      - bounce_count
      - flags_count
      - bans
      - flags
      - actions
      - content_changed
      - archived_at
      - flag_types
      - flag_labels
      - reporter_ids
      type: object
    ReviewQueueItemNewEvent:
      description: This event is sent when a new moderation review queue item is created
      nullable: true
      properties:
        action:
          $ref: '#/components/schemas/ActionLogResponse'
          description: The action log if any action was taken
          title: Action
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        flags:
          description: The flags associated with this review queue item
          items:
            $ref: '#/components/schemas/ModerationFlagResponse'
          title: Flags
          type: array
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: The review queue item that was created
          title: ReviewQueueItem
          x-stream-index: "002"
        type:
          default: review_queue_item.new
          type: string
          x-stream-index: "001.002"
      required:
      - type
      - created_at
      - custom
      title: ReviewQueueItemNewEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    ReviewQueueItemResponse:
      properties:
        actions:
          description: Moderation actions taken
          items:
            $ref: '#/components/schemas/ActionLogResponse'
          title: Actions
          type: array
          x-stream-index: "024"
        activity:
          $ref: '#/components/schemas/EnrichedActivity'
          x-stream-index: "016"
        ai_text_severity:
          description: AI-determined text severity
          title: AI Text Severity
          type: string
          x-stream-index: "014"
        assigned_to:
          $ref: '#/components/schemas/UserResponse'
          description: Moderator assigned to review this item
          title: Assigned To
          x-stream-index: "021"
        bans:
          description: Associated ban records
          items:
            $ref: '#/components/schemas/Ban'
          title: Bans
          type: array
          x-stream-index: "022"
        call:
          $ref: '#/components/schemas/CallResponse'
          x-stream-index: "018"
        completed_at:
          description: When the review was completed
          format: date-time
          title: Completed At
          type: number
          x-stream-index: "009"
        config_key:
          type: string
          x-stream-index: "028"
        created_at:
          description: When the item was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "002"
        entity_creator:
          $ref: '#/components/schemas/EntityCreatorResponse'
          description: Details about who created the entity
          title: Entity Creator
          x-stream-index: "019"
        entity_creator_id:
          description: ID of who created the entity
          title: Entity Creator ID
          type: string
          x-stream-index: "020"
        entity_id:
          description: ID of the entity being reviewed
          title: Entity ID
          type: string
          x-stream-index: "005"
        entity_type:
          description: Type of entity being reviewed
          title: Entity Type
          type: string
          x-stream-index: "004"
        feeds_v2_activity:
          $ref: '#/components/schemas/EnrichedActivity'
          description: Associated feed activity
          title: Feeds V2 Activity
          x-stream-index: "025"
        feeds_v2_reaction:
          $ref: '#/components/schemas/Reaction'
          description: Associated feed reaction
          title: Feeds V2 Reaction
          x-stream-index: "026"
        flags:
          description: Associated flag records
          items:
            $ref: '#/components/schemas/ModerationFlagResponse'
          title: Flags
          type: array
          x-stream-index: "023"
        flags_count:
          format: int32
          type: integer
          x-stream-index: "029"
        id:
          description: Unique identifier of the review queue item
          title: ID
          type: string
          x-stream-index: "001"
        languages:
          description: Detected languages in the content
          items:
            type: string
          title: Languages
          type: array
          x-stream-index: "012"
        message:
          $ref: '#/components/schemas/MessageResponse'
          description: Associated message details
          title: Message
          x-stream-index: "015"
        moderation_payload:
          $ref: '#/components/schemas/ModerationPayload'
          description: Content being moderated
          title: Moderation Payload
          x-stream-index: "006"
        reaction:
          $ref: '#/components/schemas/Reaction'
          x-stream-index: "017"
        recommended_action:
          description: Suggested moderation action
          title: Recommended Action
          type: string
          x-stream-index: "008"
        reviewed_at:
          description: When the item was reviewed
          format: date-time
          title: Reviewed At
          type: number
          x-stream-index: "010"
        reviewed_by:
          description: ID of the moderator who reviewed the item
          title: Reviewed By
          type: string
          x-stream-index: "011"
        severity:
          description: Severity level of the content
          format: int32
          title: Severity
          type: integer
          x-stream-index: "013"
        status:
          description: Current status of the review
          title: Status
          type: string
          x-stream-index: "007"
        teams:
          description: Teams associated with this item
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "027"
        updated_at:
          description: When the item was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "003"
      required:
      - id
      - created_at
      - updated_at
      - entity_type
      - entity_id
      - status
      - recommended_action
      - reviewed_by
      - languages
      - severity
      - ai_text_severity
      - bans
      - flags
      - actions
      - flags_count
      type: object
    ReviewQueueItemUpdatedEvent:
      description: This event is sent when a moderation review queue item is updated
      nullable: true
      properties:
        action:
          $ref: '#/components/schemas/ActionLogResponse'
          description: The action log if any action was taken
          title: Action
          x-stream-index: "004"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        flags:
          description: The flags associated with this review queue item
          items:
            $ref: '#/components/schemas/ModerationFlagResponse'
          title: Flags
          type: array
          x-stream-index: "003"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        review_queue_item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: The review queue item that was updated
          title: ReviewQueueItem
          x-stream-index: "002"
        type:
          default: review_queue_item.updated
          type: string
          x-stream-index: "001.002"
      required:
      - type
      - created_at
      - custom
      title: ReviewQueueItemUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    RingSettings:
      properties:
        auto_cancel_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      - missed_call_timeout_ms
      type: object
    RingSettingsResponse:
      properties:
        auto_cancel_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "002"
        incoming_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        missed_call_timeout_ms:
          format: int32
          type: integer
          x-stream-index: "003"
      required:
      - incoming_call_timeout_ms
      - auto_cancel_timeout_ms
      - missed_call_timeout_ms
      type: object
    Role:
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "004"
        custom:
          description: Whether this is a custom role or built-in
          title: Custom
          type: boolean
          x-stream-index: "002"
        name:
          description: Unique role name
          title: Name
          type: string
          x-stream-index: "001"
        scopes:
          description: List of scopes where this role is currently present. `.app`
            means that role is present in app-level grants
          items:
            type: string
          title: Scopes
          type: array
          x-stream-index: "003"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "005"
      required:
      - name
      - custom
      - scopes
      - created_at
      - updated_at
      type: object
    RuleBuilderAction:
      properties:
        ban_options:
          $ref: '#/components/schemas/BanOptions'
          x-stream-index: "002"
        flag_user_options:
          $ref: '#/components/schemas/FlagUserOptions'
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
      type: object
    RuleBuilderCondition:
      properties:
        confidence:
          format: float
          type: number
          x-stream-index: "002"
        content_count_rule_params:
          $ref: '#/components/schemas/ContentCountRuleParameters'
          x-stream-index: "007"
        image_content_params:
          $ref: '#/components/schemas/ImageContentParameters'
          x-stream-index: "009"
        image_rule_params:
          $ref: '#/components/schemas/ImageRuleParameters'
          x-stream-index: "004"
        text_content_params:
          $ref: '#/components/schemas/TextContentParameters'
          x-stream-index: "008"
        text_rule_params:
          $ref: '#/components/schemas/TextRuleParameters'
          x-stream-index: "003"
        type:
          type: string
          x-stream-index: "001"
        user_created_within_params:
          $ref: '#/components/schemas/UserCreatedWithinParameters'
          x-stream-index: "011"
        user_custom_property_params:
          $ref: '#/components/schemas/UserCustomPropertyParameters'
          x-stream-index: "012"
        user_rule_params:
          $ref: '#/components/schemas/UserRuleParameters'
          x-stream-index: "006"
        video_content_params:
          $ref: '#/components/schemas/VideoContentParameters'
          x-stream-index: "010"
        video_rule_params:
          $ref: '#/components/schemas/VideoRuleParameters'
          x-stream-index: "005"
      type: object
    RuleBuilderConditionGroup:
      properties:
        conditions:
          items:
            $ref: '#/components/schemas/RuleBuilderCondition'
          type: array
          x-stream-index: "002"
        logic:
          type: string
          x-stream-index: "001"
      type: object
    RuleBuilderConfig:
      properties:
        async:
          type: boolean
          x-stream-index: "001"
        rules:
          items:
            $ref: '#/components/schemas/RuleBuilderRule'
          type: array
          x-stream-index: "002"
      type: object
    RuleBuilderRule:
      properties:
        action:
          $ref: '#/components/schemas/RuleBuilderAction'
          x-stream-index: "006"
        conditions:
          items:
            $ref: '#/components/schemas/RuleBuilderCondition'
          type: array
          x-stream-index: "003"
        cooldown_period:
          type: string
          x-stream-index: "007"
        groups:
          items:
            $ref: '#/components/schemas/RuleBuilderConditionGroup'
          type: array
          x-stream-index: "005"
        id:
          type: string
          x-stream-index: "001"
        logic:
          type: string
          x-stream-index: "004"
        rule_type:
          type: string
          x-stream-index: "002"
      required:
      - rule_type
      - action
      type: object
    S3Request:
      description: Config for creating Amazon S3 storage.
      properties:
        s3_api_key:
          description: 'The AWS API key. To use Amazon S3 as your storage provider,
            you have two authentication options: IAM role or API key. If you do not
            specify the `s3_api_key` parameter, Stream will use IAM role authentication.
            In that case make sure to have the correct IAM role configured for your
            application.'
          title: S3ApiKey
          type: string
          x-stream-index: "002"
        s3_custom_endpoint_url:
          description: The custom endpoint for S3. If you want to use a custom endpoint,
            you must also provide the `s3_api_key` and `s3_secret` parameters.
          title: S3CustomEndpointURL
          type: string
          x-stream-index: "004"
        s3_region:
          description: The AWS region where the bucket is hosted
          title: S3Region
          type: string
          x-stream-index: "001"
        s3_secret:
          description: The AWS API Secret
          title: S3Secret
          type: string
          x-stream-index: "003"
      required:
      - s3_region
      title: S3Request
      type: object
    SFUIDLastSeen:
      properties:
        id:
          type: string
          x-stream-index: "001.001"
        last_seen:
          format: date-time
          type: number
          x-stream-index: "002"
        process_start_time:
          format: int64
          type: integer
          x-stream-index: "001.002"
      required:
      - id
      - process_start_time
      - last_seen
      type: object
    SRTIngress:
      properties:
        address:
          type: string
          x-stream-index: "001"
      required:
      - address
      type: object
    STTEgressConfig:
      properties:
        closed_captions_enabled:
          type: boolean
          x-stream-index: "005"
        external_storage:
          $ref: '#/components/schemas/ExternalStorage'
          x-stream-index: "011"
        language:
          type: string
          x-stream-index: "008"
        speech_segment_config:
          $ref: '#/components/schemas/SpeechSegmentConfig'
          x-stream-index: "012"
        storage_name:
          type: string
          x-stream-index: "010"
        translation_languages:
          items:
            type: string
          type: array
          x-stream-index: "009"
        translations_enabled:
          type: boolean
          x-stream-index: "006"
        upload_transcriptions:
          type: boolean
          x-stream-index: "004"
        whisper_server_base_url:
          type: string
          x-stream-index: "007"
      type: object
    ScreensharingSettings:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      type: object
    ScreensharingSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      type: object
    SessionSettings:
      properties:
        inactivity_timeout_seconds:
          format: int32
          maximum: 900
          minimum: 5
          type: integer
          x-stream-index: "001"
      required:
      - inactivity_timeout_seconds
      type: object
    SessionSettingsResponse:
      properties:
        inactivity_timeout_seconds:
          format: int32
          maximum: 900
          minimum: 5
          type: integer
          x-stream-index: "001"
      required:
      - inactivity_timeout_seconds
      type: object
    ShadowBlockActionRequest:
      type: object
    SharedLocation:
      properties:
        channel:
          $ref: '#/components/schemas/Channel'
          x-stream-index: "013"
        channel_cid:
          type: string
          x-stream-index: "003"
        created_at:
          format: date-time
          type: number
          x-stream-index: "010"
        created_by_device_id:
          type: string
          x-stream-index: "008"
        end_at:
          format: date-time
          type: number
          x-stream-index: "009"
        latitude:
          format: float
          maximum: 90
          minimum: 1.8446744073709552e+19
          type: number
          x-stream-index: "006"
        longitude:
          format: float
          maximum: 180
          minimum: 1.8446744073709552e+19
          type: number
          x-stream-index: "007"
        message:
          $ref: '#/components/schemas/Message'
          x-stream-index: "012"
        message_id:
          type: string
          x-stream-index: "004"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "011"
        user_id:
          type: string
          x-stream-index: "005"
      required:
      - channel_cid
      - message_id
      - user_id
      - created_by_device_id
      - created_at
      - updated_at
      type: object
    SharedLocationResponse:
      nullable: true
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "001.011"
        channel_cid:
          description: Channel CID
          title: string
          type: string
          x-stream-index: "001.001"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.008"
        created_by_device_id:
          description: Device ID that created the live location
          title: string
          type: string
          x-stream-index: "001.006"
        duration:
          type: string
          x-stream-index: "002.001"
        end_at:
          description: Time when the live location expires
          format: date-time
          title: string
          type: number
          x-stream-index: "001.007"
        latitude:
          description: Latitude coordinate
          format: float
          title: number
          type: number
          x-stream-index: "001.004"
        longitude:
          description: Longitude coordinate
          format: float
          title: number
          type: number
          x-stream-index: "001.005"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "001.010"
        message_id:
          description: Message ID
          title: string
          type: string
          x-stream-index: "001.002"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.009"
        user_id:
          description: User ID
          title: string
          type: string
          x-stream-index: "001.003"
      required:
      - channel_cid
      - message_id
      - user_id
      - latitude
      - longitude
      - created_by_device_id
      - created_at
      - updated_at
      - duration
      type: object
    SharedLocationResponseData:
      properties:
        channel:
          $ref: '#/components/schemas/ChannelResponse'
          x-stream-index: "011"
        channel_cid:
          type: string
          x-stream-index: "001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008"
        created_by_device_id:
          type: string
          x-stream-index: "006"
        end_at:
          format: date-time
          type: number
          x-stream-index: "007"
        latitude:
          format: float
          type: number
          x-stream-index: "004"
        longitude:
          format: float
          type: number
          x-stream-index: "005"
        message:
          $ref: '#/components/schemas/MessageResponse'
          x-stream-index: "010"
        message_id:
          type: string
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "009"
        user_id:
          type: string
          x-stream-index: "003"
      required:
      - channel_cid
      - message_id
      - user_id
      - latitude
      - longitude
      - created_by_device_id
      - created_at
      - updated_at
      type: object
    SharedLocationsResponse:
      nullable: true
      properties:
        active_live_locations:
          items:
            $ref: '#/components/schemas/SharedLocationResponseData'
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - active_live_locations
      - duration
      type: object
    SingleFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The created follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Follow Response
      type: object
    SortParam:
      nullable: true
      properties:
        direction:
          format: int32
          type: integer
          x-stream-index: "002"
        field:
          type: string
          x-stream-index: "001"
      type: object
    SortParamRequest:
      nullable: true
      properties:
        direction:
          description: Direction of sorting, 1 for Ascending, -1 for Descending, default
            is 1
          format: int32
          title: Direction
          type: integer
          x-stream-index: "002"
        field:
          description: Name of field to sort by
          title: Field
          type: string
          x-stream-index: "001"
      type: object
    SpeechSegmentConfig:
      properties:
        max_speech_caption_ms:
          format: int32
          type: integer
          x-stream-index: "001"
        silence_duration_ms:
          format: int32
          type: integer
          x-stream-index: "002"
      type: object
    StoriesConfig:
      properties:
        expiration_behaviour:
          description: Behavior when stories expire
          title: Expiration Behavior
          type: string
          x-stream-index: "001"
        skip_watched:
          description: Whether to skip already watched stories
          title: Skip Watched
          type: boolean
          x-stream-index: "002"
      title: Stories Configuration
      type: object
    SubmitActionRequest:
      nullable: true
      properties:
        action_type:
          description: Type of moderation action to perform (mark_reviewed, delete_message,
            etc.)
          enum:
          - mark_reviewed
          - delete_message
          - delete_activity
          - delete_reaction
          - ban
          - custom
          - unban
          - restore
          - delete_user
          - unblock
          - shadow_block
          - unmask
          - kick_user
          - end_call
          title: Action Type
          type: string
          x-stream-index: "002"
        ban:
          $ref: '#/components/schemas/BanActionRequest'
          description: Configuration for ban action
          title: Ban
          x-stream-index: "008"
        custom:
          $ref: '#/components/schemas/CustomActionRequest'
          description: Configuration for custom action
          title: Custom
          x-stream-index: "009"
        delete_activity:
          $ref: '#/components/schemas/DeleteActivityRequest'
          description: Configuration for activity deletion action
          title: Delete Activity
          x-stream-index: "004"
        delete_message:
          $ref: '#/components/schemas/DeleteMessageRequest'
          description: Configuration for message deletion action
          title: Delete Message
          x-stream-index: "003"
        delete_reaction:
          $ref: '#/components/schemas/DeleteReactionRequest'
          description: Configuration for reaction deletion action
          title: Delete Reaction
          x-stream-index: "005"
        delete_user:
          $ref: '#/components/schemas/DeleteUserRequest'
          description: Configuration for user deletion action
          title: Delete User
          x-stream-index: "006"
        item_id:
          description: UUID of the review queue item to act on
          title: Item ID
          type: string
          x-stream-index: "001"
        mark_reviewed:
          $ref: '#/components/schemas/MarkReviewedRequest'
          description: Configuration for marking item as reviewed
          title: Mark Reviewed
          x-stream-index: "007"
        unban:
          $ref: '#/components/schemas/UnbanActionRequest'
          description: Configuration for unban action
          title: Unban
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "016.002"
        user_id:
          type: string
          x-stream-index: "016.001"
      required:
      - item_id
      - action_type
      type: object
    SubmitActionResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        item:
          $ref: '#/components/schemas/ReviewQueueItemResponse'
          description: Updated review queue item after action was performed
          title: Item
          x-stream-index: "001"
      required:
      - duration
      type: object
    TargetResolution:
      properties:
        bitrate:
          format: int32
          maximum: 6000000
          type: integer
          x-stream-index: "003"
        height:
          format: int32
          maximum: 3840
          minimum: 240
          type: integer
          x-stream-index: "002"
        width:
          format: int32
          maximum: 3840
          minimum: 240
          type: integer
          x-stream-index: "001"
      required:
      - width
      - height
      - bitrate
      type: object
    TextContentParameters:
      properties:
        blocklist_match:
          items:
            type: string
          type: array
          x-stream-index: "005"
        contains_url:
          type: boolean
          x-stream-index: "003"
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "001"
        llm_harm_labels:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "002"
        severity:
          type: string
          x-stream-index: "004"
      type: object
    TextRuleParameters:
      properties:
        blocklist_match:
          items:
            type: string
          type: array
          x-stream-index: "007"
        contains_url:
          type: boolean
          x-stream-index: "005"
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        llm_harm_labels:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "004"
        severity:
          type: string
          x-stream-index: "006"
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    ThreadedCommentResponse:
      description: A comment with an optional, depth‑limited slice of nested replies.
      properties:
        attachments:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
          x-stream-index: "001.011"
        confidence_score:
          format: float
          type: number
          x-stream-index: "001.022"
        controversy_score:
          format: float
          type: number
          x-stream-index: "001.023"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.014"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.006"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        downvote_count:
          format: int32
          type: integer
          x-stream-index: "001.020"
        id:
          type: string
          x-stream-index: "001.001"
        latest_reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001.009"
        mentioned_users:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
          x-stream-index: "001.012"
        meta:
          $ref: '#/components/schemas/RepliesMeta'
          description: Pagination & depth info for this node's direct replies.
          title: Replies Meta
          x-stream-index: "002"
        moderation:
          $ref: '#/components/schemas/ModerationV2Response'
          x-stream-index: "001.017"
        object_id:
          type: string
          x-stream-index: "001.002"
        object_type:
          type: string
          x-stream-index: "001.003"
        own_reactions:
          items:
            $ref: '#/components/schemas/FeedsReactionResponse'
          type: array
          x-stream-index: "001.024"
        parent_id:
          type: string
          x-stream-index: "001.007"
        reaction_count:
          format: int32
          type: integer
          x-stream-index: "001.008"
        reaction_groups:
          additionalProperties:
            $ref: '#/components/schemas/ReactionGroupResponse'
          type: object
          x-stream-index: "001.010"
        replies:
          description: Slice of nested comments (may be empty).
          items:
            $ref: '#/components/schemas/ThreadedCommentResponse'
          title: Replies
          type: array
          x-stream-index: "003"
        reply_count:
          format: int32
          type: integer
          x-stream-index: "001.018"
        score:
          format: int32
          type: integer
          x-stream-index: "001.021"
        status:
          type: string
          x-stream-index: "001.013"
        text:
          type: string
          x-stream-index: "001.005"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.015"
        upvote_count:
          format: int32
          type: integer
          x-stream-index: "001.019"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001.004"
      required:
      - id
      - object_id
      - object_type
      - user
      - reaction_count
      - mentioned_users
      - status
      - created_at
      - updated_at
      - reply_count
      - upvote_count
      - downvote_count
      - score
      - confidence_score
      - own_reactions
      title: Threaded Comment
      type: object
    Thresholds:
      description: Sets thresholds for AI moderation
      properties:
        explicit:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for explicit messages
          title: LabelThresholds
          x-stream-index: "001"
        spam:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for spam
          title: LabelThresholds
          x-stream-index: "002"
        toxic:
          $ref: '#/components/schemas/LabelThresholds'
          description: Thresholds for toxic messages
          title: LabelThresholds
          x-stream-index: "003"
      title: Auto moderation thresholds
      type: object
    ThumbnailResponse:
      properties:
        image_url:
          type: string
          x-stream-index: "001"
      required:
      - image_url
      type: object
    ThumbnailsSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    ThumbnailsSettingsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    Time:
      type: object
    TranscriptionSettings:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          title: Mode
          type: string
          x-stream-index: "002"
        language:
          description: The language used in this call as a two letter code
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          - bg
          - et
          - sl
          - sk
          title: Language
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          title: Mode
          type: string
          x-stream-index: "001"
        speech_segment_config:
          $ref: '#/components/schemas/SpeechSegmentConfig'
          x-stream-index: "006"
        translation:
          $ref: '#/components/schemas/TranslationSettings'
          x-stream-index: "005"
      required:
      - mode
      - closed_caption_mode
      - languages
      - language
      type: object
    TranscriptionSettingsResponse:
      properties:
        closed_caption_mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "002"
        language:
          enum:
          - auto
          - en
          - fr
          - es
          - de
          - it
          - nl
          - pt
          - pl
          - ca
          - cs
          - da
          - el
          - fi
          - id
          - ja
          - ru
          - sv
          - ta
          - th
          - tr
          - hu
          - ro
          - zh
          - ar
          - tl
          - he
          - hi
          - hr
          - ko
          - ms
          - "no"
          - uk
          - bg
          - et
          - sl
          - sk
          type: string
          x-stream-index: "004"
        mode:
          enum:
          - available
          - disabled
          - auto-on
          type: string
          x-stream-index: "001"
        speech_segment_config:
          $ref: '#/components/schemas/SpeechSegmentConfig'
          x-stream-index: "006"
        translation:
          $ref: '#/components/schemas/TranslationSettings'
          x-stream-index: "005"
      required:
      - mode
      - closed_caption_mode
      - languages
      - language
      type: object
    TranslationSettings:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        languages:
          items:
            type: string
          type: array
          x-stream-index: "002"
      required:
      - enabled
      - languages
      type: object
    TypingIndicators:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      required:
      - enabled
      type: object
    TypingIndicatorsResponse:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
      type: object
    UnbanActionRequest:
      type: object
    UnbanRequest:
      nullable: true
      properties:
        unbanned_by:
          $ref: '#/components/schemas/UserRequest'
          description: Details about the user performing the unban
          title: Unbanned By
          x-stream-index: "005"
        unbanned_by_id:
          description: ID of the user performing the unban
          title: Unbanned By ID
          type: string
          x-stream-index: "004"
      type: object
    UnbanResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    UnblockActionRequest:
      type: object
    UnblockUsersRequest:
      nullable: true
      properties:
        blocked_user_id:
          type: string
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      required:
      - blocked_user_id
      type: object
    UnblockUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
      required:
      - duration
      type: object
    UnfollowBatchRequest:
      nullable: true
      properties:
        follows:
          description: List of follow relationships to remove
          items:
            $ref: '#/components/schemas/FollowPair'
          maximum: 100
          minimum: 1
          title: Follows
          type: array
          x-stream-index: "001"
      required:
      - follows
      title: Unfollow Batch Request
      type: object
    UnfollowBatchResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follows:
          description: List of follow relationships that were removed
          items:
            $ref: '#/components/schemas/FollowResponse'
          title: Follows
          type: array
          x-stream-index: "001"
      required:
      - follows
      - duration
      title: Unfollow Batch Response
      type: object
    UnfollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: The deleted follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Unfollow Response
      type: object
    UnmuteRequest:
      nullable: true
      properties:
        target_ids:
          description: User IDs to unmute
          items:
            type: string
          title: Target IDs
          type: array
          x-stream-index: "001"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "002.002"
        user_id:
          type: string
          x-stream-index: "002.001"
      required:
      - target_ids
      title: UnmuteRequest
      type: object
    UnmuteResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        non_existing_users:
          description: A list of users that can't be found. Common cause for this
            is deleted users
          items:
            type: string
          title: Non Existing Users
          type: array
          x-stream-index: "001"
      required:
      - duration
      title: UnmuteResponse
      type: object
    UnpinActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The unpinned activity
          title: Activity
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "004.001"
        feed:
          description: Fully qualified ID of the feed the activity was unpinned from
          title: Feed ID
          type: string
          x-stream-index: "002"
        user_id:
          description: ID of the user who unpinned the activity
          title: User ID
          type: string
          x-stream-index: "003"
      required:
      - activity
      - feed
      - user_id
      - duration
      title: Unpin Activity Response
      type: object
    UpdateActivityPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Map of dot-notation field paths to new values
          title: object
          type: object
          x-stream-index: "002"
        unset:
          description: List of dot-notation paths to remove
          items:
            type: string
          title: '[]string'
          type: array
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
      type: object
    UpdateActivityPartialResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The updated activity
          title: ActivityResponse
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      type: object
    UpdateActivityRequest:
      nullable: true
      properties:
        attachments:
          description: List of attachments for the activity
          items:
            $ref: '#/components/schemas/Attachment'
          title: '[]ActivityAttachment'
          type: array
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          description: Custom data for the activity
          title: object
          type: object
          x-stream-index: "004"
        expires_at:
          description: Time when the activity will expire
          format: date-time
          title: string
          type: number
          x-stream-index: "007"
        feeds:
          description: List of feeds the activity is present in
          items:
            type: string
          maximum: 255
          title: '[]string'
          type: array
          x-stream-index: "011"
        filter_tags:
          description: Tags used for filtering the activity
          items:
            type: string
          title: '[]string'
          type: array
          x-stream-index: "008"
        interest_tags:
          description: Tags indicating interest categories
          items:
            type: string
          title: '[]string'
          type: array
          x-stream-index: "009"
        location:
          $ref: '#/components/schemas/ActivityLocation'
          description: Geographic location for the activity
          title: ActivityLocation
          x-stream-index: "006"
        poll_id:
          description: Poll ID
          title: string
          type: string
          x-stream-index: "010"
        text:
          description: The text content of the activity
          title: string
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "013.002"
        user_id:
          type: string
          x-stream-index: "013.001"
        visibility:
          description: Visibility setting for the activity
          title: string
          type: string
          x-stream-index: "005"
      type: object
    UpdateActivityResponse:
      nullable: true
      properties:
        activity:
          $ref: '#/components/schemas/ActivityResponse'
          description: The updated activity
          title: ActivityResponse
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activity
      - duration
      type: object
    UpdateAppRequest:
      nullable: true
      properties:
        allowed_flag_reasons:
          items:
            type: string
          type: array
          x-stream-index: "001.017"
        apn_config:
          $ref: '#/components/schemas/APNConfig'
          x-stream-index: "001.003"
        async_moderation_config:
          $ref: '#/components/schemas/AsyncModerationConfiguration'
          x-stream-index: "001.039"
        async_url_enrich_enabled:
          type: boolean
          x-stream-index: "001.019"
        auto_translation_enabled:
          type: boolean
          x-stream-index: "001.018"
        before_message_send_hook_url:
          type: string
          x-stream-index: "001.020"
        cdn_expiration_seconds:
          format: int32
          maximum: 1209600
          minimum: 14400
          type: integer
          x-stream-index: "001.038"
        channel_hide_members_only:
          type: boolean
          x-stream-index: "001.033"
        custom_action_handler_url:
          type: string
          x-stream-index: "001.021"
        datadog_info:
          $ref: '#/components/schemas/DataDogInfo'
          x-stream-index: "001.040"
        disable_auth_checks:
          type: boolean
          x-stream-index: "001.001"
        disable_permissions_checks:
          type: boolean
          x-stream-index: "001.002"
        enforce_unique_usernames:
          enum:
          - "no"
          - app
          - team
          type: string
          x-stream-index: "001.022"
        event_hooks:
          items:
            $ref: '#/components/schemas/EventHook'
          type: array
          x-stream-index: "001.046"
        feeds_moderation_enabled:
          type: boolean
          x-stream-index: "001.042"
        feeds_v2_region:
          type: string
          x-stream-index: "001.041"
        file_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "001.030"
        firebase_config:
          $ref: '#/components/schemas/FirebaseConfig'
          x-stream-index: "001.004"
        grants:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
          x-stream-index: "001.034"
        guest_user_creation_disabled:
          type: boolean
          x-stream-index: "001.043"
        huawei_config:
          $ref: '#/components/schemas/HuaweiConfig'
          x-stream-index: "001.005"
        image_moderation_block_labels:
          items:
            type: string
          type: array
          x-stream-index: "001.015"
        image_moderation_enabled:
          type: boolean
          x-stream-index: "001.016"
        image_moderation_labels:
          items:
            type: string
          type: array
          x-stream-index: "001.014"
        image_upload_config:
          $ref: '#/components/schemas/FileUploadConfig'
          x-stream-index: "001.029"
        max_aggregated_activities_length:
          format: int32
          type: integer
          x-stream-index: "001.049"
        migrate_permissions_to_v2:
          type: boolean
          x-stream-index: "001.035"
        moderation_dashboard_preferences:
          $ref: '#/components/schemas/ModerationDashboardPreferences'
          x-stream-index: "001.044"
        moderation_enabled:
          type: boolean
          x-stream-index: "001.009"
        moderation_webhook_url:
          type: string
          x-stream-index: "001.010"
        multi_tenant_enabled:
          type: boolean
          x-stream-index: "001.013"
        permission_version:
          enum:
          - v1
          - v2
          type: string
          x-stream-index: "001.011"
        push_config:
          $ref: '#/components/schemas/PushConfig'
          x-stream-index: "001.007"
        reminders_interval:
          format: int32
          maximum: 86400
          minimum: 60
          type: integer
          x-stream-index: "001.036"
        reminders_max_members:
          format: int32
          minimum: 2
          type: integer
          x-stream-index: "001.037"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.031"
        sns_key:
          type: string
          x-stream-index: "001.027"
        sns_secret:
          type: string
          x-stream-index: "001.028"
        sns_topic_arn:
          type: string
          x-stream-index: "001.026"
        sqs_key:
          type: string
          x-stream-index: "001.024"
        sqs_secret:
          type: string
          x-stream-index: "001.025"
        sqs_url:
          type: string
          x-stream-index: "001.023"
        user_response_time_enabled:
          type: boolean
          x-stream-index: "001.048"
        user_search_disallowed_roles:
          items:
            type: string
          type: array
          x-stream-index: "001.012"
        webhook_events:
          items:
            type: string
          type: array
          x-stream-index: "001.032"
        webhook_url:
          type: string
          x-stream-index: "001.008"
        xiaomi_config:
          $ref: '#/components/schemas/XiaomiConfig'
          x-stream-index: "001.006"
      type: object
    UpdateBlockListRequest:
      nullable: true
      properties:
        team:
          type: string
          x-stream-index: "002"
        words:
          description: List of words to block
          items:
            type: string
          minimum: 1
          title: Words
          type: array
          x-stream-index: "003"
      title: Update block list
      type: object
      x-stream-docs-page-id: update_block_list
    UpdateBlockListResponse:
      description: Basic response information
      nullable: true
      properties:
        blocklist:
          $ref: '#/components/schemas/BlockListResponse'
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      title: Response
      type: object
    UpdateBookmarkFolderRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the folder
          title: Custom Data
          type: object
          x-stream-index: "003"
        name:
          description: Name of the folder
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "004.002"
        user_id:
          type: string
          x-stream-index: "004.001"
      title: Update Bookmark Folder Request
      type: object
    UpdateBookmarkFolderResponse:
      nullable: true
      properties:
        bookmark_folder:
          $ref: '#/components/schemas/BookmarkFolderResponse'
          description: The updated bookmark folder
          title: Bookmark Folder
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark_folder
      - duration
      title: Update Bookmark Folder Response
      type: object
    UpdateBookmarkRequest:
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the bookmark
          title: Custom Data
          type: object
          x-stream-index: "005"
        folder_id:
          description: ID of the folder to move the bookmark to
          maxLength: 255
          title: Folder ID
          type: string
          x-stream-index: "002"
        new_folder:
          $ref: '#/components/schemas/AddFolderRequest'
          x-stream-index: "004"
        new_folder_id:
          maxLength: 255
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "006.002"
        user_id:
          type: string
          x-stream-index: "006.001"
      title: Update Bookmark Request
      type: object
    UpdateBookmarkResponse:
      nullable: true
      properties:
        bookmark:
          $ref: '#/components/schemas/BookmarkResponse'
          description: The updated bookmark
          title: Bookmark
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - bookmark
      - duration
      title: Update Bookmark Response
      type: object
    UpdateCommentRequest:
      nullable: true
      properties:
        comment:
          description: Updated text content of the comment
          title: Comment
          type: string
          x-stream-index: "002"
        custom:
          additionalProperties: {}
          description: Updated custom data for the comment
          title: Custom Data
          type: object
          x-stream-index: "003"
        skip_push:
          type: boolean
          x-stream-index: "004"
      title: Update Comment Request
      type: object
    UpdateCommentResponse:
      nullable: true
      properties:
        comment:
          $ref: '#/components/schemas/CommentResponse'
          description: The updated comment
          title: Comment
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - comment
      - duration
      title: Update Comment Response
      type: object
    UpdateExternalStorageRequest:
      description: External storage
      nullable: true
      properties:
        aws_s3:
          $ref: '#/components/schemas/S3Request'
          description: Only required if you want to create an Amazon S3 storage
          title: AwsS3
          x-stream-index: "003.004"
        azure_blob:
          $ref: '#/components/schemas/AzureRequest'
          description: Only required if you want to create an Azure Blob Storage
          title: AzureBlob
          x-stream-index: "003.006"
        bucket:
          description: The name of the bucket on the service provider
          title: Bucket
          type: string
          x-stream-index: "003.002"
        gcs_credentials:
          type: string
          x-stream-index: "003.005"
        path:
          description: The path prefix to use for storing files
          title: Path
          type: string
          x-stream-index: "003.003"
        storage_type:
          description: The type of storage to use
          enum:
          - s3
          - gcs
          - abs
          title: StorageType
          type: string
          x-stream-index: "003.001"
      required:
      - storage_type
      - bucket
      title: ExternalStorageRequest
      type: object
    UpdateExternalStorageResponse:
      description: Basic response information
      nullable: true
      properties:
        bucket:
          type: string
          x-stream-index: "001.003"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        name:
          type: string
          x-stream-index: "001.001"
        path:
          type: string
          x-stream-index: "001.004"
        type:
          enum:
          - s3
          - gcs
          - abs
          type: string
          x-stream-index: "001.002"
      required:
      - name
      - type
      - bucket
      - path
      - duration
      title: Response
      type: object
    UpdateFeedGroupRequest:
      nullable: true
      properties:
        activity_processors:
          description: Configuration for activity processors (max 10)
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          maximum: 10
          title: Activity Processors
          type: array
          x-stream-index: "005"
        activity_selectors:
          description: Configuration for activity selectors (max 10)
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          maximum: 10
          title: Activity Selectors
          type: array
          x-stream-index: "006"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Configuration for activity aggregation
          title: Aggregation
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          description: Custom data for the feed group
          title: Custom Data
          type: object
          x-stream-index: "004"
        notification:
          $ref: '#/components/schemas/NotificationConfig'
          description: Configuration for notifications
          title: Notification
          x-stream-index: "002"
        push_notification:
          $ref: '#/components/schemas/PushNotificationConfig'
          x-stream-index: "003"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Configuration for activity ranking
          title: Ranking
          x-stream-index: "007"
      title: Update Feed Group Request
      type: object
    UpdateFeedGroupResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_group:
          $ref: '#/components/schemas/FeedGroupResponse'
          description: The updated feed group
          title: Feed Group
          x-stream-index: "001"
      required:
      - feed_group
      - duration
      title: Update Feed Group Response
      type: object
    UpdateFeedMembersRequest:
      nullable: true
      properties:
        limit:
          format: int32
          maximum: 100
          minimum: 0
          type: integer
          x-stream-index: "006.001"
        members:
          description: List of members to upsert, remove, or set
          items:
            $ref: '#/components/schemas/FeedMemberRequest'
          title: Members
          type: array
          x-stream-index: "004"
        next:
          type: string
          x-stream-index: "006.002"
        operation:
          description: Type of update operation to perform
          enum:
          - upsert
          - remove
          - set
          title: Operation
          type: string
          x-stream-index: "003"
        prev:
          type: string
          x-stream-index: "006.003"
      required:
      - operation
      title: Update Feed Members Request
      type: object
    UpdateFeedMembersResponse:
      description: Basic response information
      nullable: true
      properties:
        added:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "001"
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "004.001"
        removed_ids:
          items:
            type: string
          type: array
          x-stream-index: "003"
        updated:
          items:
            $ref: '#/components/schemas/FeedMemberResponse'
          type: array
          x-stream-index: "002"
      required:
      - added
      - updated
      - removed_ids
      - duration
      title: Response
      type: object
    UpdateFeedRequest:
      nullable: true
      properties:
        created_by_id:
          description: ID of the new feed creator (owner)
          title: Created By ID
          type: string
          x-stream-index: "003"
        custom:
          additionalProperties: {}
          description: Custom data for the feed
          title: Custom Data
          type: object
          x-stream-index: "004"
      title: Update Feed Request
      type: object
    UpdateFeedResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed:
          $ref: '#/components/schemas/FeedResponse'
          description: The updated feed
          title: Feed
          x-stream-index: "001"
      required:
      - feed
      - duration
      title: Update Feed Response
      type: object
    UpdateFeedViewRequest:
      nullable: true
      properties:
        activity_processors:
          description: Updated activity processors
          items:
            $ref: '#/components/schemas/ActivityProcessorConfig'
          title: Activity Processors
          type: array
          x-stream-index: "002.002"
        activity_selectors:
          description: Updated configuration for selecting activities
          items:
            $ref: '#/components/schemas/ActivitySelectorConfig'
          title: Activity Selectors
          type: array
          x-stream-index: "002.001"
        aggregation:
          $ref: '#/components/schemas/AggregationConfig'
          description: Updated configuration for aggregating activities
          title: Aggregation
          x-stream-index: "002.004"
        ranking:
          $ref: '#/components/schemas/RankingConfig'
          description: Updated configuration for ranking activities
          title: Ranking
          x-stream-index: "002.003"
      title: Update Feed View Request
      type: object
    UpdateFeedViewResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        feed_view:
          $ref: '#/components/schemas/FeedViewResponse'
          description: The updated feed view
          title: Feed View
          x-stream-index: "001"
      required:
      - feed_view
      - duration
      title: Update Feed View Response
      type: object
    UpdateFollowRequest:
      nullable: true
      properties:
        create_notification_activity:
          description: Whether to create a notification activity for this follow
          title: Create Notification Activity
          type: boolean
          x-stream-index: "001.004"
        custom:
          additionalProperties: {}
          description: Custom data for the follow relationship
          title: Custom Data
          type: object
          x-stream-index: "001.002"
        follower_role:
          type: string
          x-stream-index: "002"
        push_preference:
          description: Push preference for the follow relationship
          enum:
          - all
          - none
          title: Push Preference
          type: string
          x-stream-index: "001.003"
        skip_push:
          type: boolean
          x-stream-index: "001.005"
        source:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          x-stream-index: 001.001.001
        target:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          x-stream-index: 001.001.002
      required:
      - source
      - target
      title: Update Follow Request
      type: object
    UpdateFollowResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        follow:
          $ref: '#/components/schemas/FollowResponse'
          description: Details of the updated follow relationship
          title: Follow
          x-stream-index: "001"
      required:
      - follow
      - duration
      title: Update Follow Response
      type: object
    UpdateLiveLocationRequest:
      nullable: true
      properties:
        end_at:
          description: Time when the live location expires
          format: date-time
          title: string
          type: number
          x-stream-index: "004"
        latitude:
          description: Latitude coordinate
          format: float
          maximum: 90
          minimum: 1.8446744073709552e+19
          title: number
          type: number
          x-stream-index: "002"
        longitude:
          description: Longitude coordinate
          format: float
          maximum: 180
          minimum: 1.8446744073709552e+19
          title: number
          type: number
          x-stream-index: "003"
        message_id:
          description: Live location ID
          title: string
          type: string
          x-stream-index: "001"
      required:
      - message_id
      type: object
    UpdateMembershipLevelRequest:
      description: Partial update request for membership level fields. Only specified
        fields will be updated.
      nullable: true
      properties:
        custom:
          additionalProperties: {}
          description: Custom data for the membership level
          title: Custom Data
          type: object
          x-stream-index: "006"
        description:
          description: Optional description of the membership level
          maxLength: 1000
          title: Description
          type: string
          x-stream-index: "003"
        name:
          description: Display name for the membership level
          maxLength: 255
          title: Name
          type: string
          x-stream-index: "002"
        priority:
          description: Priority level (higher numbers = higher priority)
          format: int32
          minimum: 0
          title: Priority
          type: integer
          x-stream-index: "004"
        tags:
          description: Activity tags this membership level gives access to
          items:
            type: string
          maximum: 255
          title: Tags
          type: array
          x-stream-index: "005"
      title: Update Membership Level Request
      type: object
    UpdateMembershipLevelResponse:
      nullable: true
      properties:
        duration:
          type: string
          x-stream-index: "002.001"
        membership_level:
          $ref: '#/components/schemas/MembershipLevelResponse'
          description: The updated membership level
          title: Membership Level
          x-stream-index: "001"
      required:
      - membership_level
      - duration
      title: Update Membership Level Response
      type: object
    UpdatePollOptionRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "004"
        id:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
        text:
          description: Option text
          title: string
          type: string
          x-stream-index: "003"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "005.002"
        user_id:
          type: string
          x-stream-index: "005.001"
      required:
      - id
      - text
      type: object
    UpdatePollPartialRequest:
      nullable: true
      properties:
        set:
          additionalProperties: {}
          description: Sets new field values
          title: Set
          type: object
          x-stream-index: "002.001"
          x-stream-map:
            description: New value to set
            key: field
            title: Value
        unset:
          description: Array of field names to unset
          items:
            type: string
          title: Unset
          type: array
          x-stream-index: "002.002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "003.002"
        user_id:
          type: string
          x-stream-index: "003.001"
      type: object
    UpdatePollRequest:
      nullable: true
      properties:
        Custom:
          additionalProperties: {}
          type: object
          writeOnly: true
          x-stream-index: "011"
        allow_answers:
          description: Allow answers
          title: boolean
          type: boolean
          x-stream-index: "009"
        allow_user_suggested_options:
          description: Allow user suggested options
          title: boolean
          type: boolean
          x-stream-index: "008"
        description:
          description: Poll description
          title: string
          type: string
          x-stream-index: "003"
        enforce_unique_vote:
          description: Enforce unique vote
          title: boolean
          type: boolean
          x-stream-index: "005"
        id:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
        is_closed:
          description: Is closed
          title: boolean
          type: boolean
          x-stream-index: "010"
        max_votes_allowed:
          description: Max votes allowed
          format: int32
          maximum: 10
          title: integer
          type: integer
          x-stream-index: "007"
        name:
          description: Poll name
          title: string
          type: string
          x-stream-index: "002"
        options:
          description: Poll options
          items:
            $ref: '#/components/schemas/PollOptionRequest'
          maximum: 100
          title: PollOptions
          type: array
          x-stream-index: "004"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "012.002"
        user_id:
          type: string
          x-stream-index: "012.001"
        voting_visibility:
          description: Voting visibility
          enum:
          - anonymous
          - public
          title: string
          type: string
          x-stream-index: "006"
      required:
      - id
      - name
      type: object
    UpdateUserPartialRequest:
      properties:
        id:
          description: User ID to update
          title: ID
          type: string
          x-stream-index: "001"
        set:
          additionalProperties: {}
          type: object
          x-stream-index: "002.001"
        unset:
          items:
            type: string
          type: array
          x-stream-index: "002.002"
      required:
      - id
      type: object
    UpdateUsersPartialRequest:
      nullable: true
      properties:
        users:
          items:
            $ref: '#/components/schemas/UpdateUserPartialRequest'
          maximum: 100
          type: array
          x-stream-index: "001"
      required:
      - users
      type: object
    UpdateUsersRequest:
      nullable: true
      properties:
        users:
          additionalProperties:
            $ref: '#/components/schemas/UserRequest'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      type: object
    UpdateUsersResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        membership_deletion_task_id:
          type: string
          x-stream-index: "002"
        users:
          additionalProperties:
            $ref: '#/components/schemas/FullUserResponse'
          description: Object containing users
          title: Users
          type: object
          x-stream-index: "001"
          x-stream-map:
            key: user_id
      required:
      - users
      - membership_deletion_task_id
      - duration
      type: object
    UpsertActivitiesRequest:
      nullable: true
      properties:
        activities:
          description: List of activities to create or update
          items:
            $ref: '#/components/schemas/ActivityRequest'
          maximum: 100
          minimum: 1
          title: Activities
          type: array
          x-stream-index: "001"
      required:
      - activities
      title: Upsert Activities Request
      type: object
    UpsertActivitiesResponse:
      nullable: true
      properties:
        activities:
          description: List of created or updated activities
          items:
            $ref: '#/components/schemas/ActivityResponse'
          title: Activities
          type: array
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - activities
      - duration
      title: Upsert Activities Response
      type: object
    UpsertConfigRequest:
      nullable: true
      properties:
        ai_image_config:
          $ref: '#/components/schemas/AIImageConfig'
          description: Configuration for AI image analysis
          title: AI Image Config
          x-stream-index: "011"
        ai_text_config:
          $ref: '#/components/schemas/AITextConfig'
          description: Configuration for AI text analysis
          title: AI Text Config
          x-stream-index: "008"
        ai_video_config:
          $ref: '#/components/schemas/AIVideoConfig'
          description: Configuration for AI video analysis
          title: AI Video Config
          x-stream-index: "012"
        async:
          description: Whether moderation should be performed asynchronously
          title: Async
          type: boolean
          x-stream-index: "003"
        automod_platform_circumvention_config:
          $ref: '#/components/schemas/AutomodPlatformCircumventionConfig'
          description: Configuration for platform circumvention detection
          title: Automod Platform Circumvention Config
          x-stream-index: "005"
        automod_semantic_filters_config:
          $ref: '#/components/schemas/AutomodSemanticFiltersConfig'
          description: Configuration for semantic filtering
          title: Automod Semantic Filters Config
          x-stream-index: "006"
        automod_toxicity_config:
          $ref: '#/components/schemas/AutomodToxicityConfig'
          description: Configuration for toxicity detection
          title: Automod Toxicity Config
          x-stream-index: "004"
        aws_rekognition_config:
          $ref: '#/components/schemas/AIImageConfig'
          x-stream-index: "016"
        block_list_config:
          $ref: '#/components/schemas/BlockListConfig'
          description: Configuration for block list filtering
          title: Block List Config
          x-stream-index: "007"
        bodyguard_config:
          $ref: '#/components/schemas/AITextConfig'
          x-stream-index: "015"
        google_vision_config:
          $ref: '#/components/schemas/GoogleVisionConfig'
          description: Configuration for Google Vision integration
          title: Google Vision Config
          x-stream-index: "010"
        key:
          description: Unique identifier for the moderation configuration
          title: Key
          type: string
          x-stream-index: "001"
        llm_config:
          $ref: '#/components/schemas/LLMConfig'
          description: Configuration for customer-configured LLM moderation
          title: LLM Config
          x-stream-index: "009"
        rule_builder_config:
          $ref: '#/components/schemas/RuleBuilderConfig'
          description: Configuration for custom rule builder (max 3 rules, max 5 conditions
            per rule)
          title: Rule Builder Config
          x-stream-index: "014"
        team:
          description: Team associated with the configuration
          maxLength: 128
          minLength: 1
          title: Team
          type: string
          x-stream-index: "002"
        user:
          $ref: '#/components/schemas/UserRequest'
          x-stream-index: "018.002"
        user_id:
          type: string
          x-stream-index: "018.001"
        velocity_filter_config:
          $ref: '#/components/schemas/VelocityFilterConfig'
          description: Configuration for velocity-based filtering
          title: Velocity Filter Config
          x-stream-index: "013"
        video_call_rule_config:
          $ref: '#/components/schemas/VideoCallRuleConfig'
          x-stream-index: "017"
      required:
      - key
      type: object
    UpsertConfigResponse:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/ConfigResponse'
          description: The created or updated moderation configuration
          title: Config
          x-stream-index: "001"
        duration:
          type: string
          x-stream-index: "002.001"
      required:
      - duration
      type: object
    UpsertModerationRuleRequest:
      nullable: true
      properties:
        action:
          $ref: '#/components/schemas/RuleBuilderAction'
          x-stream-index: "009"
        conditions:
          items:
            $ref: '#/components/schemas/RuleBuilderCondition'
          type: array
          x-stream-index: "006"
        config_keys:
          items:
            type: string
          type: array
          x-stream-index: "003"
        cooldown_period:
          type: string
          x-stream-index: "010"
        description:
          type: string
          x-stream-index: "002"
        enabled:
          type: boolean
          x-stream-index: "011"
        groups:
          items:
            $ref: '#/components/schemas/RuleBuilderConditionGroup'
          type: array
          x-stream-index: "008"
        logic:
          type: string
          x-stream-index: "007"
        name:
          type: string
          x-stream-index: "001"
        rule_type:
          type: string
          x-stream-index: "005"
        team:
          type: string
          x-stream-index: "004"
      required:
      - name
      - rule_type
      - action
      type: object
    UpsertModerationRuleResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        rule:
          $ref: '#/components/schemas/ModerationRuleV2Response'
          x-stream-index: "002"
      required:
      - duration
      title: Response
      type: object
    UpsertModerationTemplateRequest:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/FeedsModerationTemplateConfig'
          description: Configuration for the moderation template
          title: Config
          x-stream-index: "002"
        name:
          description: Name of the moderation template
          title: Name
          type: string
          x-stream-index: "001"
      required:
      - name
      - config
      type: object
    UpsertModerationTemplateResponse:
      nullable: true
      properties:
        config:
          $ref: '#/components/schemas/FeedsModerationTemplateConfig'
          description: Configuration for the moderation template
          title: Config
          x-stream-index: "002"
        created_at:
          description: When the template was created
          format: date-time
          title: Created At
          type: number
          x-stream-index: "003"
        duration:
          type: string
          x-stream-index: "005.001"
        name:
          description: Name of the moderation template
          title: Name
          type: string
          x-stream-index: "001"
        updated_at:
          description: When the template was last updated
          format: date-time
          title: Updated At
          type: number
          x-stream-index: "004"
      required:
      - name
      - created_at
      - updated_at
      - duration
      type: object
    UpsertPushPreferencesRequest:
      nullable: true
      properties:
        preferences:
          description: A list of push preferences for channels, calls, or the user.
          items:
            $ref: '#/components/schemas/PushPreferenceInput'
          type: array
          x-stream-index: "001"
      required:
      - preferences
      type: object
    UpsertPushPreferencesResponse:
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "003.001"
        user_channel_preferences:
          additionalProperties:
            additionalProperties:
              $ref: '#/components/schemas/ChannelPushPreferences'
            type: object
          description: The channel specific push notification preferences, only returned
            for channels you've edited.
          title: User Channel Notification Preferences
          type: object
          x-stream-index: "002"
        user_preferences:
          additionalProperties:
            $ref: '#/components/schemas/PushPreferences'
          description: The user preferences, always returned regardless if you edited
            it
          title: User Preferences
          type: object
          x-stream-index: "001"
      required:
      - user_preferences
      - user_channel_preferences
      - duration
      type: object
    UpsertPushProviderRequest:
      nullable: true
      properties:
        push_provider:
          $ref: '#/components/schemas/PushProvider'
          x-stream-index: "001"
      type: object
    UpsertPushProviderResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "002.001"
        push_provider:
          $ref: '#/components/schemas/PushProviderResponse'
          x-stream-index: "001"
      required:
      - push_provider
      - duration
      title: Response
      type: object
    UpsertPushTemplateRequest:
      nullable: true
      properties:
        enable_push:
          description: Whether to send push notification for this event
          title: boolean
          type: boolean
          x-stream-index: "002"
        event_type:
          description: Event type (message.new, message.updated, reaction.new)
          enum:
          - message.new
          - message.updated
          - reaction.new
          - notification.reminder_due
          - feeds.activity.added
          - feeds.comment.added
          - feeds.activity.reaction.added
          - feeds.comment.reaction.added
          - feeds.follow.created
          - feeds.notification_feed.updated
          title: string
          type: string
          x-stream-index: "003"
        push_provider_name:
          description: Push provider name
          title: string
          type: string
          x-stream-index: "004"
        push_provider_type:
          description: Push provider type (firebase, apn)
          enum:
          - firebase
          - apn
          title: string
          type: string
          x-stream-index: "005"
        template:
          description: Push template
          title: string
          type: string
          x-stream-index: "006"
      required:
      - event_type
      - push_provider_type
      type: object
    UpsertPushTemplateResponse:
      description: Basic response information
      nullable: true
      properties:
        duration:
          description: Duration of the request in milliseconds
          title: Duration
          type: string
          x-stream-index: "001.001"
        template:
          $ref: '#/components/schemas/PushTemplate'
          x-stream-index: "002"
      required:
      - duration
      title: Response
      type: object
    User:
      properties:
        avg_response_time:
          format: int32
          readOnly: true
          type: integer
          x-stream-index: "046"
        ban_expires:
          format: date-time
          type: number
          x-stream-index: "017"
        banned:
          type: boolean
          x-stream-index: "016"
        created_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "008"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "006"
        deactivated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "014"
        deleted_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "013"
        id:
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "023"
        language:
          type: string
          x-stream-index: "035"
        last_active:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "011"
        last_engaged_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "012"
        online:
          readOnly: true
          type: boolean
          x-stream-index: "022"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettings'
          x-stream-index: "026"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "042"
        role:
          type: string
          x-stream-index: "004"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "036"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "005"
        updated_at:
          format: date-time
          readOnly: true
          type: number
          x-stream-index: "009"
      required:
      - id
      - role
      - teams_role
      - custom
      - banned
      - online
      type: object
    UserBannedEvent:
      properties:
        channel_id:
          type: string
          x-stream-index: "006.002"
        channel_type:
          type: string
          x-stream-index: "006.003"
        cid:
          type: string
          x-stream-index: "006.001"
        created_at:
          format: date-time
          type: number
          x-stream-index: "008.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        expiration:
          format: date-time
          type: number
          x-stream-index: "003"
        reason:
          type: string
          x-stream-index: "004"
        shadow:
          type: boolean
          x-stream-index: "002"
        team:
          type: string
          x-stream-index: "005.001"
        type:
          default: user.banned
          type: string
          x-stream-index: "008.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "007.001"
      required:
      - created_by
      - shadow
      - cid
      - channel_id
      - channel_type
      - type
      - created_at
      title: UserBannedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserCreatedWithinParameters:
      properties:
        max_age:
          type: string
          x-stream-index: "001"
      type: object
    UserCustomPropertyParameters:
      properties:
        operator:
          type: string
          x-stream-index: "002"
        property_key:
          type: string
          x-stream-index: "001"
      type: object
    UserDeactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "003.002"
        created_by:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
        type:
          default: user.deactivated
          type: string
          x-stream-index: "003.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "002.001"
      required:
      - created_by
      - type
      - created_at
      title: UserDeactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserMute:
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "009"
        expires:
          description: Date/time of mute expiration
          format: date-time
          title: Expires
          type: number
          x-stream-index: "008"
        target:
          $ref: '#/components/schemas/User'
          description: User who's muted
          title: Target
          x-stream-index: "007"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "010"
        user:
          $ref: '#/components/schemas/User'
          description: Owner of channel mute
          title: User
          x-stream-index: "005"
      required:
      - created_at
      - updated_at
      type: object
    UserMuteResponse:
      nullable: true
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004"
        expires:
          format: date-time
          type: number
          x-stream-index: "003"
        target:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "002"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "005"
        user:
          $ref: '#/components/schemas/UserResponse'
          x-stream-index: "001"
      required:
      - created_at
      - updated_at
      type: object
    UserMutedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "004.002"
        target_user:
          type: string
          x-stream-index: "001"
        target_users:
          items:
            type: string
          type: array
          x-stream-index: "002"
        type:
          default: user.muted
          type: string
          x-stream-index: "004.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "003.001"
      required:
      - type
      - created_at
      title: UserMutedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserReactivatedEvent:
      properties:
        created_at:
          format: date-time
          type: number
          x-stream-index: "002.002"
        type:
          default: user.reactivated
          type: string
          x-stream-index: "002.001"
        user:
          $ref: '#/components/schemas/User'
          x-stream-index: "001"
      required:
      - type
      - created_at
      title: UserReactivatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    UserRequest:
      description: User request object
      properties:
        custom:
          additionalProperties: {}
          description: Custom user data
          title: Custom
          type: object
          x-stream-index: "004"
        id:
          description: User ID
          title: ID
          type: string
          x-stream-index: "001"
        image:
          description: User's profile image URL
          title: Image
          type: string
          x-stream-index: "003"
        invisible:
          type: boolean
          x-stream-index: "006"
        language:
          type: string
          x-stream-index: "005"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "002"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "007"
        role:
          description: User's global role
          title: Role
          type: string
          x-stream-index: "008"
        teams:
          description: List of teams the user belongs to
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "010"
        teams_role:
          additionalProperties:
            type: string
          description: Map of team-specific roles for the user
          title: TeamsRole
          type: object
          x-stream-index: "009"
      required:
      - id
      title: UserRequest
      type: object
    UserResponse:
      description: User response object
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        ban_expires:
          description: Date when ban expires
          format: date-time
          title: Ban expires
          type: number
          x-stream-index: "003"
        banned:
          description: Whether a user is banned or not
          title: Banned
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.017"
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          description: Custom data for this object
          title: Custom data
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          description: Date of deactivation
          format: date-time
          title: Deactivated at
          type: number
          x-stream-index: "001.016"
        deleted_at:
          description: Date/time of deletion
          format: date-time
          title: Deleted at
          type: number
          x-stream-index: "001.011"
        devices:
          description: List of devices user is using
          items:
            $ref: '#/components/schemas/DeviceResponse'
          title: Devices
          type: array
          x-stream-index: "006"
        id:
          description: Unique user identifier
          title: ID
          type: string
          x-stream-index: "001.001"
        image:
          title: Image
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "007"
        language:
          description: Preferred language of a user
          title: Language
          type: string
          x-stream-index: "001.005"
        last_active:
          description: Date of last activity
          format: date-time
          title: Last active
          type: number
          x-stream-index: "001.014"
        name:
          description: Optional name of user
          title: Name
          type: string
          x-stream-index: "001.002"
        online:
          description: Whether a user online or not
          title: Online
          type: boolean
          x-stream-index: "001.013"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          description: User privacy settings
          title: Privacy settings
          x-stream-index: "005"
        push_notifications:
          $ref: '#/components/schemas/PushNotificationSettingsResponse'
          description: User push notification settings
          title: Push notifications
          x-stream-index: "004"
        revoke_tokens_issued_before:
          description: Revocation date for tokens
          format: date-time
          title: Revoke tokens issued before
          type: number
          x-stream-index: "001.015"
        role:
          description: Determines the set of user permissions
          title: Role
          type: string
          x-stream-index: "001.006"
        shadow_banned:
          description: Whether a user is shadow banned
          title: Shadow banned
          type: boolean
          x-stream-index: "002"
        teams:
          description: List of teams user is a part of
          items:
            type: string
          title: Teams
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        updated_at:
          description: Date/time of the last update
          format: date-time
          title: Updated at
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      - shadow_banned
      - invisible
      title: UserResponse
      type: object
    UserResponseCommonFields:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "018"
        banned:
          type: boolean
          x-stream-index: "012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "017"
        created_at:
          format: date-time
          type: number
          x-stream-index: "009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "011"
        id:
          type: string
          x-stream-index: "001"
        image:
          type: string
          x-stream-index: "003"
        language:
          type: string
          x-stream-index: "005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "014"
        name:
          type: string
          x-stream-index: "002"
        online:
          type: boolean
          x-stream-index: "013"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "015"
        role:
          type: string
          x-stream-index: "006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      type: object
    UserResponsePrivacyFields:
      properties:
        avg_response_time:
          format: int32
          type: integer
          x-stream-index: "001.018"
        banned:
          type: boolean
          x-stream-index: "001.012"
        blocked_user_ids:
          items:
            type: string
          type: array
          x-stream-index: "001.017"
        created_at:
          format: date-time
          type: number
          x-stream-index: "001.009"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.004"
        deactivated_at:
          format: date-time
          type: number
          x-stream-index: "001.016"
        deleted_at:
          format: date-time
          type: number
          x-stream-index: "001.011"
        id:
          type: string
          x-stream-index: "001.001"
        image:
          type: string
          x-stream-index: "001.003"
        invisible:
          type: boolean
          x-stream-index: "003"
        language:
          type: string
          x-stream-index: "001.005"
        last_active:
          format: date-time
          type: number
          x-stream-index: "001.014"
        name:
          type: string
          x-stream-index: "001.002"
        online:
          type: boolean
          x-stream-index: "001.013"
        privacy_settings:
          $ref: '#/components/schemas/PrivacySettingsResponse'
          x-stream-index: "002"
        revoke_tokens_issued_before:
          format: date-time
          type: number
          x-stream-index: "001.015"
        role:
          type: string
          x-stream-index: "001.006"
        teams:
          items:
            type: string
          type: array
          x-stream-index: "001.007"
        teams_role:
          additionalProperties:
            type: string
          type: object
          x-stream-index: "001.008"
        updated_at:
          format: date-time
          type: number
          x-stream-index: "001.010"
      required:
      - id
      - custom
      - language
      - role
      - teams
      - created_at
      - updated_at
      - banned
      - online
      - blocked_user_ids
      type: object
    UserRuleParameters:
      properties:
        max_age:
          type: string
          x-stream-index: "001"
      type: object
    UserUpdatedEvent:
      description: This event is sent when a user gets updated. The event contains
        information about the updated user.
      nullable: true
      properties:
        created_at:
          description: Date/time of creation
          format: date-time
          title: Created at
          type: number
          x-stream-index: "001.003"
        custom:
          additionalProperties: {}
          type: object
          x-stream-index: "001.007"
        received_at:
          format: date-time
          type: number
          x-stream-index: "001.004"
        type:
          default: user.updated
          description: 'The type of event: "user.updated" in this case'
          title: Event Type
          type: string
          x-stream-index: "001.002"
        user:
          $ref: '#/components/schemas/UserResponsePrivacyFields'
          description: The updated user
          title: User
          x-stream-index: "002.001"
      required:
      - type
      - created_at
      - custom
      - user
      title: UserUpdatedEvent
      type: object
      x-stream-event-client-type: true
      x-stream-event-doc-group: other
      x-stream-is-event: true
      x-stream-ws-base-event-name: VideoEvent
    VelocityFilterConfig:
      properties:
        advanced_filters:
          type: boolean
          x-stream-index: "007"
        async:
          type: boolean
          x-stream-index: "001"
        cascading_actions:
          type: boolean
          x-stream-index: "004"
        cids_per_user:
          format: int32
          type: integer
          x-stream-index: "006"
        enabled:
          type: boolean
          x-stream-index: "002"
        first_message_only:
          type: boolean
          x-stream-index: "005"
        rules:
          items:
            $ref: '#/components/schemas/VelocityFilterConfigRule'
          type: array
          x-stream-index: "003"
      type: object
    VelocityFilterConfigRule:
      properties:
        action:
          enum:
          - flag
          - shadow
          - remove
          - ban
          type: string
          x-stream-index: "001"
        ban_duration:
          format: int32
          type: integer
          x-stream-index: "002"
        cascading_action:
          enum:
          - flag
          - shadow
          - remove
          - ban
          type: string
          x-stream-index: "006"
        cascading_threshold:
          format: int64
          type: integer
          x-stream-index: "005"
        check_message_context:
          type: boolean
          x-stream-index: "009"
        fast_spam_threshold:
          format: int32
          type: integer
          x-stream-index: "007"
        fast_spam_ttl:
          format: int32
          type: integer
          x-stream-index: "010"
        ip_ban:
          type: boolean
          x-stream-index: "004"
        probation_period:
          format: int32
          type: integer
          x-stream-index: "014"
        shadow_ban:
          type: boolean
          x-stream-index: "003"
        slow_spam_ban_duration:
          format: int32
          type: integer
          x-stream-index: "012"
        slow_spam_threshold:
          format: int32
          type: integer
          x-stream-index: "008"
        slow_spam_ttl:
          format: int32
          type: integer
          x-stream-index: "011"
        url_only:
          type: boolean
          x-stream-index: "013"
      required:
      - action
      type: object
    VideoCallRuleConfig:
      properties:
        flag_all_labels:
          type: boolean
          x-stream-index: "002"
        flagged_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        rules:
          items:
            $ref: '#/components/schemas/HarmConfig'
          type: array
          x-stream-index: "001"
      type: object
    VideoContentParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "001"
      type: object
    VideoEndCallRequest:
      type: object
    VideoKickUserRequest:
      type: object
    VideoOrientation:
      properties:
        orientation:
          type: integer
          x-stream-index: "004"
      type: object
    VideoRuleParameters:
      properties:
        harm_labels:
          items:
            type: string
          type: array
          x-stream-index: "003"
        threshold:
          format: int32
          type: integer
          x-stream-index: "001"
        time_window:
          type: string
          x-stream-index: "002"
      type: object
    VideoSettings:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      - target_resolution
      - camera_default_on
      - camera_facing
      type: object
    VideoSettingsResponse:
      properties:
        access_request_enabled:
          type: boolean
          x-stream-index: "002"
        camera_default_on:
          type: boolean
          x-stream-index: "004"
        camera_facing:
          enum:
          - front
          - back
          - external
          type: string
          x-stream-index: "005"
        enabled:
          type: boolean
          x-stream-index: "001"
        target_resolution:
          $ref: '#/components/schemas/TargetResolution'
          x-stream-index: "003"
      required:
      - enabled
      - access_request_enabled
      - target_resolution
      - camera_default_on
      - camera_facing
      type: object
    VoteData:
      properties:
        answer_text:
          type: string
          x-stream-index: "002"
        option_id:
          maxLength: 255
          type: string
          x-stream-index: "001"
      type: object
    WHIPIngress:
      properties:
        address:
          description: URL for a new whip input, every time a new link is created
          title: Address
          type: string
          x-stream-index: "001"
      required:
      - address
      title: WHIPIngress
      type: object
    WebhookEvent:
      description: The discriminator object for all webhook events, it maps events'
        payload to the final type
      discriminator:
        mapping:
          export.bulk_image_moderation.error: '#/components/schemas/AsyncExportErrorEvent'
          export.bulk_image_moderation.success: '#/components/schemas/AsyncBulkImageModerationEvent'
          export.moderation_logs.error: '#/components/schemas/AsyncExportErrorEvent'
          export.moderation_logs.success: '#/components/schemas/AsyncExportModerationLogsEvent'
          feeds.activity.added: '#/components/schemas/ActivityAddedEvent'
          feeds.activity.deleted: '#/components/schemas/ActivityDeletedEvent'
          feeds.activity.marked: '#/components/schemas/ActivityMarkEvent'
          feeds.activity.pinned: '#/components/schemas/ActivityPinnedEvent'
          feeds.activity.reaction.added: '#/components/schemas/ActivityReactionAddedEvent'
          feeds.activity.reaction.deleted: '#/components/schemas/ActivityReactionDeletedEvent'
          feeds.activity.reaction.updated: '#/components/schemas/ActivityReactionUpdatedEvent'
          feeds.activity.removed_from_feed: '#/components/schemas/ActivityRemovedFromFeedEvent'
          feeds.activity.unpinned: '#/components/schemas/ActivityUnpinnedEvent'
          feeds.activity.updated: '#/components/schemas/ActivityUpdatedEvent'
          feeds.bookmark.added: '#/components/schemas/BookmarkAddedEvent'
          feeds.bookmark.deleted: '#/components/schemas/BookmarkDeletedEvent'
          feeds.bookmark.updated: '#/components/schemas/BookmarkUpdatedEvent'
          feeds.bookmark_folder.deleted: '#/components/schemas/BookmarkFolderDeletedEvent'
          feeds.bookmark_folder.updated: '#/components/schemas/BookmarkFolderUpdatedEvent'
          feeds.comment.added: '#/components/schemas/CommentAddedEvent'
          feeds.comment.deleted: '#/components/schemas/CommentDeletedEvent'
          feeds.comment.reaction.added: '#/components/schemas/CommentReactionAddedEvent'
          feeds.comment.reaction.deleted: '#/components/schemas/CommentReactionDeletedEvent'
          feeds.comment.reaction.updated: '#/components/schemas/CommentReactionUpdatedEvent'
          feeds.comment.updated: '#/components/schemas/CommentUpdatedEvent'
          feeds.feed.created: '#/components/schemas/FeedCreatedEvent'
          feeds.feed.deleted: '#/components/schemas/FeedDeletedEvent'
          feeds.feed.updated: '#/components/schemas/FeedUpdatedEvent'
          feeds.feed_group.changed: '#/components/schemas/FeedGroupChangedEvent'
          feeds.feed_group.deleted: '#/components/schemas/FeedGroupDeletedEvent'
          feeds.feed_member.added: '#/components/schemas/FeedMemberAddedEvent'
          feeds.feed_member.removed: '#/components/schemas/FeedMemberRemovedEvent'
          feeds.feed_member.updated: '#/components/schemas/FeedMemberUpdatedEvent'
          feeds.follow.created: '#/components/schemas/FollowCreatedEvent'
          feeds.follow.deleted: '#/components/schemas/FollowDeletedEvent'
          feeds.follow.updated: '#/components/schemas/FollowUpdatedEvent'
          feeds.notification_feed.updated: '#/components/schemas/NotificationFeedUpdatedEvent'
          moderation.custom_action: '#/components/schemas/ModerationCustomActionEvent'
          moderation.flagged: '#/components/schemas/ModerationFlaggedEvent'
          moderation.mark_reviewed: '#/components/schemas/ModerationMarkReviewedEvent'
          moderation_check.completed: '#/components/schemas/ModerationCheckCompletedEvent'
          review_queue_item.new: '#/components/schemas/ReviewQueueItemNewEvent'
          review_queue_item.updated: '#/components/schemas/ReviewQueueItemUpdatedEvent'
          user.banned: '#/components/schemas/UserBannedEvent'
          user.deactivated: '#/components/schemas/UserDeactivatedEvent'
          user.muted: '#/components/schemas/UserMutedEvent'
          user.reactivated: '#/components/schemas/UserReactivatedEvent'
          user.updated: '#/components/schemas/UserUpdatedEvent'
        propertyName: type
      oneOf:
      - $ref: '#/components/schemas/ActivityAddedEvent'
      - $ref: '#/components/schemas/ActivityDeletedEvent'
      - $ref: '#/components/schemas/ActivityMarkEvent'
      - $ref: '#/components/schemas/ActivityPinnedEvent'
      - $ref: '#/components/schemas/ActivityReactionAddedEvent'
      - $ref: '#/components/schemas/ActivityReactionDeletedEvent'
      - $ref: '#/components/schemas/ActivityReactionUpdatedEvent'
      - $ref: '#/components/schemas/ActivityRemovedFromFeedEvent'
      - $ref: '#/components/schemas/ActivityUnpinnedEvent'
      - $ref: '#/components/schemas/ActivityUpdatedEvent'
      - $ref: '#/components/schemas/AsyncBulkImageModerationEvent'
      - $ref: '#/components/schemas/AsyncExportErrorEvent'
      - $ref: '#/components/schemas/AsyncExportErrorEvent'
      - $ref: '#/components/schemas/AsyncExportModerationLogsEvent'
      - $ref: '#/components/schemas/BookmarkAddedEvent'
      - $ref: '#/components/schemas/BookmarkDeletedEvent'
      - $ref: '#/components/schemas/BookmarkFolderDeletedEvent'
      - $ref: '#/components/schemas/BookmarkFolderUpdatedEvent'
      - $ref: '#/components/schemas/BookmarkUpdatedEvent'
      - $ref: '#/components/schemas/CommentAddedEvent'
      - $ref: '#/components/schemas/CommentDeletedEvent'
      - $ref: '#/components/schemas/CommentReactionAddedEvent'
      - $ref: '#/components/schemas/CommentReactionDeletedEvent'
      - $ref: '#/components/schemas/CommentReactionUpdatedEvent'
      - $ref: '#/components/schemas/CommentUpdatedEvent'
      - $ref: '#/components/schemas/FeedCreatedEvent'
      - $ref: '#/components/schemas/FeedDeletedEvent'
      - $ref: '#/components/schemas/FeedGroupChangedEvent'
      - $ref: '#/components/schemas/FeedGroupDeletedEvent'
      - $ref: '#/components/schemas/FeedMemberAddedEvent'
      - $ref: '#/components/schemas/FeedMemberRemovedEvent'
      - $ref: '#/components/schemas/FeedMemberUpdatedEvent'
      - $ref: '#/components/schemas/FeedUpdatedEvent'
      - $ref: '#/components/schemas/FollowCreatedEvent'
      - $ref: '#/components/schemas/FollowDeletedEvent'
      - $ref: '#/components/schemas/FollowUpdatedEvent'
      - $ref: '#/components/schemas/ModerationCheckCompletedEvent'
      - $ref: '#/components/schemas/ModerationCustomActionEvent'
      - $ref: '#/components/schemas/ModerationFlaggedEvent'
      - $ref: '#/components/schemas/ModerationMarkReviewedEvent'
      - $ref: '#/components/schemas/NotificationFeedUpdatedEvent'
      - $ref: '#/components/schemas/ReviewQueueItemNewEvent'
      - $ref: '#/components/schemas/ReviewQueueItemUpdatedEvent'
      - $ref: '#/components/schemas/UserBannedEvent'
      - $ref: '#/components/schemas/UserDeactivatedEvent'
      - $ref: '#/components/schemas/UserMutedEvent'
      - $ref: '#/components/schemas/UserReactivatedEvent'
      - $ref: '#/components/schemas/UserUpdatedEvent'
    XiaomiConfig:
      properties:
        Disabled:
          type: boolean
          writeOnly: true
          x-stream-index: "003"
        package_name:
          type: string
          x-stream-index: "001"
        secret:
          type: string
          x-stream-index: "002"
      type: object
    XiaomiConfigFields:
      properties:
        enabled:
          type: boolean
          x-stream-index: "001"
        package_name:
          type: string
          x-stream-index: "002"
        secret:
          type: string
          x-stream-index: "003"
      required:
      - enabled
      type: object
  securitySchemes:
    JWT:
      description: |
        JWT should be always provided when stream-auth-type=jwt.

        Using JWT auth request could be authenticated as user or as server-side.

        When using user authentication permission checking is going to be applied to requests based on the user that is
        performing a request.

        The `authorization` header should be a JWT string signed using the secret attached to the API key used to perform
        requests.

        **WARNING** all client-side official SDK do not ship with token generation; this is to make sure that the API secret is not
        shared with an untrusted party such as a browser or a iOS/Android application. Tokens **must** be generated server-side.
        If you wish, you can configure your application to ignore authentication (see `disable_auth_check`)
        The JWT string must include only the user_id claim and can include any built-in JWT claim such as iat, exp as well.
      in: header
      name: Authorization
      type: apiKey
    api_key:
      description: Application API key should be always set in order to authenticate
        the request.
      in: query
      name: api_key
      type: apiKey
    stream-auth-type:
      description: |-
        Stream-Auth-Type should be always set in order to authenticate the request. Possible
        values: `jwt` or `anonymous`.

        `jwt` allows you to authenticate as a user. With this auth type you should also provide valid JWT in Authorization
        header.

        `anonymous` allows you to authenticate as anonymous user. Please note that most advanced features are not available
        to anonymous users.
      in: header
      name: Stream-Auth-Type
      type: apiKey
info:
  title: Stream API
  version: v196.2.0
openapi: 3.0.3
paths:
  /api/v2/app:
    get:
      description: |
        This Method returns the application settings
      operationId: GetApp
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetApplicationResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get App Settings
      tags:
      - product:common
    patch:
      description: |
        This Method updates one or more application settings
      operationId: UpdateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update App Settings
      tags:
      - product:common
  /api/v2/blocklists:
    get:
      description: |
        Returns all available block lists
      operationId: ListBlockLists
      parameters:
      - in: query
        name: team
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List block lists
      tags:
      - product:common
    post:
      description: |
        Creates a new application blocklist, once created the blocklist can be used by any channel type
      operationId: CreateBlockList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBlockListRequest'
        description: Block list
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create block list
      tags:
      - product:common
  /api/v2/blocklists/{name}:
    delete:
      description: |
        Deletes previously created application blocklist
      operationId: DeleteBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete block list
      tags:
      - product:common
    get:
      description: |
        Returns block list by given name
      operationId: GetBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Block list name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockListResponse'
          description: GetBlockListResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get block list
      tags:
      - product:common
    put:
      description: |
        Updates contents of the block list
      operationId: UpdateBlockList
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Block list name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBlockListRequest'
        description: Update block list
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBlockListResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update block list
      tags:
      - product:common
  /api/v2/check_push:
    post:
      description: |
        Sends a test message via push, this is a test endpoint to verify your push settings
      operationId: CheckPush
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPushRequest'
        description: CheckPushRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckPushResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check push
      tags:
      - product:common
  /api/v2/check_sns:
    post:
      description: |
        Validates Amazon SNS configuration
      operationId: CheckSNS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSNSRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSNSResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check SNS
      tags:
      - product:common
  /api/v2/check_sqs:
    post:
      description: |
        Validates Amazon SQS credentials
      operationId: CheckSQS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckSQSRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckSQSResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check SQS
      tags:
      - product:common
  /api/v2/devices:
    delete:
      description: |
        Deletes one device
      operationId: DeleteDevice
      parameters:
      - in: query
        name: id
        required: true
        schema:
          description: Device ID to delete
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete device
      tags:
      - product:common
    get:
      description: |
        Returns all available devices
      operationId: ListDevices
      parameters:
      - in: query
        name: user_id
        schema:
          description: '**Server-side only**. User ID which server acts upon'
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDevicesResponse'
          description: ListDevicesResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List devices
      tags:
      - product:common
    post:
      description: |
        Adds a new device to a user, if the same device already exists the call will have no effect
      operationId: CreateDevice
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDeviceRequest'
        description: CreateDeviceRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create device
      tags:
      - product:common
  /api/v2/export/users:
    post:
      description: |
        Exports user profile, reactions and messages for list of given users
      operationId: ExportUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportUsersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export users
      tags:
      - product:common
  /api/v2/external_storage:
    get:
      description: |
        Lists external storage
      operationId: ListExternalStorage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List external storage
      tags:
      - product:common
    post:
      description: |
        Creates new external storage
      operationId: CreateExternalStorage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExternalStorageRequest'
        description: CreateExternalStorageRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create external storage
      tags:
      - product:common
  /api/v2/external_storage/{name}:
    delete:
      description: |
        Deletes external storage
      operationId: DeleteExternalStorage
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete external storage
      tags:
      - product:common
    put:
      description: |2+

      operationId: UpdateExternalStorage
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExternalStorageRequest'
        description: ExternalStorageRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update External Storage
      tags:
      - product:common
  /api/v2/external_storage/{name}/check:
    get:
      description: |2+

      operationId: CheckExternalStorage
      parameters:
      - in: path
        name: name
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckExternalStorageResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check External Storage
      tags:
      - product:common
  /api/v2/feeds/activities:
    post:
      description: |
        Create a new activity or update an existing one
      operationId: AddActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddActivityRequest'
        description: Activity Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddActivityResponse'
          description: Add Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add a single activity
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/bookmarks:
    delete:
      description: |
        Deletes a bookmark from an activity
      operationId: DeleteBookmark
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: folder_id
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBookmarkResponse'
          description: Delete Bookmark Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a bookmark
      tags:
      - product:feeds
    patch:
      description: |
        Updates a bookmark for an activity
      operationId: UpdateBookmark
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          description: ID of the activity
          maxLength: 255
          title: Activity ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookmarkRequest'
        description: Update Bookmark Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBookmarkResponse'
          description: Update Bookmark Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update bookmark
      tags:
      - product:feeds
    post:
      description: |
        Adds a bookmark to an activity
      operationId: AddBookmark
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddBookmarkRequest'
        description: Add Bookmark Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddBookmarkResponse'
          description: Add Bookmark Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add bookmark
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/feedback:
    post:
      description: |
        Submit feedback for an activity including options to show less, hide, report, or mute the user
      operationId: ActivityFeedback
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityFeedbackRequest'
        description: Activity Feedback Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityFeedbackResponse'
          description: Activity Feedback Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Provide feedback on an activity
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/polls/{poll_id}/vote:
    post:
      description: |
        Cast a vote on a poll

        Sends events:
        - feeds.poll.vote_casted
        - feeds.poll.vote_changed
        - feeds.poll.vote_removed
        - poll.vote_casted
        - poll.vote_changed
        - poll.vote_removed
      operationId: CastPollVote
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CastPollVoteRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Cast vote
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/polls/{poll_id}/vote/{vote_id}:
    delete:
      description: |
        Delete a vote from a poll

        Sends events:
        - feeds.poll.vote_removed
        - poll.vote_removed
      operationId: DeletePollVote
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "004"
      - in: path
        name: vote_id
        required: true
        schema:
          description: Vote ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "005"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVoteResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete vote
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/reactions:
    post:
      description: |
        Adds a reaction to an activity
      operationId: AddReaction
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddReactionRequest'
        description: Add Reaction Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddReactionResponse'
          description: Add Reaction Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add reaction
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/reactions/{type}:
    delete:
      description: |
        Removes a reaction from an activity
      operationId: DeleteActivityReaction
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityReactionResponse'
          description: Delete Activity Reaction Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Remove reaction
      tags:
      - product:feeds
  /api/v2/feeds/activities/{activity_id}/reactions/query:
    post:
      description: |
        Query activity reactions
      operationId: QueryActivityReactions
      parameters:
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryActivityReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryActivityReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query activity reactions
      tags:
      - product:feeds
  /api/v2/feeds/activities/{id}:
    delete:
      description: |
        Delete a single activity by its ID
      operationId: DeleteActivity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard_delete
        schema:
          description: Whether to permanently delete the activity instead of soft
            delete
          title: boolean
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivityResponse'
          description: Delete Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a single activity
      tags:
      - product:feeds
    get:
      description: |
        Returns activity by ID
      operationId: GetActivity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetActivityResponse'
          description: Get Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get activity
      tags:
      - product:feeds
    patch:
      description: |
        Updates certain fields of the activity

        Sends events:
        - feeds.activity.updated
      operationId: UpdateActivityPartial
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityPartialResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially activity update
      tags:
      - product:feeds
    put:
      description: |
        Replaces an activity with the provided data

        Sends events:
        - feeds.activity.updated
      operationId: UpdateActivity
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateActivityRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateActivityResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Full activity update
      tags:
      - product:feeds
  /api/v2/feeds/activities/batch:
    post:
      description: |
        Create new activities or update existing ones in a batch operation
      operationId: UpsertActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertActivitiesRequest'
        description: Upsert Activities Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertActivitiesResponse'
          description: Upsert Activities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert multiple activities
      tags:
      - product:feeds
  /api/v2/feeds/activities/delete:
    post:
      description: |
        Delete one or more activities by their IDs
      operationId: DeleteActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteActivitiesRequest'
        description: Delete Activities Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteActivitiesResponse'
          description: Delete Activities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Remove multiple activities
      tags:
      - product:feeds
  /api/v2/feeds/activities/query:
    post:
      description: |
        Query activities based on filters with pagination and sorting options
      operationId: QueryActivities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryActivitiesRequest'
        description: Query Activities Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryActivitiesResponse'
          description: Query Activities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query activities
      tags:
      - product:feeds
  /api/v2/feeds/bookmark_folders/{folder_id}:
    delete:
      description: |
        Delete a bookmark folder by its ID
      operationId: DeleteBookmarkFolder
      parameters:
      - in: path
        name: folder_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBookmarkFolderResponse'
          description: Delete Bookmark Folder Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a bookmark folder
      tags:
      - product:feeds
    patch:
      description: |
        Update a bookmark folder by its ID
      operationId: UpdateBookmarkFolder
      parameters:
      - in: path
        name: folder_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBookmarkFolderRequest'
        description: Update Bookmark Folder Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBookmarkFolderResponse'
          description: Update Bookmark Folder Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a bookmark folder
      tags:
      - product:feeds
  /api/v2/feeds/bookmark_folders/query:
    post:
      description: |
        Query bookmark folders with filter query
      operationId: QueryBookmarkFolders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBookmarkFoldersRequest'
        description: Query Bookmark Folders Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBookmarkFoldersResponse'
          description: Query Bookmark Folders Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query bookmark folders
      tags:
      - product:feeds
  /api/v2/feeds/bookmarks/query:
    post:
      description: |
        Query bookmarks with filter query
      operationId: QueryBookmarks
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryBookmarksRequest'
        description: Query Bookmarks Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryBookmarksResponse'
          description: Query Bookmarks Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query bookmarks
      tags:
      - product:feeds
  /api/v2/feeds/comments:
    get:
      description: |
        Retrieve a threaded list of comments for a specific object (e.g., activity), with configurable depth, sorting, and pagination
      operationId: GetComments
      parameters:
      - in: query
        name: object_id
        required: true
        schema:
          description: ID of the object to get comments for
          title: Object ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: object_type
        required: true
        schema:
          description: Type of the object to get comments for
          enum:
          - activity
          title: Object Type
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: depth
        schema:
          description: Maximum nested depth to return (0 = only first level)
          format: int32
          maximum: 5
          minimum: 0
          title: Max Depth
          type: integer
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: sort
        schema:
          description: Sort order for the comments
          enum:
          - first
          - last
          - top
          - best
          - controversial
          title: Sort Order
          type: string
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: replies_limit
        schema:
          format: int32
          maximum: 20
          minimum: 0
          type: integer
          writeOnly: true
          x-stream-index: "005"
      - in: query
        name: limit
        schema:
          description: Max number of top‑level comments to return
          format: int32
          maximum: 100
          minimum: 0
          title: Root Limit
          type: integer
          writeOnly: true
          x-stream-index: "006.001"
      - in: query
        name: prev
        schema:
          type: string
          writeOnly: true
          x-stream-index: "006.002"
      - in: query
        name: next
        schema:
          type: string
          writeOnly: true
          x-stream-index: "006.003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentsResponse'
          description: Get  Comments Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get comments for an object
      tags:
      - product:feeds
    post:
      description: |
        Adds a comment to an object (e.g., activity) or a reply to an existing comment, and broadcasts appropriate events
      operationId: AddComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentRequest'
        description: Add Comment Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentResponse'
          description: Add Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add a comment or reply
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}:
    delete:
      description: |
        Deletes a comment from an object (e.g., activity) and broadcasts appropriate events
      operationId: DeleteComment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard_delete
        schema:
          description: Whether to permanently delete the comment instead of soft delete
          title: Hard Delete
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCommentResponse'
          description: Delete Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a comment
      tags:
      - product:feeds
    get:
      description: |
        Get a comment by ID
      operationId: GetComment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentResponse'
          description: Get Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get comment
      tags:
      - product:feeds
    patch:
      description: |
        Updates a comment on an object (e.g., activity) and broadcasts appropriate events
      operationId: UpdateComment
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCommentRequest'
        description: Update Comment Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCommentResponse'
          description: Update Comment Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a comment
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/reactions:
    post:
      description: |
        Adds a reaction to a comment
      operationId: AddCommentReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentReactionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentReactionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add comment reaction
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/reactions/{type}:
    delete:
      description: |
        Deletes a reaction from a comment
      operationId: DeleteCommentReaction
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: type
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCommentReactionResponse'
          description: Delete Comment Reaction Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete comment reaction
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/reactions/query:
    post:
      description: |
        Query comment reactions
      operationId: QueryCommentReactions
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCommentReactionsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCommentReactionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query comment reactions
      tags:
      - product:feeds
  /api/v2/feeds/comments/{id}/replies:
    get:
      description: |
        Retrieve a threaded list of replies for a single comment, with configurable depth, sorting, and pagination
      operationId: GetCommentReplies
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: depth
        schema:
          description: Maximum nested depth to return (0 = unlimited)
          format: int32
          maximum: 5
          minimum: 0
          title: Max Depth
          type: integer
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: sort
        schema:
          description: first (oldest), last (newest) or top
          enum:
          - first
          - last
          - top
          - best
          - controversial
          title: Sort Order
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: replies_limit
        schema:
          description: Max number of replies to return
          format: int32
          minimum: 0
          title: Replies Limit
          type: integer
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: limit
        schema:
          description: Max number of direct replies to return
          format: int32
          maximum: 100
          minimum: 0
          title: Reply Limit
          type: integer
          writeOnly: true
          x-stream-index: "005.001"
      - in: query
        name: prev
        schema:
          type: string
          writeOnly: true
          x-stream-index: "005.002"
      - in: query
        name: next
        schema:
          type: string
          writeOnly: true
          x-stream-index: "005.003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCommentRepliesResponse'
          description: Get Comment Replies Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get replies for a comment
      tags:
      - product:feeds
  /api/v2/feeds/comments/batch:
    post:
      description: |
        Adds multiple comments in a single request. Each comment must specify the object type and ID.
      operationId: AddCommentsBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddCommentsBatchRequest'
        description: Add Comments Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddCommentsBatchResponse'
          description: Add Comments Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Add multiple comments in a batch
      tags:
      - product:feeds
  /api/v2/feeds/comments/query:
    post:
      description: |
        Query comments using MongoDB-style filters with pagination and sorting options
      operationId: QueryComments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryCommentsRequest'
        description: Query Comments Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryCommentsResponse'
          description: Query Comments Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query comments
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups:
    get:
      description: |
        List all feed groups for the application
      operationId: ListFeedGroups
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeedGroupsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List all feed groups
      tags:
      - product:feeds
    post:
      description: |
        Creates a new feed group with the specified configuration
      operationId: CreateFeedGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedGroupRequest'
        description: Create Feed Group Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedGroupResponse'
          description: Upsert Feed Group Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a new feed group
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}:
    delete:
      description: |
        Delete a single feed by its ID
      operationId: DeleteFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: hard_delete
        schema:
          description: Whether to permanently delete the feed instead of soft delete
          title: boolean
          type: boolean
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeedResponse'
          description: Delete Feed Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a single feed
      tags:
      - product:feeds
    post:
      description: |
        Create a single feed for a given feed group
      operationId: GetOrCreateFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateFeedRequest'
        description: ClientRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrCreateFeedResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a new feed
      tags:
      - product:feeds
    put:
      description: |
        Update an existing feed
      operationId: UpdateFeed
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedRequest'
        description: Update Feed Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedResponse'
          description: Update Feed Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a feed
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/activities/{activity_id}/pin:
    delete:
      description: |
        Unpin an activity from a feed. This removes the pin, so the activity will no longer be displayed at the top of the feed.
      operationId: UnpinActivity
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "004.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnpinActivityResponse'
          description: Unpin Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unpin an activity from a feed
      tags:
      - product:feeds
    post:
      description: |
        Pin an activity to a feed. Pinned activities are typically displayed at the top of a feed.
      operationId: PinActivity
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: path
        name: activity_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PinActivityRequest'
        description: Pin Activity Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PinActivityResponse'
          description: Pin Activity Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Pin an activity to a feed
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/activities/mark/batch:
    post:
      description: |
        Mark activities as read/seen/watched. Can mark by timestamp (seen), activity IDs (read), or all as read.
      operationId: MarkActivity
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkActivityRequest'
        description: Mark Activity Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mark activities as read/seen/watched
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members:
    patch:
      description: |
        Add, remove, or set members for a feed
      operationId: UpdateFeedMembers
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedMembersRequest'
        description: Update Feed Members Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedMembersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update feed members
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members/accept:
    post:
      description: |
        Accepts a pending feed member request
      operationId: AcceptFeedMemberInvite
      parameters:
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptFeedMemberInviteRequest'
        description: Accept Feed Member Invite Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptFeedMemberInviteResponse'
          description: Accept Feed Member Invite Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Accept a feed member request
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members/query:
    post:
      description: |
        Query feed members based on filters with pagination and sorting options
      operationId: QueryFeedMembers
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFeedMembersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFeedMembersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query feed members
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/feeds/{feed_id}/members/reject:
    post:
      description: |
        Rejects a pending feed member request
      operationId: RejectFeedMemberInvite
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: feed_id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "002"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectFeedMemberInviteRequest'
        description: Reject Feed Member Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectFeedMemberInviteResponse'
          description: Reject Feed Member Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reject an invite to become a feed member
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{feed_group_id}/follow_suggestions:
    get:
      description: |
        Get follow suggestions for a feed group
      operationId: GetFollowSuggestions
      parameters:
      - in: path
        name: feed_group_id
        required: true
        schema:
          description: The ID of the feed group to get suggestions for
          maxLength: 255
          title: Feed Group ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: limit
        schema:
          description: Maximum number of suggestions to return
          format: int32
          maximum: 100
          minimum: 1
          title: Limit
          type: integer
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          description: The ID of the user requesting suggestions (optional, defaults
            to current user)
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "003.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFollowSuggestionsResponse'
          description: Follow Suggestions Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get follow suggestions
      tags:
      - product:feeds
  /api/v2/feeds/feed_groups/{id}:
    delete:
      description: |
        Delete a feed group by its ID. Can perform a soft delete (default) or hard delete.
      operationId: DeleteFeedGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: hard_delete
        schema:
          description: Whether to perform a hard delete (true) or soft delete (false,
            default)
          title: boolean
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeedGroupResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a feed group
      tags:
      - product:feeds
    get:
      description: |
        Get a feed group by ID
      operationId: GetFeedGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedGroupResponse'
          description: Get Feed Group Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get a feed group
      tags:
      - product:feeds
    post:
      description: |
        Get an existing feed group or create a new one if it doesn't exist
      operationId: GetOrCreateFeedGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Unique identifier for the feed group
          maxLength: 255
          title: Feed Group ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateFeedGroupRequest'
        description: Get Or Create Feed Group Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrCreateFeedGroupResponse'
          description: Get Or Create Feed Group Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create a feed group
      tags:
      - product:feeds
    put:
      description: |
        Update a feed group by ID
      operationId: UpdateFeedGroup
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedGroupRequest'
        description: Update Feed Group Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedGroupResponse'
          description: Update Feed Group Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a feed group
      tags:
      - product:feeds
  /api/v2/feeds/feed_views:
    get:
      description: |
        List all feed views for a feed group
      operationId: ListFeedViews
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeedViewsResponse'
          description: List Feed Views Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List all feed views
      tags:
      - product:feeds
    post:
      description: |
        Create a custom view for a feed group with specific selectors, ranking, or aggregation options
      operationId: CreateFeedView
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedViewRequest'
        description: Create Feed View Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedViewResponse'
          description: Create Feed View Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a new feed view
      tags:
      - product:feeds
  /api/v2/feeds/feed_views/{id}:
    delete:
      description: |
        Delete an existing custom feed view
      operationId: DeleteFeedView
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeedViewResponse'
          description: Delete Feed View Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a feed view
      tags:
      - product:feeds
    get:
      description: |
        Get a feed view by its ID
      operationId: GetFeedView
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedViewResponse'
          description: Get Feed View Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get a feed view
      tags:
      - product:feeds
    post:
      description: |
        Get an existing feed view or create a new one if it doesn't exist
      operationId: GetOrCreateFeedView
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrCreateFeedViewRequest'
        description: Get Or Create Feed View Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrCreateFeedViewResponse'
          description: Get Or Create Feed View Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get or create a feed view
      tags:
      - product:feeds
    put:
      description: |
        Update an existing custom feed view with new selectors, ranking, or aggregation options
      operationId: UpdateFeedView
      parameters:
      - in: path
        name: id
        required: true
        schema:
          maxLength: 255
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFeedViewRequest'
        description: Update Feed View Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFeedViewResponse'
          description: Update Feed View Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a feed view
      tags:
      - product:feeds
  /api/v2/feeds/feed_visibilities:
    get:
      description: |
        Gets all available feed visibility configurations and their permissions
      operationId: ListFeedVisibilities
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFeedVisibilitiesResponse'
          description: List Feed Visibilities Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List feed visibilities
      tags:
      - product:feeds
  /api/v2/feeds/feed_visibilities/{name}:
    get:
      description: |
        Gets feed visibility configuration and permissions
      operationId: GetFeedVisibility
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Name of the feed visibility level
          enum:
          - public
          - visible
          - followers
          - members
          - private
          title: Visibility Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFeedVisibilityResponse'
          description: Get Feed Visibility Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get feed visibility
      tags:
      - product:feeds
  /api/v2/feeds/feeds/batch:
    post:
      description: |
        Create multiple feeds at once for a given feed group
      operationId: CreateFeedsBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFeedsBatchRequest'
        description: Create Feeds Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFeedsBatchResponse'
          description: Create Feeds Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create multiple feeds at once
      tags:
      - product:feeds
  /api/v2/feeds/feeds/query:
    post:
      description: |
        Query feeds with filter query
      operationId: QueryFeeds
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFeedsRequest'
        description: Query Feeds Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFeedsResponse'
          description: Query Feeds Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query feeds
      tags:
      - product:feeds
  /api/v2/feeds/follows:
    patch:
      description: |
        Updates a follow's custom data, push preference, and follower role. Source owner can update custom data and push preference. Follower role can only be updated via server-side requests.
      operationId: UpdateFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFollowRequest'
        description: Update Follow Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFollowResponse'
          description: Update Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update a follow
      tags:
      - product:feeds
    post:
      description: |
        Creates a follow and broadcasts FollowAddedEvent
      operationId: Follow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowRequest'
        description: Follow Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleFollowResponse'
          description: Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create a follow
      tags:
      - product:feeds
  /api/v2/feeds/follows/{source}/{target}:
    delete:
      description: |
        Removes a follow and broadcasts FollowRemovedEvent
      operationId: Unfollow
      parameters:
      - in: path
        name: source
        required: true
        schema:
          description: Fully qualified ID of the source feed
          maxLength: 255
          title: Source Feed
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: target
        required: true
        schema:
          description: Fully qualified ID of the target feed
          maxLength: 255
          title: Target Feed
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnfollowResponse'
          description: Unfollow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unfollow a feed
      tags:
      - product:feeds
  /api/v2/feeds/follows/accept:
    post:
      description: |
        Accepts a pending follow request
      operationId: AcceptFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptFollowRequest'
        description: Accept Follow Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptFollowResponse'
          description: Accept Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Accept a follow request
      tags:
      - product:feeds
  /api/v2/feeds/follows/batch:
    post:
      description: |
        Creates multiple follows at once and broadcasts FollowAddedEvent for each follow
      operationId: FollowBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FollowBatchRequest'
        description: Follow Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FollowBatchResponse'
          description: Follow Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create multiple follows at once
      tags:
      - product:feeds
  /api/v2/feeds/follows/query:
    post:
      description: |
        Query follows based on filters with pagination and sorting options
      operationId: QueryFollows
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryFollowsRequest'
        description: Query Follows Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFollowsResponse'
          description: Query Follows Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query follows
      tags:
      - product:feeds
  /api/v2/feeds/follows/reject:
    post:
      description: |
        Rejects a pending follow request
      operationId: RejectFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RejectFollowRequest'
        description: Reject Follow Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectFollowResponse'
          description: Reject Follow Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reject a follow request
      tags:
      - product:feeds
  /api/v2/feeds/membership_levels:
    post:
      description: |
        Create a new membership level with tag-based access controls
      operationId: CreateMembershipLevel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMembershipLevelRequest'
        description: Create Membership Level Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateMembershipLevelResponse'
          description: Create Membership Level Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create membership level
      tags:
      - product:feeds
  /api/v2/feeds/membership_levels/{id}:
    delete:
      description: |
        Delete a membership level by its UUID. This operation is irreversible.
      operationId: DeleteMembershipLevel
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: The UUID of the membership level to delete
          maxLength: 255
          title: string
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete membership level
      tags:
      - product:feeds
    patch:
      description: |
        Update a membership level with partial updates. Only specified fields will be updated.
      operationId: UpdateMembershipLevel
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMembershipLevelRequest'
        description: Update Membership Level Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMembershipLevelResponse'
          description: Update Membership Level Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update membership level
      tags:
      - product:feeds
  /api/v2/feeds/membership_levels/query:
    post:
      description: |
        Query membership levels with filter query
      operationId: QueryMembershipLevels
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryMembershipLevelsRequest'
        description: Query Membership Levels Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryMembershipLevelsResponse'
          description: Query Membership Levels Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query membership levels
      tags:
      - product:feeds
  /api/v2/feeds/unfollow/batch:
    post:
      description: |
        Removes multiple follows at once and broadcasts FollowRemovedEvent for each one
      operationId: UnfollowBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnfollowBatchRequest'
        description: Unfollow Batch Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnfollowBatchResponse'
          description: Unfollow Batch Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unfollow multiple feeds at once
      tags:
      - product:feeds
  /api/v2/feeds/users/{user_id}/delete:
    delete:
      description: |
        Delete all activities, reactions, comments, and bookmarks for a user
      operationId: DeleteFeedUserData
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteFeedUserDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete all feed data for a user
      tags:
      - product:feeds
  /api/v2/feeds/users/{user_id}/export:
    post:
      description: |
        Export all activities, reactions, comments, and bookmarks for a user
      operationId: ExportFeedUserData
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportFeedUserDataResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export all feed data for a user
      tags:
      - product:feeds
  /api/v2/guest:
    post:
      description: |2+

      operationId: CreateGuest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGuestRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGuestResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create Guest
      tags:
      - product:common
  /api/v2/import_urls:
    post:
      description: |
        Creates a new import URL
      operationId: CreateImportURL
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImportURLRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportURLResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create import URL
      tags:
      - product:common
  /api/v2/imports:
    get:
      description: |
        Gets an import
      operationId: ListImports
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListImportsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get import
      tags:
      - product:common
    post:
      description: |
        Creates a new import
      operationId: CreateImport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateImportRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateImportResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create import
      tags:
      - product:common
  /api/v2/imports/{id}:
    get:
      description: |
        Gets an import
      operationId: GetImport
      parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetImportResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get import
      tags:
      - product:common
  /api/v2/moderation/ban:
    post:
      description: |
        Ban a user from a channel or the entire app
      operationId: ban
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BanRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BanResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Ban
      tags:
      - product:moderation
  /api/v2/moderation/bulk_image_moderation:
    post:
      description: |
        Moderate multiple images in bulk using a CSV file
      operationId: bulk_image_moderation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkImageModerationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkImageModerationResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Bulk image moderation
      tags:
      - product:moderation
  /api/v2/moderation/check:
    post:
      description: |
        Run moderation checks on the provided content
      operationId: check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Check
      tags:
      - product:moderation
  /api/v2/moderation/config:
    post:
      description: |
        Create a new moderation configuration or update an existing one. Configure settings for content filtering, AI analysis, toxicity detection, and other moderation features.
      operationId: upsert_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertConfigRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertConfigResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create or update moderation configuration
      tags:
      - product:moderation
  /api/v2/moderation/config/{key}:
    delete:
      description: |
        Delete a specific moderation policy by its name
      operationId: delete_config
      parameters:
      - in: path
        name: key
        required: true
        schema:
          description: Key of the moderation configuration to delete
          title: Key
          type: string
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          description: Team associated with the configuration
          title: Team
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteModerationConfigResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a moderation policy
      tags:
      - product:moderation
    get:
      description: |
        Retrieve a specific moderation configuration by its key and team. This configuration contains settings for various moderation features like toxicity detection, AI analysis, and filtering rules.
      operationId: get_config
      parameters:
      - in: path
        name: key
        required: true
        schema:
          description: Key of the moderation configuration to retrieve
          title: Key
          type: string
          x-stream-index: "001"
      - in: query
        name: team
        schema:
          description: Team associated with the configuration
          title: Team
          type: string
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConfigResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get moderation configuration
      tags:
      - product:moderation
  /api/v2/moderation/configs:
    post:
      description: |
        Search and filter moderation configurations across your application. This endpoint is designed for building moderation dashboards and managing multiple configuration sets.
      operationId: query_moderation_configs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationConfigsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationConfigsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query moderation configurations
      tags:
      - product:moderation
  /api/v2/moderation/custom_check:
    post:
      description: |
        Custom check, add your own AI model reports to the review queue
      operationId: custom_check
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomCheckRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomCheckResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Custom check endpoint
      tags:
      - product:moderation
  /api/v2/moderation/feeds_moderation_template:
    delete:
      description: |
        Delete a specific moderation template by its name
      operationId: V2DeleteTemplate
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteModerationTemplateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a moderation template
      tags:
      - product:moderation
    get:
      description: |
        Retrieve a list of feed moderation templates that define preset moderation rules and configurations. Limited to 100 templates per request.
      operationId: V2QueryTemplates
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryFeedModerationTemplatesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query feed moderation templates
      tags:
      - product:moderation
    post:
      description: |
        Upsert feeds template for moderation
      operationId: V2UpsertTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertModerationTemplateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertModerationTemplateResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert feeds template
      tags:
      - product:moderation
  /api/v2/moderation/flag:
    post:
      description: |
        Flag any type of content (messages, users, channels, activities) for moderation review. Supports custom content types and additional metadata for flagged content.
      operationId: flag
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FlagRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlagResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Flag content for moderation
      tags:
      - product:moderation
  /api/v2/moderation/flags:
    post:
      description: |
        Query flags associated with moderation items. This is used for building a moderation dashboard.
      operationId: query_moderation_flags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationFlagsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationFlagsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query moderation flags
      tags:
      - product:moderation
  /api/v2/moderation/logs:
    post:
      description: |
        Search and filter moderation action logs with support for pagination. View the history of moderation actions taken, including who performed them and when.
      operationId: query_moderation_logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationLogsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationLogsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query moderation action logs
      tags:
      - product:moderation
  /api/v2/moderation/moderation_rule:
    post:
      description: |
        Create or update a moderation rule that can apply app-wide or to specific moderation configs
      operationId: upsert_moderation_rule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertModerationRuleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertModerationRuleResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert moderation rule
      tags:
      - product:moderation
  /api/v2/moderation/moderation_rule/{id}:
    delete:
      description: |
        Delete an existing moderation rule
      operationId: delete_moderation_rule
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteModerationRuleResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete moderation rule
      tags:
      - product:moderation
    get:
      description: |
        Get a specific moderation rule by ID
      operationId: get_moderation_rule
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModerationRuleResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get moderation rule
      tags:
      - product:moderation
  /api/v2/moderation/moderation_rules:
    post:
      description: |
        Search and filter moderation rules across your application. This endpoint is designed for building moderation dashboards and managing multiple rule sets.
      operationId: query_moderation_rules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryModerationRulesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryModerationRulesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query moderation rules
      tags:
      - product:moderation
  /api/v2/moderation/mute:
    post:
      description: |
        Mute a user. Mutes are generally not visible to the user you mute, while block is something you notice.
      operationId: mute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MuteRequest'
        description: MuteRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MuteResponse'
          description: MuteResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Mute
      tags:
      - product:moderation
  /api/v2/moderation/review_queue:
    post:
      description: |
        Query review queue items allows you to filter the review queue items. This is used for building a moderation dashboard.
      operationId: query_review_queue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryReviewQueueRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryReviewQueueResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query review queue items
      tags:
      - product:moderation
  /api/v2/moderation/review_queue/{id}:
    get:
      description: |
        Retrieve a specific review queue item by its ID
      operationId: get_review_queue_item
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Unique identifier of the review queue item to retrieve
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReviewQueueItemResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get review queue item
      tags:
      - product:moderation
  /api/v2/moderation/submit_action:
    post:
      description: |
        Take action on flagged content, such as marking content as safe, deleting content, banning users, or executing custom moderation actions. Supports various action types with configurable parameters.
      operationId: submit_action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitActionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitActionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Submit moderation action
      tags:
      - product:moderation
  /api/v2/moderation/unban:
    post:
      description: |
        Unban a user from a channel or globally.
      operationId: unban
      parameters:
      - in: query
        name: target_user_id
        required: true
        schema:
          description: ID of the user to unban
          title: Target User ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: channel_cid
        schema:
          description: Channel where the unban applies
          title: Channel CID
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: created_by
        schema:
          description: ID of the user who created the ban
          title: Created By
          type: string
          writeOnly: true
          x-stream-index: "003"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnbanRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbanResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unban
      tags:
      - product:moderation
  /api/v2/moderation/unmute:
    post:
      description: |
        Unmute a user
      operationId: unmute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnmuteRequest'
        description: UnmuteRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnmuteResponse'
          description: UnmuteResponse
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unmute a user
      tags:
      - product:moderation
  /api/v2/og:
    get:
      description: |
        Get an OpenGraph attachment for a link
      operationId: GetOG
      parameters:
      - in: query
        name: url
        required: true
        schema:
          description: URL to be scraped
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOGResponse'
          description: Get OG Attachment
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get OG
      tags:
      - product:common
  /api/v2/permissions:
    get:
      description: |
        Lists all available permissions
      operationId: ListPermissions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPermissionsResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List permissions
      tags:
      - product:common
  /api/v2/permissions/{id}:
    get:
      description: |
        Gets custom permission
      operationId: GetPermission
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Permission ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCustomPermissionResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get permission
      tags:
      - product:common
  /api/v2/polls:
    post:
      description: |
        Creates a new poll
      operationId: CreatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollRequest'
        description: Create Poll Request
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll
      tags:
      - product:common
    put:
      description: |
        Updates a poll

        Sends events:
        - feeds.poll.closed
        - feeds.poll.updated
        - poll.closed
        - poll.updated
      operationId: UpdatePoll
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll
      tags:
      - product:common
  /api/v2/polls/{poll_id}:
    delete:
      description: |
        Deletes a poll

        Sends events:
        - feeds.poll.deleted
        - poll.deleted
      operationId: DeletePoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll
      tags:
      - product:common
    get:
      description: |
        Retrieves a poll
      operationId: GetPoll
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll
      tags:
      - product:common
    patch:
      description: |
        Updates a poll partially

        Sends events:
        - feeds.poll.closed
        - feeds.poll.updated
        - poll.closed
        - poll.updated
      operationId: UpdatePollPartial
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partial update poll
      tags:
      - product:common
  /api/v2/polls/{poll_id}/options:
    post:
      description: |
        Creates a poll option

        Sends events:
        - feeds.poll.updated
        - poll.updated
      operationId: CreatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create poll option
      tags:
      - product:common
    put:
      description: |
        Updates a poll option

        Sends events:
        - feeds.poll.updated
        - poll.updated
      operationId: UpdatePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePollOptionRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update poll option
      tags:
      - product:common
  /api/v2/polls/{poll_id}/options/{option_id}:
    delete:
      description: |
        Deletes a poll option

        Sends events:
        - feeds.poll.updated
        - poll.updated
      operationId: DeletePollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete poll option
      tags:
      - product:common
    get:
      description: |
        Retrieves a poll option
      operationId: GetPollOption
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: path
        name: option_id
        required: true
        schema:
          description: Option ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "003"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollOptionResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get poll option
      tags:
      - product:common
  /api/v2/polls/{poll_id}/votes:
    post:
      description: |
        Queries votes
      operationId: QueryPollVotes
      parameters:
      - in: path
        name: poll_id
        required: true
        schema:
          description: Poll ID
          maxLength: 255
          title: string
          type: string
          x-stream-index: "002"
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollVotesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PollVotesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query votes
      tags:
      - product:common
  /api/v2/polls/query:
    post:
      description: |
        Queries polls
      operationId: QueryPolls
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryPollsRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPollsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query polls
      tags:
      - product:common
  /api/v2/push_preferences:
    post:
      description: |
        Upserts the push preferences for a user and or channel member. Set to all, mentions or none
      operationId: UpdatePushNotificationPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPushPreferencesRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertPushPreferencesResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Push notification preferences
      tags:
      - product:common
  /api/v2/push_providers:
    get:
      description: |
        List details of all push providers.
      operationId: ListPushProviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPushProvidersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List push providers
      tags:
      - product:common
    post:
      description: |
        Upsert a push provider for v2 with multi bundle/package support
      operationId: UpsertPushProvider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPushProviderRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertPushProviderResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert a push provider
      tags:
      - product:common
  /api/v2/push_providers/{type}/{name}:
    delete:
      description: |
        Delete a push provider from v2 with multi bundle/package support. v1 isn't supported in this endpoint
      operationId: DeletePushProvider
      parameters:
      - in: path
        name: type
        required: true
        schema:
          enum:
          - apn
          - firebase
          - huawei
          - xiaomi
          type: string
          writeOnly: true
          x-stream-index: "001"
      - in: path
        name: name
        required: true
        schema:
          maxLength: 36
          minLength: 1
          type: string
          writeOnly: true
          x-stream-index: "002"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete a push provider
      tags:
      - product:common
  /api/v2/push_templates:
    get:
      description: |
        Retrieve push notification templates for Chat.
      operationId: GetPushTemplates
      parameters:
      - in: query
        name: push_provider_name
        schema:
          description: Push provider name to filter templates
          title: string
          type: string
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: push_provider_type
        required: true
        schema:
          description: Push provider type (firebase, apn) to filter templates
          enum:
          - firebase
          - apn
          title: string
          type: string
          writeOnly: true
          x-stream-index: "003"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPushTemplatesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get push notification templates
      tags:
      - product:common
    post:
      description: |
        Create or update a push notification template for a specific event type and push provider
      operationId: UpsertPushTemplate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPushTemplateRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpsertPushTemplateResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert a push notification template
      tags:
      - product:common
  /api/v2/rate_limits:
    get:
      description: |
        Get rate limits usage and quotas
      operationId: GetRateLimits
      parameters:
      - in: query
        name: server_side
        schema:
          description: Whether to include server-side platform limits or not
          title: Server-side
          type: boolean
          writeOnly: true
          x-stream-index: "001"
      - in: query
        name: android
        schema:
          description: Whether to include Android platform limits or not
          title: Android
          type: boolean
          writeOnly: true
          x-stream-index: "002"
      - in: query
        name: ios
        schema:
          description: Whether to include iOS platform limits or not
          title: iOS
          type: boolean
          writeOnly: true
          x-stream-index: "003"
      - in: query
        name: web
        schema:
          description: Whether to include web platform limits or not
          title: Web
          type: boolean
          writeOnly: true
          x-stream-index: "004"
      - in: query
        name: endpoints
        schema:
          description: Specific endpoints to show limits for, as a comma-separated
            list of values
          title: Endpoints
          type: string
          writeOnly: true
          x-stream-index: "005"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRateLimitsResponse'
          description: Get Rate Limits Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get rate limits
      tags:
      - product:common
  /api/v2/roles:
    get:
      description: |
        Lists all available roles
      operationId: ListRoles
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRolesResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: List roles
      tags:
      - product:common
    post:
      description: |
        Creates custom role
      operationId: CreateRole
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRoleResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Create role
      tags:
      - product:common
  /api/v2/roles/{name}:
    delete:
      description: |
        Deletes custom role
      operationId: DeleteRole
      parameters:
      - in: path
        name: name
        required: true
        schema:
          description: Role name
          title: Name
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete role
      tags:
      - product:common
  /api/v2/tasks/{id}:
    get:
      description: |
        Gets status of a task
      operationId: GetTask
      parameters:
      - in: path
        name: id
        required: true
        schema:
          description: Task ID
          title: ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTaskResponse'
          description: Get Task Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get status of a task
      tags:
      - product:common
  /api/v2/uploads/file:
    delete:
      description: |
        Deletes previously uploaded file
      operationId: DeleteFileGlobal
      parameters:
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete file
      tags:
      - product:common
      x-stream-sdk-name: DeleteFile
    post:
      description: |
        Uploads file
      operationId: UploadFileGlobal
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload file
      tags:
      - product:common
      x-stream-sdk-name: UploadFile
  /api/v2/uploads/image:
    delete:
      description: |
        Deletes previously uploaded image
      operationId: DeleteImageGlobal
      parameters:
      - in: query
        name: url
        schema:
          description: File URL to delete
          title: URL
          type: string
          writeOnly: true
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete image
      tags:
      - product:common
      x-stream-sdk-name: DeleteImage
    post:
      description: |
        Uploads image
      operationId: UploadImageGlobal
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImageUploadRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImageUploadResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upload image
      tags:
      - product:common
      x-stream-sdk-name: UploadImage
  /api/v2/users:
    get:
      description: |
        Find and filter users
      operationId: QueryUsers
      parameters:
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryUsersPayload'
              x-stream-index: "001"
        in: query
        name: payload
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Query users
      tags:
      - product:common
    patch:
      description: |
        Updates certain fields of the user

        Sends events:
        - user.presence.changed
        - user.updated
        - user.presence.changed
      operationId: UpdateUsersPartial
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersPartialRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Partially update user
      tags:
      - product:common
    post:
      description: |
        Update or create users in bulk

        Sends events:
        - user.updated
      operationId: UpdateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Upsert users
      tags:
      - product:common
  /api/v2/users/{user_id}/deactivate:
    post:
      description: |
        Deactivates user with possibility to activate it back

        Sends events:
        - user.deactivated
      operationId: DeactivateUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User ID
          type: string
          writeOnly: true
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deactivate user
      tags:
      - product:common
  /api/v2/users/{user_id}/export:
    get:
      description: |
        Exports the user's profile, reactions and messages. Raises an error if a user has more than 10k messages or reactions
      operationId: ExportUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User ID
          type: string
          x-stream-index: "001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Export user
      tags:
      - product:common
  /api/v2/users/{user_id}/reactivate:
    post:
      description: |
        Activates user who's been deactivated previously

        Sends events:
        - user.reactivated
      operationId: ReactivateUser
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User ID
          type: string
          x-stream-index: "001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactivateUserRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactivateUserResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reactivate user
      tags:
      - product:common
  /api/v2/users/block:
    get:
      description: |
        Get list of blocked Users
      operationId: GetBlockedUsers
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "002.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockedUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get list of blocked Users
      tags:
      - product:common
    post:
      description: |
        Block users
      operationId: BlockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Block user
      tags:
      - product:common
  /api/v2/users/deactivate:
    post:
      description: |
        Deactivate users in batches

        Sends events:
        - user.deactivated
      operationId: DeactivateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeactivateUsersRequest'
        description: DeactivateUsersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeactivateUsersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Deactivate users
      tags:
      - product:common
  /api/v2/users/delete:
    post:
      description: |
        Deletes users and optionally all their belongings asynchronously.

        Sends events:
        - channel.deleted
        - user.deleted
      operationId: DeleteUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Delete Users
      tags:
      - product:common
  /api/v2/users/live_locations:
    get:
      description: |
        Retrieves all active live locations for a user
      operationId: GetUserLiveLocations
      parameters:
      - in: query
        name: user_id
        schema:
          description: User ID to get live locations for. If not provided, returns
            live locations for the authenticated user.
          title: string
          type: string
          writeOnly: true
          x-stream-index: "001.001"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLocationsResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Get user live locations
      tags:
      - product:common
    put:
      description: |
        Updates an existing live location with new coordinates or expiration time
      operationId: UpdateLiveLocation
      parameters:
      - in: query
        name: user_id
        schema:
          type: string
          writeOnly: true
          x-stream-index: "005.001"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLiveLocationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLocationResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Update live location
      tags:
      - product:common
  /api/v2/users/reactivate:
    post:
      description: |
        Reactivate users in batches

        Sends events:
        - user.reactivated
        - user.reactivated
      operationId: ReactivateUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReactivateUsersRequest'
        description: ReactivateUsersRequest
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReactivateUsersResponse'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Reactivate users
      tags:
      - product:common
  /api/v2/users/restore:
    post:
      description: |
        Restore soft deleted users
      operationId: RestoreUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
          description: Response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Restore users
      tags:
      - product:common
  /api/v2/users/unblock:
    post:
      description: |
        Unblock users
      operationId: UnblockUsers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnblockUsersRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnblockUsersResponse'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Bad request
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIError'
          description: Too many requests
      summary: Unblock user
      tags:
      - product:common
security:
- JWT: []
  api_key: []
  stream-auth-type: []
- api_key: []
  stream-auth-type: []
servers:
- description: Stream API
  url: https://chat.stream-io-api.com
